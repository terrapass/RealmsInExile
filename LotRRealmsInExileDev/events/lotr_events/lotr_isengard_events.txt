namespace = isengard

#### INDEX ####
### Maintenance & Shared: 0000-0099
# 0001 - Check for valid war targets in Dunland unification
# 0002 - The War for Rohan (placed here as it can fire from multiple events)
# 0003 - The War for Rohan - Isengard Victory (placed here as it can fire from multiple events)
# 0004 - The War for Rohan - Rohan Victory (placed here as it can fire from multiple events)
# 0005 - A Puppet in Rohan
# 0006 - A Marriage for the New King
# 0007 - An Offer of Marriage
#
### General: 0100-0199
## Introduction
# 0101 - The Lord of Isengard
# 0102 - My Search for the One
# 0103 - The Palantír
#
### Align with Sauron: 0200-0299
## General Align Events
# 0201 - An Army Worthy of Mordor
# 0202 - Wildmen of the West
# 0203 - A New Breed of Uruk
#
## Dunlendings
# 0210 - The Petty Kings of Dunland
# 0211 - A Messenger from the White Wizard
# 0212 - A High King Bends the Knee
# 0213 - An Offer Refused
#
## Uruk Hai
# 0220 - The Infantry of the Uruk-hai
# 0221 - The Archers of the Uruk-hai
# 0222 - My Army's Secret Weapon
# 0223 - The Most Loyal of Uruks
#
## The Industry of Isengard
# 0230 - The Engines of War
# 0231 - A Shortage of Materials
# 0232 - The Pits of Isengard
# 0233 - A Hunger for Steel
# 0234 - Logging in Fangorn
# 0235 - The Forges of Isengard
# 0236 - The Endless Drive of Industry
# 0237 - An Ancient Horror Uncovered
# 0238 - A Horror Vanquished
# 0239 - A Subterranean Complex
#
## Dealing with Rohan
# 0250 - The Question of Rohan
# 0251 - An Ultimatum from Isengard
# 0252 - The Folly of Rohan
# 0253 - The Submission of Rohan
# 0260 - Our Man in Edoras
# 0261 - Corruption of Theoden
# 0262 - The Ailing of the King
# 0263 - The White Wizard Arrives
# 0270 - Organise Raids on the Westfold
# 0271 - Reports of Raiders
# 0272 - Pillaging of the Westfold
# 0273 - The Fall of Theodred
# 0274 - The Treachery of Isengard
# 0275 - Signs of Treachery
# 0276 - A Worm Exposed
# 0277 - The Rot of the Riddermark
# 0278 - The Worm Submits
# 0279 - Developments in Rohan
# 0280 - Seeking Alliances
# 0290 - The Execution of Theodred
#
### Evil Post-War Events: 0300-0399
## General Align Events
# 0300 - The Extent of my Ambitions
#
### Resist Sauron: 0500-0599
## General Resist Events
# 0501 - The Fate of the Palantír
# 0502 - A New Way Forward
#
## The White Council
# 0510 - Summon the White Council
# 0511 - The Wisdom of Gandalf
# 0512 - The Counsel of Elrond
# 0513 - The Intellect of Galadriel
# 0513 - The Intuition of Radagast - Pre-emptive strike on Dol Guldur?
# 0514 - The Wisdom of Alatar
# 0515 - The Vision of Pallando
# 0516 - The Alliance of the Wise
#
## Swear Fealty to Gondor
# 0520 - An Advisor to Gondor
# 0521 - MATT STUFF
#
## Swear Fealty to Rohan
# 0530 - An Advisor to Rohan
# 0531 - Rapproachment with Dunland
#
## Remain Independent
# 0550 - Warden of the West

#--------------------------------------------------------------------------#

### Maintenance & Shared ###

isengard.0001 = { # Check for valid war targets in Dunland unification
	hidden = yes
	type = empty

	trigger = {
		exists = scope:respondent
		is_ai = yes
	}

	immediate = {
		if = {
			limit = {
				scope:respondent = {
					any_character_to_title_neighboring_county = {
						kingdom = title:k_dunland
						holder = { is_independent_ruler = yes }
					}
					is_at_war = no
				}
			}
			scope:respondent = {
				random_character_to_title_neighboring_county = {
					limit = {
						kingdom = title:k_dunland
						holder = { is_independent_ruler = yes }
					}
					save_scope_as = newtarget
					holder = { save_scope_as = newenemy }
				}
			}
			start_war = {
				cb = claim_cb
				target = scope:newenemy
				claimant = scope:respondent
				target_title = scope:newtarget
			}
			every_character_war = {
				add_attacker = scope:saruman
			}
			scope:saruman = {
				send_interface_toast = {
					left_icon = root
					right_icon = scope:newenemy
					title = isengard.0001.toast.t
					custom_tooltip = isengard.0001.toast.desc
				}
			}
		}
		scope:respondent = {
			trigger_event = {
				id = isengard.0001
				days = { 200 500 }
			}
		}
	}

}

isengard.0002 = { # The War for Rohan
	type = character_event
	title = isengard.0002.t
	desc = isengard.0002.desc
	theme = martial
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = title:k_rohan.holder
		animation = personality_callous
	}

	option = { # Begin the War
		name = isengard.0002.a
		start_war = {
			casus_belli = rohan_war_cb
			target = title:k_rohan.holder
			target_title = title:k_rohan
		}
	}
}

isengard.0003 = { # The War for Rohan - Isengard Victory
	type = character_event
	title = isengard.0003.t
	desc = isengard.0003.desc
	theme = dread
	left_portrait = {
		character = root
		animation = war_over_win
	}

	option = {
		name = isengard.0003.a
		add_character_flag = rohan_war_victory
	}
}

isengard.0004 = { # The War for Rohan - Rohan Victory
	type = character_event
	title = isengard.0004.t
	desc = isengard.0004.desc
	theme = dread
	left_portrait = {
		character = root
		animation = war_over_win
	}
	
	option = {
		name = isengard.0004.a
	}
}

isengard.0005 = { # A Puppet in Rohan
	type = character_event
	title = isengard.0005.t
	desc = isengard.0005.desc
	theme = intrigue
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = title:k_rohan.holder
		animation = war_over_loss
	}
	lower_left_portrait = scope:dunlendingcandidate
	lower_right_portrait = scope:agent
	lower_center_portrait = scope:urukcandidate

	immediate = {
		add_character_flag = rohan_war_victory
		save_agent_in_edoras_scope = yes # Find head agent in Edoras and save_scope_as agent
		save_urukcandidate_high_martial_urukhai_scope = yes # Find a high martial Uruk-hai and save_scope_as urukcandidate
		save_dunlendingcandidate_scope = yes # Find a high martial Uruk-hai and save_scope_as urukcandidate
		become_isengard_unleashed_if_not_emperor = yes # Get imperial title if not already earned
	}

	option = { # Install the chief of my agents
		name = isengard.0005.a
		trigger = { exists = scope:agent }
		make_target_character_ruler_of_rohan = { TARGET = scope:agent }
		scope:agent = {
			make_character_submit_to_root = yes
			trigger_event = isengard.0006
		}
	}

	option = { # Install one of my loyal Uruk-hai
		name = isengard.0005.b
		trigger = { exists = scope:urukcandidate }
		make_target_character_ruler_of_rohan = { TARGET = scope:urukcandidate }
		scope:urukcandidate = {
			make_character_submit_to_root = yes
		}
	}

	option = { # Restore Dunlending rule to Rohan
		name = isengard.0005.c
		trigger = { exists = scope:dunlendingcandidate }
		make_target_character_ruler_of_rohan = { TARGET = scope:dunlendingcandidate }
		scope:dunlendingcandidate = {
			make_character_submit_to_root = yes
			trigger_event = isengard.0006
		}
	}

	option = { # Keep it all for myself...
		name = isengard.0005.d
		make_target_character_ruler_of_rohan = { TARGET = root }
	}
}

isengard.0006 = { # A Marriage for the New King
	type = character_event
	title = isengard.0006.t
	desc = isengard.0006.desc
	theme = marriage
	left_portrait = {
		character = root
		animation = flirtation_left
	}
	right_portrait = {
		character = character:6000035
		animation = admiration
	}
	
	trigger = {
		is_married = no
		character:6000035 = {
			is_alive = yes
			is_married = no
		}
	}

	option = { # Attempt to marry Eowyn
		name = isengard.0006.a
		character:6000035 = {
			trigger_event = isengard.0007
		}
	}

	option = { # My heart longs for another
		name = isengard.0006.b
	}
}

isengard.0007 = { # A Marriage Offer from the King of Rohan
	type = character_event
	title = isengard.0007.t
	desc = isengard.0007.desc
	theme = dread
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = title:k_rohan.holder
		animation = flirtation
	}
	
	trigger = {
		is_married = no
		title:k_rohan.holder = {
			is_alive = yes
			is_married = no
		}
	}

	immediate = {
		title:k_rohan.holder = {
			save_scope_as = suitor
		}
		save_scope_as = eowyn
	}

	option = { # Accept
		name = isengard.0007.a
		remove_trait = cannot_marry
		show_as_tooltip = {
			marry = title:k_rohan.holder
		}
		title:k_rohan.holder = {
			send_interface_toast = {
				left_icon = title:k_rohan.holder
				right_icon = character:6000035
				title = isengard.0007.a.toast
				marry = character:6000035				
			}
		}
	}

	option = { # Refuse and flee
		name = isengard.0007.b
		trigger = {
			OR = {
				exists = title:e_gondor_steward.holder
				exists = title:e_gondor.holder
				exists = title:e_castamir.holder
			}
		}
		if = {
			limit = {
				exists = title:e_gondor_steward.holder
			}
			set_employer = title:e_gondor_steward.holder
		}
		else_if = {
			limit = {
				exists = title:e_gondor.holder
			}
			set_employer = title:e_gondor.holder
		}
		else = {
			limit = {
				exists = title:e_castamir.holder
			}
			set_employer = title:e_castamir.holder
		}
		title:k_rohan.holder = {
			send_interface_toast = {
				left_icon = title:k_rohan.holder
				right_icon = character:6000035
				title = isengard.0007.b.toast
			}
		}	
	}
}

### Introduction ###

isengard.0101 = { # The Lord of Isengard
	type = character_event
	title = isengard.0101.t
	desc = isengard.0101.desc
	theme = stewardship_domain_focus
	left_portrait = {
		character = root
		animation = personality_bold
	}
	lower_left_portrait = scope:beren
	lower_right_portrait = scope:helm
	right_portrait = {
		character = scope:frealaf
		animation = personality_content
	}

	immediate = {
		character:linesteward31 = { save_scope_as = beren }
		character:linesteward38 = { save_scope_as = denethor }
		character:6000010 = { save_scope_as = frealaf }
		character:6000008 = { save_scope_as = helm }
		character:lineoffreca3 = { save_scope_as = wulf }
		title:c_isengard = { save_scope_as = title_c_isengard }
	}

	option = { # And so have I remained for the last 240 years...
		name = isengard.0101.a
		trigger_event = {
			id = isengard.0102
			days = 5
		}
	}
}

isengard.0102 = { # My Search for the One
	type = character_event
	title = isengard.0102.t
	desc = isengard.0102.desc
	theme = stewardship_domain_focus
	left_portrait = {
		character = root
		animation = personality_rational
	}

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
	}

	option = { # I must find the One Ring and bring order to Middle-earth!
		name = isengard.0102.a
		character:lineofsaruman = {
			create_artifact_palantir_orthanc_effect = { OWNER = this }
		}
		custom_tooltip = isengard.0102.a.tt
		# root.culture = { add_innovation = innovation_numenorean_architecture_01 } #Why?
		add_character_flag = saruman_palantir_introduction
		trigger_event = {
			id = isengard.0103
			days = 5
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # This stone has corrupted my heart for long enough...
		name = isengard.0102.b
		custom_tooltip = isengard.0102.b.tt
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	# 	add_prestige = medium_prestige_loss
	# 	add_piety = minor_piety_gain
	# 	create_title_and_vassal_change = {
	# 		type = swear_fealty
	# 		save_scope_as = title_change
	# 		add_claim_on_loss = no
	# 	}
	# 	change_liege = {
	# 		liege = scope:denethor
	# 		change = scope:title_change
	# 	}
	# 	root = { save_scope_as = recipient }
	# 	scope:denethor = { save_scope_as = actor }
	# 	scope:actor = { trigger_event = char_interaction.0101 }
	# 	resolve_title_and_vassal_change = scope:title_change
	# 	hidden_effect = { # A most advantagous vassalship.
	# 		set_vassal_contract_modification_blocked = yes
	# 		vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 0 }
	# 		vassal_contract_set_obligation_level = { type = feudal_government_levies level = 0 }
	# 		vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
	# 		vassal_contract_set_obligation_level = { type = council_rights level = 1 }
	# #		vassal_contract_set_obligation_level = { type = war_declaration_rights level = 1 }
	# 		vassal_contract_set_obligation_level = { type = title_revocation_rights level = 1 }
	# 	}
	# 	# A Wizard in the Hall of Kings.
	# 	trigger_event = {
	# 		id = saruman.0005
	# 		days = { 900 3300 }
	# 	}
	# 	# Consolidation of Dunland.
	# 	trigger_event = {
	# 		id = saruman.0007
	# 		days = { 900 3300 }
	# 	}
	# 	ai_chance = { base = 0 }
	}
}

isengard.0103 = { # The Palantír
	type = character_event
	title = isengard.0103.t
	desc = isengard.0103.desc
	theme = intrigue
	left_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:sauron
		animation = anger
	}
	artifact = {
		target = scope:palantir_orthanc
		position = lower_center_portrait
		trigger = { exists = scope:palantir_orthanc }
	}
	
	immediate = {
		play_music_cue = "lotr_action_evil_01"
		random_character_artifact = {
			limit = { has_variable = palantir_orthanc }
			save_scope_as = palantir_orthanc
		}
	}

	option = { # Saruman pledges allegiance to you, Lord Sauron.
		name = isengard.0103.a
		custom_tooltip = isengard.0103.a.tt
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:k_isengard = {
			change_title_holder = {
				holder = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		set_culture = culture:istari_evil
		set_character_faith = faith:lidless_eye
		capital_county = { set_county_faith = faith:lidless_eye }
		add_character_flag = saruman_accepted_sauron
		add_stress = medium_stress_impact_gain
		scope:sauron = {
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 40
			}
		}
		trigger_event = { # Build me an army worth of Mordor
			id = isengard.0201
			days = 1 # 365
		}
		# trigger_event = { # Cult of the White Hand.
		# 	id = saruman.0006
		# 	days = { 900 2100 }
		# }
		# Thrydan of the Wildmen of Dunland.
		#	Isengarder rebellion.
		#	Thrydan gathers armies.
		# Wulfgar Brynjarsson of the Frecalings.
		#	Wulfgar gathers armies.
		#	Wulfdene Wulfdening of the Frecalings.
		#		Wulfdene gathers armies.
		#	The tribe of Morcad.
		#	The tribe of Galtrev.
		#	The tribe of Starkmoors.
		#	The tribe of Carreglyn (Bog Barrows).
		#	West Marches.
		#	Dunlending rejection.
		#		Burning of Dunland (Ravndal, Nen Gwathlo).
		ai_chance = {
			base = 100
		}
	}
	option = { # You shall not have the Orthanc Stone, Dark Lord.
		name = isengard.0103.b
		custom_tooltip = isengard.0103.b.tt
		add_dread = 26
		add_stress = 285
		#Add permanent modifier stress gain
		add_character_flag = saruman_rejected_sauron
		ai_chance = {
			base = 0
		}
	}
}

### Evil: General Align with Sauron Events ###

isengard.0201 = { # The First Command of Sauron
	type = character_event
	title = isengard.0201.t
	desc = isengard.0201.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:sauron
		animation = anger
	}
	lower_right_portrait = scope:grishnakh

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
		create_character = {
			name = Grishn_akh
			gender = male
			age = 49
			culture = culture:ungurhai
			faith = faith:lidless_eye	
			trait = impatient
			trait = gluttonous
			trait = deceitful
			trait = education_martial_2
			trait = military_engineer
			save_scope_as = grishnakh
		}
	}

	option = { # We have work to do.
		name = isengard.0201.a
		custom_tooltip = isengard.0201.a.tt
		scope:grishnakh = {
			set_employer = root
		}
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = isengard_orc_event_troops
			men_at_arms = {
				type = orc_warriors
				stacks = 1
			}
			men_at_arms = {
				type = orc_archers
				stacks = 1
			}
			men_at_arms = {
				type = mountainorc_warriors
				stacks = 1
			}
			location = capital_province
		}
		add_character_flag = saruman_build_me_an_army
	}
}

### Evil: Dunlending ###

isengard.0210 = { # The Petty Kings of Dunland
	type = character_event
	title = isengard.0210.t
	desc = isengard.0210.desc
	theme = diplomacy
	left_portrait = {
		character = root
		animation = personality_rational
	}
	lower_left_portrait = scope:dunlandfellsruler
	lower_right_portrait = scope:dathabharuler
	lower_center_portrait = scope:thirdruler
	right_portrait = {
		character = scope:warmonger
		animation = anger
	}

	immediate = {
		if = {
			limit = {
				exists = title:d_dunlandfells.holder
				NOT = {
					title:d_dunlandfells.holder = root
				}
			}
			title:d_dunlandfells.holder = { save_scope_as = dunlandfellsruler }
		}
		if = {
			limit = {
				exists = title:d_dathabha.holder
				NOR = {
					title:d_dathabha.holder = title:d_dunlandfells.holder
					title:d_dathabha.holder = root
				}
			}
			title:d_dathabha.holder = { save_scope_as = dathabharuler }
		}
		if = {
			limit = {
				exists = title:d_dunlending_wilds.holder
				NOR = {
					title:d_dunlending_wilds.holder = title:d_dunlandfells.holder
					title:d_dunlending_wilds.holder = title:d_dathabha.holder
					title:d_dunlending_wilds.holder = root
				}
			}
			title:d_dunlending_wilds.holder = { save_scope_as = thirdruler }
		}
		else_if = {
			limit = {
				exists = title:d_dunfearn.holder
				NOR = {
					title:d_dunfearn.holder = title:d_dunlandfells.holder
					title:d_dunfearn.holder = title:d_dathabha.holder
					title:d_dunfearn.holder = root
				}
			}
			title:d_dunfearn.holder = { save_scope_as = thirdruler }
		}
		if = {
			limit = {
				any_courtier = {
					is_orc = yes 
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = warmonger
			}
		}
		else = {
			random_courtier = {
				save_scope_as = warmonger
			}
		}
		if = {
			limit = {
				any_courtier = {
					is_orc = no
				}
			}
			random_courtier = {
				limit = { is_orc = no }
				save_scope_as = emissary
			}
		}
		else = {
			random_courtier = {
				save_scope_as = emissary
			}
		}
		character:6000010 = { save_scope_as = frealaf }
		character:lineoffreca3 = { save_scope_as = wulf }
		save_scope_as = saruman
	}

	option = { # Send Emissary to potential ruler of Dunlandfells
		name = isengard.0210.a
		trigger = { exists = scope:dunlandfellsruler }
		if = {
			limit = { scope:dunlandfellsruler.dynasty = dynasty:dynasty_freca }
			custom_tooltip = isengard.0210.a.tt
			custom_tooltip = isengard.0210.a.tt2
		}
		else = { custom_tooltip = isengard.0210.a.tt.alt }
		add_character_flag = offer_to_dunlandfells
		scope:dunlandfellsruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential ruler of Dathabha
		name = isengard.0210.b
		trigger = { exists = scope:dathabharuler }
		if = {
			limit = { scope:dathabharuler = { has_trait = education_intrigue }  }
			custom_tooltip = isengard.0210.b.tt
			custom_tooltip = isengard.0210.b.tt2
		}
		else = { custom_tooltip = isengard.0210.b.tt.alt }
		add_character_flag = offer_to_dathabha
		scope:dathabharuler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential third ruler
		name = isengard.0210.c
		trigger = { exists = scope:thirdruler }
		custom_tooltip = isengard.0210.c.tt
		add_character_flag = offer_to_thirdruler
		scope:thirdruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # These backward men have nothing to offer us.
		name = isengard.0210.d
		custom_tooltip = isengard.0210.d.tt
		add_character_modifier = enemy_of_the_dunlendings_character_modifier
		hidden_effect = {
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:dathabharuler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:dathabharuler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:dathabharuler
					scope:dathabharuler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:thirdruler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dathabharuler
					exists = scope:thirdruler
					scope:dathabharuler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dathabharuler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dathabharuler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
			}
			root = { add_pressed_claim = prev }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
}

isengard.0211 = { # A Messenger from the White Wizard
	type = character_event
	title = isengard.0211.t
	desc = {
		desc = isengard.0211.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					dynasty = dynasty:dynasty_freca
				}
				desc = isengard.0211.desc1
			}
			desc =isengard.0211.desc2
		}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	lower_center_portrait = scope:saruman
	right_portrait = {
		character = scope:emissary
		animation = personality_forgiving
	}

	immediate = {
		save_scope_as = respondent
	}

	option = { # For all this? Saruman shall have my allegiance...
		name = isengard.0211.a
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		change_liege = {
			liege = scope:saruman
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		stress_impact = {
			ambitious = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
				holder = { 
					NOR = { 
						this = root
						any_liege_or_above = { this = root } 
					} 
				}
				NOT = { root = { has_claim_on = prev } }
			}
			root = { add_pressed_claim = prev }
		}
		scope:saruman = {
			add_hook = { 
				type = loyalty_hook
				target = root
			}
			trigger_event = isengard.0212
		}
		add_character_flag = promised_kingdom_of_dunland
		trigger_event = {
			id = isengard.0001 #Rolling war pulse
			days = { 30 60 }
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # I will never bend the knee!
		name = isengard.0211.b
		add_pressed_claim = title:c_isengard
		set_relation_rival = {
			target = scope:saruman
			reason = tried_to_subjugate_me
		}
		add_prestige = medium_prestige_gain
		scope:saruman = {
			trigger_event = isengard.0213
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				dynasty = dynasty:dynasty_freca
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				NOT = { dynasty = dynasty:dynasty_freca }
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0212 = { # A High King Bends the Knee
	type = character_event
	title = isengard.0212.t
	desc = isengard.0212.desc
	theme = diplomacy
	left_portrait = {
		character = root
		animation = happy
	}
	right_portrait = {
		character = scope:respondent
		animation = personality_compassionate
	}

	option = { # May he be a loyal servant of Isengard...
		name = isengard.0212.a
		add_character_flag = saruman_dunlending_auxilliaries
		custom_tooltip = isengard.0212.a.tt1
		custom_tooltip = isengard.0212.a.tt2
		custom_tooltip = isengard.0212.a.tt3
		show_as_tooltip = {
			scope:respondent = {
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				change_liege = {
					liege = scope:saruman
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
				stress_impact = {
					ambitious = medium_stress_impact_gain
					arrogant = medium_stress_impact_gain
				}
				add_pressed_claim = title:k_dunland
			}
			scope:saruman = {
				add_hook = { 
					type = loyalty_hook
					target = scope:respondent
				}
			}
		}
		scope:respondent = {
			create_alliance = root
			root = {
				add_opinion = {
					target = scope:respondent
					modifier = perk_negotiated_alliance_opinion
				}
			}
		}
		
		remove_character_flag = offer_to_dunlandfells
		remove_character_flag = offer_to_dathabha
		remove_character_flag = offer_to_thirdruler
	}
}

isengard.0213 = { # An Offer Refused
	type = character_event
	title = isengard.0213.t
	desc = {
		desc = isengard.0213.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					AND = {
						OR = {
							NOT = { exists = scope:dunlandfellsruler }
							has_character_flag = offer_to_dunlandfells
						}
						OR = {
							NOT = { exists = scope:dathabharuler }
							has_character_flag = offer_to_dathabha
						}
						OR = {
							NOT = { exists = scope:thirdruler }
							has_character_flag = offer_to_thirdruler
						}
					}
				}
				desc = isengard.0213.desc2
			}
			desc =isengard.0213.desc1
		}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:respondent
		animation = anger
	}

	option = { # Send Emissary to potential ruler of Dunlandfells
		name = isengard.0210.a
		trigger = { 
			exists = scope:dunlandfellsruler
			NOT = { has_character_flag = offer_to_dunlandfells }
		}
		if = {
			limit = { scope:dunlandfellsruler.dynasty = dynasty:dynasty_freca }
			custom_tooltip = isengard.0210.a.tt
			custom_tooltip = isengard.0210.a.tt2
		}
		else = { custom_tooltip = isengard.0210.a.tt.alt }
		add_character_flag = offer_to_dunlandfells
		scope:dunlandfellsruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential ruler of Dathabha
		name = isengard.0210.b
		trigger = { 
			exists = scope:dathabharuler
			NOT = { has_character_flag = offer_to_dathabha }
		}
		if = {
			limit = { scope:dathabharuler = { has_trait = education_intrigue }  }
			custom_tooltip = isengard.0210.b.tt
			custom_tooltip = isengard.0210.b.tt2
		}
		else = { custom_tooltip = isengard.0210.b.tt.alt }
		add_character_flag = offer_to_dathabha
		scope:dathabharuler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	option = { # Send Emissary to potential third ruler
		name = isengard.0210.c
		trigger = { 
			exists = scope:thirdruler
			NOT = { has_character_flag = offer_to_thirdruler }
		}
		custom_tooltip = isengard.0210.c.tt
		add_character_flag = offer_to_thirdruler
		scope:thirdruler = {
			trigger_event = {
				id = isengard.0211
				days = 1
			}
		}
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 1
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 1
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 1
			}
		}
	}

	option = { # These backward men have nothing to offer us.
		name = isengard.0210.d
		custom_tooltip = isengard.0210.d.tt
		add_character_modifier = enemy_of_the_dunlendings_character_modifier
		hidden_effect = {
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:dathabharuler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:dathabharuler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:dathabharuler
					scope:dathabharuler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dunlandfellsruler
					exists = scope:thirdruler
					scope:dunlandfellsruler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dunlandfellsruler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dunlandfellsruler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
			if = {
				limit ={ 
					exists = scope:dathabharuler
					exists = scope:thirdruler
					scope:dathabharuler = {
						NOT = { any_war_enemy = { this = scope:thirdruler } }
					}
				}
				scope:dathabharuler = { 
					create_alliance = scope:thirdruler
					scope:thirdruler = {
						add_opinion = {
							target = scope:dathabharuler
							modifier = perk_negotiated_alliance_opinion
						}
					}
				}
			}
		}
		add_pressed_claim = title:k_dunland
		every_county = {
			limit = {
				kingdom = title:k_dunland
			}
			root = { add_pressed_claim = prev }
		}
		remove_character_flag = offer_to_dunlandfells
		remove_character_flag = offer_to_dathabha
		remove_character_flag = offer_to_thirdruler
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
}

### Evil: Uruk-hai ###

isengard.0220 = { # The Infantry of the Uruk-hai
	type = character_event
	title = isengard.0220.t
	desc = isengard.0220.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:ugluk
		animation = anger
	}

	immediate = {
		create_character = {
			name = Ugluk
			gender = male
			age = 21
			culture = culture:isengard_urukhai
			faith = faith:lidless_eye	
			trait = stubborn
			trait = content
			trait = brave
			trait = education_martial_3
			trait = loyal
			trait = logistician
			trait = strong
			save_scope_as = ugluk
		}
	}

	option = { # They shall harry my enemies and swarm over the land!
		name = isengard.0220.a
		custom_tooltip = isengard.0220.a.tt
		custom_tooltip = isengard.0220.a.tt2
		add_character_flag = saruman_uruks_light_infantry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}		
	}
	option = { # They shall be different from their forefathers, disciplined and well-armed!
		name = isengard.0220.b
		custom_tooltip = isengard.0220.b.tt
		custom_tooltip = isengard.0220.b.tt2
		add_character_flag = saruman_uruks_heavy_infantry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	after = {
		trigger_event = isengard.0221
		scope:ugluk = { set_employer = root }
	}
}

isengard.0221 = { # The Archers of the Uruk-hai
	type = character_event
	title = isengard.0221.t
	desc = isengard.0221.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:lurtz
		animation = anger
	}

	immediate = {
		create_character = {
			name = Lurtz
			gender = male
			age = 22
			culture = culture:isengard_urukhai
			faith = faith:lidless_eye	
			trait = callous
			trait = zealous
			trait = brave
			trait = education_martial_3
			trait = hunter_2
			trait = forest_fighter
			trait = strong
			save_scope_as = lurtz
		}
	}

	option = { # Traditional bows, will be worth the investment.
		name = isengard.0221.a
		custom_tooltip = isengard.0221.a.tt
		add_character_flag = saruman_uruks_archers
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 25
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
	option = { # We shall darken the skies in an onslaught of crossbow bolts!
		name = isengard.0221.b
		custom_tooltip = isengard.0221.b.tt
		add_character_flag = saruman_uruks_crossbowmen
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 75
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	after = {
		trigger_event = isengard.0222
		scope:lurtz = { set_employer = root }
	}
}

isengard.0222 = { # My Army's Secret Weapon
	type = character_event
	title = isengard.0222.t
	desc = isengard.0222.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { # All shall come to fear the fire of Isengard.
		name = isengard.0222.a
		custom_tooltip = isengard.0222.a.tt
		add_character_flag = saruman_uruks_fire_of_isengard
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # My Uruk-hai and their vicious wargs shall tear my enemies apart!
		name = isengard.0222.b
		custom_tooltip = isengard.0222.b.tt
		add_character_flag = saruman_uruks_cavalry
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}
	option = { # I shall use my darkest of crafts to create the ultimate warbeast...
		name = isengard.0222.c
		custom_tooltip = isengard.0222.c.tt
		add_character_flag = saruman_uruks_monstrosity
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 15
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 33
			}
		}
	}

	after = {
		trigger_event = {
			id = isengard.0223
			days = { 365 1000 }
		}
	}
}

isengard.0223 = { # The Most Loyal of Uruks
	type = character_event
	title = isengard.0223.t
	desc = isengard.0223.desc
	theme = martial
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:gorluk
		animation = anger
	}

	immediate = {
		create_character = {
			name = Gorl_uk
			gender = male
			age = 22
			culture = culture:isengard_urukhai
			faith = faith:lidless_eye	
			trait = wrathful
			trait = zealous
			trait = sadistic
			trait = education_martial_3
			trait = blademaster_2
			trait = aggressive_attacker
			trait = physique_good_2
			trait = urukhai_berserker
			trait = loyal
			save_scope_as = gorluk
		}
	}

	option = { # These Berserkers shall bring me the heads of my enemies!
		name = isengard.0223.a
		custom_tooltip = isengard.0223.a.tt
		add_character_flag = saruman_uruks_berserkers
	}

	after = {
		scope:gorluk = { set_employer = root }
	}
}

### Evil: Industry ###

isengard.0230 = { # The Gardens of Isengard
	type = character_event
	title = isengard.0230.t
	desc = isengard.0230.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}
	override_background = {
		event_background = garden
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					limit = { is_orc = yes }
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
		character:lineofsauron = { save_scope_as = sauron }
	}

	option = { # Rip them all down
		name = isengard.0230.a
		custom_tooltip = isengard.0230.a.tt
		trigger_event = {
			id = isengard.0231
			months = 6 
		}
	}
}

isengard.0231 = { # A Shortage of Materials
	type = character_event
	title = isengard.0231.t
	desc = isengard.0231.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # Venture beyond the walls, take all that you need.
		name = isengard.0231.a
		custom_tooltip = isengard.0231.a.tt
		title:c_isengard = {
			add_county_modifier = stripped_of_raw_resources_county_modifier
		}
		trigger_event = {
			id = isengard.0232
			months = { 12 24 }
		}
	}

	option = { # We will seek out supplies from our neighbours.
		name = isengard.0231.b
		custom_tooltip = isengard.0231.b.tt
		remove_short_term_gold = 150
		trigger_event = {
			id = isengard.0232
			months = { 18 30 }
		}
	}
}

isengard.0232 = { # The Pits of Isengard
	type = character_event
	title = isengard.0232.t
	desc = isengard.0232.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0232.a
		title:c_isengard = {
			add_county_modifier = industrialised_isengard_1_county_modifier
			set_variable = { name = industry_level value = 1 }
		}
		# title:c_isengard.title_province = {
		# 	add_building_slot = 1
		# }
	}
}

isengard.0233 = { # A Hunger for Steel
	type = character_event
	title = isengard.0233.t
	desc = isengard.0233.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					limit = { is_orc = yes }
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Ore I can find beneath Isengard, but fuel...
		name = isengard.0233.a
		custom_tooltip = isengard.0233.a.tt
		trigger_event = {
			id = isengard.0234
			months = 6 
		}
	}
}

isengard.0234 = { # Logging in Fangorn
	type = character_event
	title = isengard.0234.t
	desc = isengard.0234.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # The woods exist to feed the fires of industry!
		name = isengard.0234.a
		custom_tooltip = isengard.0234.a.tt
		custom_tooltip = isengard.0234.a.tt2
		add_character_flag = logged_fangorn
		trigger_event = {
			id = isengard.0235
			years = { 1 3 }
		}
	}

	option = { # I shall seek fuel elsewhere.
		name = isengard.0234.b
		custom_tooltip = isengard.0234.b.tt
		add_character_modifier = {
			modifier = shoddy_steel_character_modifier
			years = 25
		}
		trigger_event = {
			id = isengard.0235
			years = { 8 12 }
		}
	}
}

isengard.0235 = { # The Forges of Isengard
	type = character_event
	title = isengard.0235.t
	desc = isengard.0235.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0235.a
		title:c_isengard = {
			hidden_effect = {
				remove_county_modifier = industrialised_isengard_1_county_modifier
			}
			add_county_modifier = industrialised_isengard_2_county_modifier
			set_variable = { name = industry_level value = 2 }
		}
		title:c_isengard.title_province = {
			add_building_slot = 1
		}
		trigger_event = {
			id = isengard.0250
			years = 1
		}
	}
}

isengard.0236 = { # The Endless Drive of Industry
	type = character_event
	title = isengard.0236.t
	desc = isengard.0236.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					limit = { is_orc = yes }
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Rip them all down
		name = isengard.0236.a
		custom_tooltip = isengard.0236.a.tt
		trigger_event = {
			id = isengard.0237
			years = 1
		}
	}
}

isengard.0237 = { # An Ancient Horror Uncovered
	type = character_event
	title = isengard.0237.t
	desc = isengard.0237.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_callous
	}
	right_portrait = {
		character = scope:overseer
		animation = fear
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					limit = { is_orc = yes }
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # I shall fight the beast myself!
		name = isengard.0237.a
		custom_tooltip = isengard.0237.a.tt
		duel = {
			skill = learning
			value = 45
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
				}
				trigger_event = isengard.0238
				show_as_tooltip = {
					add_prestige = 500
				}
			}

			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				trigger_event = isengard.0239
				show_as_tooltip = {
					add_trait = one_eyed
					add_trait = one_legged
					add_trait = scarred
					title:c_isengard = {
						remove_county_modifier = industrialised_isengard_2_county_modifier
					}
				}
			}
		}
	}

	option = { # We will seek out supplies from our neighbours.
		name = isengard.0237.b
		custom_tooltip = isengard.0237.b.tt
		remove_short_term_gold = 150
		trigger_event = {
			id = isengard.0238
			months = { 18 30 }
		}
	}
}

isengard.0238 = { # A Horror Vanquished
	type = character_event
	title = isengard.0238.t
	desc = isengard.0238.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:overseer
		animation = personality_bold
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					limit = { is_orc = yes }
				}
			}
			random_courtier = {
				limit = { is_orc = yes }
				save_scope_as = overseer
			}
		}
		else = {
			random_courtier = {
				save_scope_as = overseer
			}
		}
	}

	option = { # Now, nothing can stop my works!
		name = isengard.0238.a
		add_prestige = 500
		trigger_event = {
			id = isengard.0240
			months = 6 
		}
	}
}

isengard.0239 = { # The Horror Prevails
	type = character_event
	title = isengard.0239.t
	desc = isengard.0239.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # No...!
		name = isengard.0239.a
		add_trait = one_eyed
		add_trait = one_legged
		add_trait = scarred
		title:c_isengard = {
			remove_county_modifier = industrialised_isengard_2_county_modifier
		}
	}
}

isengard.0240 = { # A Subterranean Complex
	type = character_event
	title = isengard.0240.t
	desc = isengard.0240.desc
	theme = stewardship
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = overseer
		animation = beg
	}

	trigger = {
		has_title = title:c_isengard
	}

	immediate = {
		if = {
			limit = { NOT = { exists = scope:overseer } }
			if = {
				limit = {
					any_courtier = {
						limit = { is_orc = yes }
					}
				}
				random_courtier = {
					limit = { is_orc = yes }
					save_scope_as = overseer
				}
			}
			else = {
				random_courtier = {
					save_scope_as = overseer
				}
			}
		}
	}

	option = { # ...and this is just the beginning!
		name = isengard.0240.a
		title:c_isengard = {
			hidden_effect = {
				remove_county_modifier = industrialised_isengard_2_county_modifier
			}
			add_county_modifier = industrialised_isengard_3_county_modifier
			set_variable = { name = industry_level value = 3 }
		}
		title:c_isengard.title_province = {
			add_building_slot = 1
		}
	}
}

### Evil: Rohan ###

isengard.0250 = { # The Question of the Horselords
	type = character_event
	title = isengard.0250.t
	desc = {
		## Introduction wording
		desc = isengard.0250.desc.start
		triggered_desc = { ## If Grima is alive, talk about him being your agent
			trigger = { 
				exists = scope:grima
				scope:grima = { is_alive = yes }
				OR = {
					is_landed = no
					AND = {
						is_landed = yes
						any_liege_or_above = { this = scope:rohanking }
					}
				}
			} 
			desc = isengard.0250.desc.grima
		}
		triggered_desc = { ## If Grima is not around for any reason, talk about alternative agents
			trigger = { 
				exists = scope:grima
				OR = {
					scope:grima = { is_alive = no }
					AND = {
						is_landed = yes
						NOT = { any_liege_or_above = { this = scope:rohanking } }
					}
				}
			} 
			desc = isengard.0250.desc.nogrima
		}
		triggered_desc = { ## If the line of Eorl holds the kingdom, talk about its few successors
			trigger = { 
				scope:rohanking.dynasty = scope:theodred.dynasty
			} 
			desc = isengard.0250.desc.eorl
		}
		triggered_desc = { ## If the line of Eorl does not hold the kingdom, talk about its recent fall
			trigger = { 
				NOT = { scope:rohanking.dynasty = scope:theodred.dynasty }
			} 
			desc = isengard.0250.desc.noneorl
		}
		triggered_desc = { ## If all others are dead, talk about the iminent doom
			trigger = { 
				exists = scope:theodred
				scope:theodred = { is_alive = no }
				exists = scope:eomer
				scope:eomer = { is_alive = no }
				exists = scope:eowyn
				scope:eowyn = { is_alive = no }
			} 
			desc = isengard.0250.desc.notheodrednoeomernoeowyn
		}
		triggered_desc = { ## If Theodred is alive, talk about him being a potential target
			trigger = { 
				exists = scope:theodred
				scope:theodred = { is_alive = yes }
			} 
			desc = isengard.0250.desc.theodred
		}
		triggered_desc = { ## If Eomer is alive, talk about him also being a potential target
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eomer
		}
		triggered_desc = { ## If Eomer is dead but Eowyn alive, talk about her being the last strong claimant
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = no }
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
			} 
			desc = isengard.0250.desc.noeomereowyn
		}
		triggered_desc = { ## If Eomer is alive but Eowyn is dead, talk about no other successors
			trigger = { 
				exists = scope:eomer
				scope:eomer = { is_alive = yes }
				exists = scope:eowyn
				scope:eowyn = { is_alive = no }
			} 
			desc = isengard.0250.desc.eomernoeowyn
		}
		triggered_desc = { ## If Eowyn is alive, talk about her being a political wedding match
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eowyn
		}
		triggered_desc = { ## If Eowyn and Grima are alive, talk about them as the pairing
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
				exists = scope:grima
				scope:grima = { is_alive = yes }
			} 
			desc = isengard.0250.desc.eowyngrima
		}
		triggered_desc = { ## If Eowyn is alive but Grima is not, talk about a paring with a weak-willed noble
			trigger = { 
				exists = scope:eowyn
				scope:eowyn = { is_alive = yes }
				exists = scope:grima
				scope:grima = { is_alive = no }
			} 
			desc = isengard.0250.desc.eowynother
		}
		desc = isengard.0250.desc.end
	}
	theme = intrigue
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_honorable
	}
	lower_right_portrait = scope:eomer
	lower_left_portrait = scope:theodred
	lower_center_portrait = scope:grima

	trigger = {
		exists = title:k_rohan.holder
	}

	immediate = {
		save_scope_as = saruman
		title:k_rohan.holder = {
			save_scope_as = rohanking
		}
		character:6000018 = { save_scope_as = eomer }
		character:6000035 = { save_scope_as = eowyn }
		character:6000034 = { save_scope_as = theodred }
		character:6000044 = { save_scope_as = grima }
		if = { ## If Grima is unlanded, make sure he's put in the king's court
			limit = {
				scope:grima = { 
					is_alive = yes
					is_landed = no
				}
			}
			hidden_effect = { scope:grima = { set_employer = scope:rohanking } }
		}
	}

	option = { # Designs in the shadows will prevail in bringing Rohan under my control
		name = isengard.0250.a
		add_character_flag = isengard_seeks_to_subdue_rohan
		## AI should typically taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 70
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # Gather the Dunlendings and Uruk-hai. We shall subjugate the Rohirrim in a single swoop
		name = isengard.0250.b
		add_character_flag = isengard_seeks_to_blitzkrieg_rohan
		# Consider spawning of even troops or mechanics to do so.
		scope:rohanking = {
			trigger_event = {
				id = isengard.0251
				days = 1
			}
		}
		## AI shouldn't typically be taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 30
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0251 = { # An Ultimatum from Isengard
	type = character_event
	title = isengard.0251.t
	desc = isengard.0251.desc
	theme = diplomacy
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:saruman
		animation = personality_callous
	}

	option = { # Muster the Rohirrim and form the Éoherë!
		name = isengard.0251.a
		# Consider spawning of even troops or mechanics to do so.
		## Let Saruman know the bad news
		scope:saruman = {
			trigger_event = {
				id = isengard.0252
				days = 30
			}
		}
		## AI should typically taking this option
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 100
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 80
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}

	option = { # How can we hope to defeat such evil?
		name = isengard.0251.b
		## An imperial Rohan would never submit
		trigger = {
			highest_held_title_tier < tier_empire
		}
		## If Isengard is not Empire tier, it needs to be...
		scope:saruman = {
			if = {
				limit = {
					title:e_isengard_unleashed = { is_title_created = no }
					highest_held_title_tier < tier_empire
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				title:e_isengard_unleashed = {
					change_title_holder = {
						holder = root
						change = scope:title_change
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}
		## Swear fealty to Isengard
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		change_liege = {
			liege = scope:saruman
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		## Impacts on Theoden
		set_character_faith = scope:saruman.faith
		add_prestige = -1000
		add_stress = 100
		## Let Saruman know the good news
		scope:saruman = {
			trigger_event = {
				id = isengard.0253
				days = 1
			}
		}
		## AI should rarely do this
		ai_chance = {
			base = 0 # LotR: This should be tied to WotR mode.
			modifier = { # Game Rule
				has_game_rule = default_ai_behavior
				add = 0
			}
			modifier = { # Game Rule
				has_game_rule = weighted_ai_behavior
				add = 20
			}
			modifier = { # Game Rule
				has_game_rule = random_ai_behavior
				add = 50
			}
		}
	}
}

isengard.0252 = { # The Folly of Rohan
	type = character_event
	title = isengard.0252.t
	desc = isengard.0252.desc
	theme = martial
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	option = { # Cue up war
		name = isengard.0252.a
		custom_tooltip = isengard.0252.a.tt
		trigger_event = {
			id = isengard.0002
			days = 365
		}
	}
}

isengard.0253 = { # The Submission of Rohan
	type = character_event
	title = isengard.0252.t
	desc = isengard.0252.desc
	theme = martial
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	option = { # A wise decision
		name = isengard.0252.a
		##Show submission as tooltip to match on-map reality
		show_as_tooltip = {
			scope:rohanking = {
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				change_liege = {
					liege = scope:saruman
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
	}
}

isengard.0260 = { # Our Man in Edoras
	type = character_event
	title = isengard.0260.t
	desc = isengard.0260.desc
	theme = intrigue
	left_portrait = {
		character = root
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:agent
		animation = personality_compassionate
	}

	immediate = {
		if = { ## If Grima is unlanded, make sure he's put in the king's court
			limit = {
				character:6000044 = {
					is_alive = yes
					OR = {
						is_courtier_of = title:k_rohan.holder
						any_liege_or_above = { this = title:k_rohan.holder }
					}
				}
			}
			save_scope_as = agent
		}
    	else = {
    		ordered_courtier = {
    			order_by = intrigue
    			save_scope_as = agent
    		}
    	}
	}

	option = {
		name = isengard.0260.a
	}
}

### Evil: Post-Rohan War events ###

isengard.0300 = { # The Extent of my Ambitions
	type = character_event
	title = isengard.0300.t
	desc = isengard.0300.desc
	theme = realm
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:sauron
		animation = personality_callous
	}

	immediate = {
		character:lineofsauron = { save_scope_as = sauron }
	}

	trigger = {
		scope:sauron = { is_alive = yes }
	}

	option = { # Go my own way...
		name = isengard.0300.a
		add_character_flag = betrayed_sauron
		scope:sauron = {
			add_pressed_claim = title:e_isengard_unleashed
			set_relation_nemesis = {
				target = root
				reason = saruman_betrayal
			}
		}
	}

	option = { # Stay with Sauron
		name = isengard.0300.b
		make_tributary = {
			TYPE = tributary_non_permanent
			SUZERAIN = character:lineofsauron
			TRIBUTARY = root
		}
	}
}

isengard.0301 = { # The Cult of the White Hand
	type = character_event
	title = isengard.0301.t
	desc = isengard.0301.desc
	theme = realm
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:rohanking
		animation = personality_callous
	}

	immediate = {
		save_scope_as = saruman
		character:lineofsauron = { save_scope_as = sauron }
	}

	option = { # The White Hand shall not be stopped!
		name = isengard.0301.a
		if = {
			limit = { NOT = { faith = faith:white_hand_cult } }
			set_character_faith_with_conversion = faith:white_hand_cult
			hidden_effect = {
				faith:white_hand_cult = {
					change_fervor = {
						value = 10
						desc = fervor_gain_holy_order_founded
					}
					set_religious_head_title = title:k_the_white_hand
				}
				title:k_the_white_hand = {
					change_title_holder = {
						holder = scope:saruman
						change = scope:change
					}
				}
			}
		}
		if = {
			limit = { NOT = { capital_county = { faith = faith:white_hand_cult } } }
			capital_county = { set_county_faith = faith:white_hand_cult }
		}
		every_held_title = {
			limit = { 
				tier = tier_county
				NOT = { this = root.capital_county }
		 	}
			hidden_effect = {
				random = {
					chance = 66
					set_county_faith = faith:white_hand_cult
				}
			}
		}	
	# 	# Create Holy Order for Cult of the White Hand. Saruman's Manslayers!
	 	custom_tooltip = create_holy_order_decision_effect_message
	 	title:c_isengard = { save_scope_as = designated_county }
	 	# Select an appropriate barony. If there's an empty space in the capital, we create a castle.
	 	# Otherwise, grab an existing non-capital castle/city.
	 	if = {
	 		limit = { scope:designated_county = { any_county_province = { has_holding = no } } }
	 		scope:designated_county = {
	 			random_county_province = {
	 				limit = { has_holding = no }
	 				set_holding_type = castle_holding
	 				barony = { save_scope_as = leased_barony }
				}
	 		}
	 	}
	 	else = {
	 		scope:designated_county = {
	 			random_county_province = {
	 				limit = {
	 					is_county_capital = no
	 					OR = {
	 						has_holding_type = castle_holding
	 						has_holding_type = city_holding
	 					}
	 				}
	 				barony = { save_scope_as = leased_barony }
	 			}
	 		}
	 	}
	 	# Create a suitable leader for the Holy Order.
	 	create_character = {
	 		template = orc_holy_order_character
	 		location = scope:leased_barony.title_province
	 		save_scope_as = leader
	 	}
	 	# Create the actual Holy Order.
	 	create_holy_order = {
	 		leader = scope:leader
	 		capital = scope:leased_barony
	 		save_scope_as = new_holy_order
	 	}
	 	hidden_effect = {
	 		scope:leader = {
	 			add_trait = order_member
	 			add_piety_level = 2
	 			add_gold = holy_order_starting_gold
	 			every_courtier = {
	 				add_trait = order_member
 					set_culture = culture:isengard_urukhai
	 				set_character_faith = faith:white_hand_cult
	 			}
	 		}
	 	}
	 	# Give it some buildings.
		hidden_effect = {
			scope:leased_barony.title_province = {
				if = {
					limit = { NOT = { has_building_or_higher = uruk_pits_01 } }
					if = {
						limit = { free_building_slots = 0 }
						add_building_slot = 1
					}
					add_building = uruk_pits_03
				}
				if = {
					limit = { NOT = { has_building_or_higher = hunting_outposts_01 } }
					if = {
						limit = { free_building_slots = 0 }
						add_building_slot = 1
					}
					add_building = hunting_outposts_02
				}
				if = {
					limit = { NOT = { has_building_or_higher = raiding_camps_01 } }
					if = {
						limit = { free_building_slots = 0 }
						add_building_slot = 1
					}
					add_building = raiding_camps_01
				}
				if = {
					limit = { NOT = { has_building_or_higher = furnaces_01 } }
					if = {
						limit = { free_building_slots = 0 }
						add_building_slot = 1
					}
					add_building = furnaces_01
				}
			}
		}
	# 	# Some minor misc effects.
		scope:leader.primary_title = {
			set_coa = ho_white_hand_manslayers
			set_title_name = holy_order_white_hand_manslayers
		}
		# Messages.
		send_interface_toast = {
			type = holy_order_founded_message
			desc = i_created_holy_order_message
			left_icon = scope:leader
			right_icon = scope:new_holy_order.title
		}
		save_scope_as = holy_order_creator
		every_ruler = {
			limit = {
				faith = scope:holy_order_creator.faith
				NOT = { this = scope:holy_order_creator }
			}
			send_interface_message = {
				type = holy_order_founded_message
				desc = someone_created_holy_order_message
				left_icon = scope:holy_order_creator
				right_icon = scope:new_holy_order.title
			}
		}
		every_neighboring_top_liege_realm_owner = {
			limit = { NOT = { faith = scope:holy_order_creator.faith } }
			send_interface_message = {
				type = enemy_holy_order_founded_message
				desc = other_faith_neighbor_created_holy_order_message
				left_icon = scope:holy_order_creator
				right_icon = scope:new_holy_order.title
			}
		}
		scope:sauron = {
			add_opinion = {
				modifier = disappointed_opinion
				target = root
				opinion = -50
			}
		}
	}
}

isengard.0302 = { # Isengard Marches on Mordor - Humble Mordor CB
	type = character_event
	title = isengard.0302.t
	desc = isengard.0302.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_defender
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_attacker
	}

	option = { # Let them come...
		name = isengard.0302.a
	}
}

isengard.0303 = { # Isengard Victory over Mordor - Humble Mordor CB (Isengard Perspective)
	type = character_event
	title = isengard.0303.t
	desc = isengard.0303.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0303.a
	}
}

isengard.0304 = { # Isengard Defeat over Mordor - Humble Mordor CB (Isengard Perspective)
	type = character_event
	title = isengard.0304.t
	desc = isengard.0304.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # This is bad
		name = isengard.0304.a
	}
}

isengard.0305 = { # Isengard Defeat over Mordor - Humble Mordor CB (Sauron Perspective)
	type = character_event
	title = isengard.0305.t
	desc = isengard.0305.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0305.a
	}
}

isengard.0306 = { # The Two Towers
	type = character_event
	title = isengard.0306.t
	desc = isengard.0306.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { # Further strengthen my position in Isengard
		name = isengard.0305.a
		set_realm_capital = title:c_isengard
		title:c_isengard = { add_county_modifier = stripped_of_raw_resources_county_modifier }
	}
	option = { # Establish myself in the land of Shadow in Barad-dur
		name = isengard.0305.b
		set_realm_capital = title:c_barad_dur
		title:c_barad_dur = { add_county_modifier = stripped_of_raw_resources_county_modifier }
	}
	option = { # Set my capital in Minas Ithil to keep a watch on Gondor
		name = isengard.0305.c
		set_realm_capital = title:c_minas_ithil
		title:c_minas_ithil = { add_county_modifier = stripped_of_raw_resources_county_modifier }
	}
}

isengard.0307 = { # Mordor Marches on Isengard - Humble Isengard CB
	type = character_event
	title = isengard.0307.t
	desc = isengard.0307.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0307.a
	}
}

isengard.0308 = { # Mordor Victory over Isengard - Humble Isengard CB (Mordor Perspective)
	type = character_event
	title = isengard.0308.t
	desc = isengard.0308.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # This is bad
		name = isengard.0308.a
	}
}

isengard.0309 = { # Mordor Victory over Isengard - Humble Isengard CB (Isengard Perspective)
	type = character_event
	title = isengard.0309.t
	desc = isengard.0309.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0309.a
	}
}

isengard.0309 = { # Mordor Defeat over Isengard - Humble Isengard CB (Mordor Perspective)
	type = character_event
	title = isengard.0309.t
	desc = isengard.0309.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = war_over_win
	}

	option = { # His fall is inevitable
		name = isengard.0309.a
	}
}

isengard.0310 = { # Mordor Defeat over Isengard - Humble Isengard CB (Isengard Perspective)
	type = character_event
	title = isengard.0307.t
	desc = isengard.0307.desc
	theme = war
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = character:lineofsaruman
		animation = prisondungeon
	}

	option = { # There can be only one
		name = isengard.0307.a
	}
}