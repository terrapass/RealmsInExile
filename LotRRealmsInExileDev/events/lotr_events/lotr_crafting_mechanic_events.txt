namespace = crafting_mechanic

crafting_mechanic.0001 = {
	hidden = yes
	immediate = {
		root = { save_scope_as = smith }
		create_dummy_artifact = yes
		# scope:custom_artifact = { set_owner = character:k_wastelands_holder }
		start_editing_custom_artifact = { ARTIFACT_NUM = 0 }
	}
}

crafting_mechanic.0002 = {
	title = crafting_mechanic.0002.t
	desc = {}
	theme = learning
	immediate = {
		if = {
			limit = {
				NOT = {
					exists = var:editing_custom_artifact
				}
			}
			start_editing_custom_artifact = { ARTIFACT_NUM = 0 } # Dummy
		}
	}
	widgets = {
		# Name and Title
		widget = {
			gui = "lotr_crafting_mechanic_name_widget"
			container = "custom_widgets_container"
			setup_scope = { save_scope_as = text_target }
			controller = {
				type = text
				data = { key = custom_artifact_name default = default_artifact_name }
			}
		}
		widget = {
			gui = "lotr_crafting_mechanic_description_widget"
			container = "custom_widgets_container"
			setup_scope = { save_scope_as = text_target }
			controller = {
				type = text
				data = { key = custom_artifact_desc default = default_artifact_desc }
			}
		}
	}
    option = {
        name = crafting_mechanic.0002.a
		remove_variable = editing_custom_artifact
    }
	after = {
		character:k_wastelands_holder = { refresh_custom_artifact = yes }
	}
}

crafting_mechanic.0003 = {
	hidden = yes

	immediate = {	
		root = { save_scope_as = owner }
		set_artifact_rarity_masterwork = yes

		### Crit Success/Success/Crit Failure/Failure Chances ###
		if = {
			limit = { exists = var:random_variable }
			if = { ## Success with crafting artifact
				limit = { var:random_variable < total_success_chance }

				if = { ### Critical success
					limit = { var:random_variable < calc_out_of_100_crit_success_chance }
					artifact_craft_interface_toast = {
						XP_GAIN = artifact_craft_normal_xp
						TOAST = artifact_crafting_critical_success_craft
						CRAFT_ARTIFACT = 1
					}
				}
				else = { ### Normal success
					if = {
						limit = { var:random_variable < calc_out_of_100_success_chance }
						artifact_craft_interface_toast = {
							XP_GAIN = artifact_craft_normal_xp
							TOAST = artifact_crafting_normal_success_craft
							CRAFT_ARTIFACT = 1
						}
					}
				}
			}
			else = { ## Failure with crafting artifact
				if = { ### Critical Failure
					limit = { var:random_variable > critical_failure_chance }
					artifact_craft_interface_toast = {
						XP_GAIN = artifact_craft_normal_xp
						TOAST = artifact_crafting_critical_failure_craft
						CRAFT_ARTIFACT = 0
					}
				}
				else = { ### Normal Failure
					if = {
						limit = { var:random_variable > total_success_chance }
						artifact_craft_interface_toast = {
							XP_GAIN = artifact_craft_failed_xp
							TOAST = artifact_crafting_normal_failure_craft
							CRAFT_ARTIFACT = 1
						}
						downgrade_effect = yes 
					}
				}
			}
		}
		
						
		if = { # Adds modifiers to artifact
			limit = { exists = scope:newly_crafted_artifact }
			add_artifact_modifier_effect = yes
		}
		artifact_craft_prowess_buff = yes
		remove_crafting_artifact_variables = yes
		if = {
			limit = { exists = var:selected_artifact }
			destroy_artifact = var:selected_artifact
		}
	}
}

crafting_mechanic.0004 = {
	hidden = yes

	immediate = {
		upgrade_effect = yes
	}
}