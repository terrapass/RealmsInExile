namespace = dunland

##################################################
# Restoring the Dunlendings
##################################################

dunland.1001 = {
	type = character_event
	title = dunland.1001.t
	desc = dunland.1001.desc
	theme = realm
	left_portrait = {
		character = scope:restorer
		animation = personality_honorable
	}

	immediate = {
		save_scope_as = restorer
		
		decision_create_dunland_kingdom_effect = yes
	}

	option = {
		name = dunland.1001.a
	}
}

# Players informed of the Danelaw being created
dunland.1002 = {
	type = character_event
	title = dunland.1002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						culture = { has_cultural_pillar = heritage_daen }
						culture = { has_cultural_pillar = heritage_dunlending }
					}
				}
				desc = dunland.1002.desc_same_culture
			}
			desc = dunland.1002.desc
		}
	}
	theme = realm
	left_portrait = {
		character = scope:restorer
		animation = personality_honorable
	}

	option = { # Not Danish
		name = dunland.1002.a
		trigger = {
			NOT = { culture = { has_cultural_pillar = heritage_dunlending } }
		}
	}

	option = { # Also Danish
		name = dunland.1002.b
		trigger = {
			culture = { has_cultural_pillar = heritage_dunlending }
		}
	}

	option = { # Give players close to restorer a chance to convert
		name = dunland.1002.c
		trigger = {
			NOT = { root.culture = scope:restorer.culture }
			OR = {
				is_close_family_of = scope:restorer
				is_vassal_of = scope:restorer
			}
		}
		set_culture = scope:restorer.culture
#		hidden_effect = {
#			if = {
#				limit = { any_spouse = { is_landed = no } }
#				every_spouse = {
#					set_culture = culture:english
#				}
#			}
#			if = {
#				limit = {
#					any_close_family_member = {
#						is_landed = no
#						NOT = { is_spouse_of = prev }
#					}
#				}
#				every_close_family_member = {
#					limit = {
#						is_landed = no
#						NOT = { is_spouse_of = prev }
#					}
#					set_culture = culture:english
#				}
#			}
#		}
	}
}