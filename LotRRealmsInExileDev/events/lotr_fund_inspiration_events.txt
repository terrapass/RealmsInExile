namespace = fund_inspiration

# fund_inspiration.5021 - Adventurer gets lost... this can be a good thing though
# fund_inspiration.6001 - Adventurer postcard from the Rhûn
# fund_inspiration.6002 - Adventurer postcard from the Jungle
# fund_inspiration.6003 - Adventurer postcard from the Desert
# fund_inspiration.6004 - Adventurer postcard from the Gondor
# fund_inspiration.6005 - Adventurer postcard from the Westlands
# fund_inspiration.6006 - Adventurer postcard from Rhovanion
# fund_inspiration.6007 - Adventurer postcard from Elven Lands
# fund_inspiration.6008 - Adventurer postcard from Orc Territory
# fund_inspiration.6400 - Adventurer has been skulking in the tavern
# fund_inspiration.6500 - Adventurer - Bringing music to the jungle
# fund_inspiration.6501 - Adventurer - Dragging a boat up a cliff
# fund_inspiration.6502 - Adventurer in the desert dreaming of you
# fund_inspiration.6503 - Adventurer - Burial mount entry
# fund_inspiration.6504 - Adventurer took a farmhand as a lover
# fund_inspiration.6505 - Adventurer - CK3 beach episode

#Adventurer gets lost... this can be a good thing though
fund_inspiration.5021 = {
	type = character_event
	title = fund_inspiration.5021.t
	desc = fund_inspiration.5021.desc
	theme = realm

	left_portrait = {
		character = scope:adventurer_aide
		animation = beg
	}

	right_portrait = {
		character = scope:inspiration_owner
		animation = happiness 
	}
	cooldown = { years = 15 }

	trigger = {
		exists = scope:inspiration
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			has_no_inspiration_event_cooldown = yes
			NOT = { has_character_flag = had_event_fund_inspiration_5021 }
			adventure_inspiration_average_skill_value < high_inspiration_skill
		}
		exists = scope:inspiration_owner.activity
	}

	weight_multiplier = {
		base = 1
		# More likely to happen if the adventurer is adventurous, and maybe a bit scatterbrained 
		modifier = {
			add = 2
			scope:inspiration_owner = {
				has_trait = fickle
			}
		}
		modifier = {
			add = 2
			scope:inspiration_owner = {
				has_trait = adventurer
			}
		}
		modifier = {
			add = 2
			scope:inspiration_owner = {
				has_trait = brave
			}
		}
		modifier = {
			add = 2
			scope:inspiration_owner = {
				has_trait = stubborn #refusing to ask for direction
			}
		}
		modifier = {
			add = -1
			scope:inspiration_owner = {
				adventure_inspiration_average_skill_value >= high_inspiration_skill
			}
		}
	}

	immediate = {
		scope:inspiration_owner = {
			# Very long time-out added since we don't want to risk this triggering again. The flag is removed in the completion effect
			add_character_flag = {
				flag = had_event_fund_inspiration_5021
				years = 20
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}

		#Prioritize location that root doesn't have a county in 
		hidden_effect = {
			random_list = {
				1 = {
					# West 
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = adventure_west
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = adventure_west
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:west }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = adventure_west
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = adventure_west
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = adventure_west_location
						value = yes
					}
				}
				1 = {
					# Rhovanion  
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = adventure_rhovanion
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = adventure_rhovanion
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:rhovanion }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = adventure_rhovanion
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = adventure_rhovanion
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = adventure_rhovanion_location
						value = yes
					}
				}
				1 = {
					# Gondor  
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = middleearth_west_gondor
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = middleearth_west_gondor
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:gondor }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = middleearth_west_gondor
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = middleearth_west_gondor
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = middleearth_west_gondor_location
						value = yes
					}
				}
				1 = {
					# Near Harad 
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = adventure_nearharad
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = adventure_nearharad
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:nearharad }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = adventure_nearharad
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = adventure_nearharad
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = adventure_nearharad_location
						value = yes
					}
				}
				1 = {
					# Far Harad
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = middleearth_haradwaith_far
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = middleearth_haradwaith_far
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:farharad }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = middleearth_haradwaith_far
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = middleearth_haradwaith_far
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = middleearth_haradwaith_far_location
						value = yes
					}
				}
				1 = {
					# Rhûn
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = middleearth_rhun
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = middleearth_rhun
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:rhun }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = middleearth_rhun
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = middleearth_rhun
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = middleearth_rhun_location
						value = yes
					}
				}
				1 = {
					# Mordor
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = middleearth_mordor
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = middleearth_mordor
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:mordor }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = middleearth_mordor
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = middleearth_mordor
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = middleearth_mordor_location
						value = yes
					}
				}
				1 = {
					# Forodwaith
					trigger = {
	  					#There's a county you don't hold there
	  					any_county_in_region = {
							region = middleearth_forodwaith
							NOT = { holder = root }
						}
						scope:inspiration_owner = { #Distance check - from where the adventurer is right now.
							adventurer_potential_destination_distance_check = {
								REGION = middleearth_forodwaith
							}
						}
						#This was not the original destination of the adventurer
	  					NOT = { scope:inspiration_owner.var:adventure_destination = flag:forodwaith }
					}
					modifier = {
						add = 30
						NOT = {
							any_county_in_region = {
								region = middleearth_forodwaith
								holder = root 
								count >= 1
							}
						}
					}
					random_county_in_region = {
						region = middleearth_forodwaith
						limit = { 
							NOT = { holder = root }
						}
						save_scope_as = adventuring_location
					}
					save_scope_value_as = {
						name = middleearth_forodwaith_location
						value = yes
					}
				}
			create_character = {
				location = root.location
				template = hunter_template
				culture = scope:adventuring_location.culture
				faith = scope:adventuring_location.faith
				dynasty = none
				save_scope_as = adventurer_aide
			}
		}
	}

	#No, go back!
	option = { 
		name = fund_inspiration.5021.a
		custom_tooltip = fund_inspiration.5021.a.tt
		scope:inspiration_owner = { 
			add_opinion = {
				modifier = disappointed_opinion
				target = root
				opinion = -25
			}
		}

		ai_chance = {
			base = 10
			ai_greed_target_modifier = { VALUE = 25 } #not too high since there's a chance to get a cooler artifact
		}
	}

	#Explore!
	option = {
		name = fund_inspiration.5021.b
		custom_tooltip = fund_inspiration.5021.b.tt
		scope:inspiration = {
			invest_gold = 60
		}
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 4
			}
		}
		scope:inspiration_owner = { 
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 25
			}
			if = {
				limit = {
					exists = scope:adventure_west_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:west
				}
			}
			else_if = {
				limit = {
					exists = scope:adventure_rhovanion_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:rhovanion
				}
			}
			else_if = {
				limit = {
					exists = scope:middleearth_west_gondor_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:gondor
				}
			}
			else_if = {
				limit = {
					exists = scope:adventure_nearharad_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:nearharad
				}
			}
			else_if = {
				limit = {
					exists = scope:middleearth_haradwaith_far_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:farharad
				}
			}
			else_if = {
				limit = {
					exists = scope:middleearth_rhun_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:rhun
				}
			}
			else_if = {
				limit = {
					exists = scope:middleearth_mordor_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:mordor
				}
			}
			else_if = {
				limit = {
					exists = scope:middleearth_forodwaith_location
				}
				set_variable = {
					name = adventure_destination
					value = flag:forodwaith
				}
			}
			hidden_effect = {
				scope:inspiration_owner.activity = {
					move_activity = scope:adventuring_location.title_province
				}
			}
		}

		ai_chance = {
			base = 10
			ai_boldness_target_modifier = { VALUE = 100 }
			modifier = {
				short_term_gold < 60 #shouldn't spend money they don't have...
				factor = 0
			}
		}
	}

	after = {
		scope:adventurer_aide = {
			silent_disappearance_effect = yes
		}
	}
}

# Postcard from your adventurer 6001-6006!

# Postcard from the Steppe

fund_inspiration.6001 = {
	type = letter_event
	opening = { desc = fund_inspiration.6001.t }
	desc = fund_inspiration.6001.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOT = {
				geographical_region = middleearth_rhun
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = morin_khuur_ornament
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6001 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:rhun
				var:adventure_destination = flag:rhun_dorwinion
				var:adventure_destination = flag:rhun_seaofrhun
			}
			NOT = {
				any_character_artifact = {
					has_variable = morin_khuur_ornament
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6001
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = morin_khuur_ornament_name
			description = morin_khuur_ornament_description
			type = miscellaneous
			visuals = medallion
			modifier = artifact_heavy_cavalry_toughness_1_modifier
			creator = scope:inspiration_owner
			save_scope_as = morin_khuur_ornament
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect_new_artifact = {
			scope:morin_khuur_ornament = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = morin_khuur_ornament
					value = yes
				}
			}
		}
	}
	#Keep the fiddle-head for yourself
	option = {
		name = fund_inspiration.6001.a
		ai_chance = {
			base = 50
		}
	}
	#If the court musician is present, let them have this former piece of an instrument
	option = {
		name = fund_inspiration.6001.b
		trigger = {
			any_court_position_holder = {
				has_court_position = court_musician_court_position
			}
		}
		random_court_position_holder = {
			limit = {
				has_court_position = court_musician_court_position
			}
			save_scope_as = court_musician
		}
		scope:morin_khuur_ornament = {
			set_owner = scope:court_musician
		}
		reverse_add_opinion = {
			target = scope:court_musician
			modifier = grateful_opinion
			opinion = 15
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = -0.5
			}
		}
	}
}

#Postcard from the Jungle

fund_inspiration.6002 = {
	type = letter_event
	opening = { desc = fund_inspiration.6002.t }
	desc = fund_inspiration.6002.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOR = {
				geographical_region = middleearth_haradwaith_far_bellakar
				geographical_region = middleearth_haradwaith_far_jungle
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = animal_ring
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6002 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:farharad
				var:adventure_destination = flag:farharad_bellakar
				var:adventure_destination = flag:farharad_jungle
			}
			NOT = {
				any_character_artifact = {
					has_variable = animal_ring
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6002
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = mumak_ring_name
			description = mumak_ring_description
			type = miscellaneous
			visuals = ring
			modifier = artifact_scheme_resistance_add_2_modifier
			creator = scope:inspiration_owner
			save_scope_as = animal_ring
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect_new_artifact = {
			scope:animal_ring = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = animal_ring
					value = yes
				}
			}
		}
	}
	#Keep the ring
	option = {
		name = fund_inspiration.6002.a
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}
	#Sell the ring for gold
	option = {
		name = fund_inspiration.6002.b
		destroy_artifact = scope:animal_ring
		add_gold = minor_gold_value
		ai_chance = {
			base = 200
			ai_value_modifier = {
				ai_honor = -0.5
				ai_greed = 0.5
			}
		}
	}
}

#Postcard from the Desert

fund_inspiration.6003 = {
	type = letter_event
	opening = { desc = fund_inspiration.6003.t }
	desc = fund_inspiration.6003.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOR = {
				geographical_region = adventure_nearharad
				geographical_region = middleearth_haradwaith_far_dune_sea
				geographical_region = middleearth_haradwaith_far_abrakhan
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = ostrich_shell_necklace
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6003 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:nearharad
				var:adventure_destination = flag:nearharad_haradwaith
				var:adventure_destination = flag:nearharad_umbar
				var:adventure_destination = flag:nearharad_harondor
				var:adventure_destination = flag:farharad_mardruak
				var:adventure_destination = flag:farharad_abrakhan
				var:adventure_destination = flag:farharad_dunesea
			}
			NOT = {
				any_character_artifact = {
					has_variable = ostrich_shell_necklace
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6003
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = ostrich_shell_necklace_name
			description = ostrich_shell_necklace_description
			type = miscellaneous
			visuals = necklace
			modifier = artifact_attraction_opinion_2_modifier
			creator = scope:inspiration_owner
			save_scope_as = ostrich_shell_necklace
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect = {
			scope:ostrich_shell_necklace = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = ostrich_shell_necklace
					value = yes
				}
			}
		}
		if = {
			limit = { is_married = yes }
			random_spouse = { save_scope_as = event_spouse }
		}
	}
	option = {
		name = fund_inspiration.6003.a
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = -0.5
			}
		}
	}
	option = {
		name = fund_inspiration.6003.b
		trigger = { exists = scope:event_spouse }
		reverse_add_opinion = {
			target = scope:event_spouse
			modifier = grateful_opinion
			opinion = 15
		}
		scope:ostrich_shell_necklace = {
			set_owner = scope:event_spouse
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 0.5
			}
		}
	}
}

# Postcard from Gondor

fund_inspiration.6004 = {
	type = letter_event
	opening = { desc = fund_inspiration.6004.t }
	desc = fund_inspiration.6004.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		NOT = {
			any_character_artifact = {
				has_variable = gondorian_figurine
			}
		}
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOT = {
				geographical_region = middleearth_west_gondor
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6004 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:gondor
				var:adventure_destination = flag:gondor_andrast
				var:adventure_destination = flag:gondor_centralfiefdoms
				var:adventure_destination = flag:gondor_easternfiefdoms
				var:adventure_destination = flag:gondor_ithilien
				var:adventure_destination = flag:gondor_whitemountains
			}
			NOT = {
				any_character_artifact = {
					has_variable = gondorian_figurine
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6004
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = gondorian_figurine_name
			description = gondorian_figurine_description
			type = miscellaneous
			visuals = pouch
			modifier = artifact_knight_limit_1_modifier
			creator = scope:inspiration_owner
			save_scope_as = gondorian_figurine
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect_new_artifact = {
			scope:gondorian_figurine = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = gondorian_figurine
					value = yes
				}
			}
		}
	}

	option = {
		name = fund_inspiration.6004.a
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}
}

#Postcard from the Westlands

fund_inspiration.6005 = {
	type = letter_event
	opening = { desc = fund_inspiration.6005.t }
	desc = fund_inspiration.6005.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		NOT = {
			any_character_artifact = {
				has_variable = belt_buckle
			}
		}
		is_ai = no
		NOT = {
			location = {
				geographical_region = adventure_west
#We can't have an adventurer writing home about what Westlanders are like if you are also a Westlanders.
			}
		}
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6005 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:west
				var:adventure_destination = flag:west_rohan
				var:adventure_destination = flag:west_enedhwaith
			}
			NOT = {
				any_character_artifact = {
					has_variable = belt_buckle
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6005
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = belt_buckle_name
			description = belt_buckle_description
			type = miscellaneous
			visuals = brooch
			modifier = artifact_prowess_1_modifier
			creator = scope:inspiration_owner
			save_scope_as = belt_buckle
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect_new_artifact = {
			scope:belt_buckle = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = belt_buckle
					value = yes
				}
			}
		}
	}

	option = {
		name = fund_inspiration.6005.a
		reverse_add_opinion = {
			target = scope:inspiration_owner
			modifier = disappointed_opinion
			opinion = -30
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.5
			}
		}
	}
	option = {
		name = fund_inspiration.6005.b
		custom_tooltip = fund_inspiration.6005.b.tt
		scope:inspiration_owner = {
			add_character_flag = adventurer_tired_of_westlands
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = -0.5
				ai_compassion = 0.5
			}
		}
	}
}

# Postcard from Rhovanion

fund_inspiration.6006 = {
	type = letter_event
	opening = { desc = fund_inspiration.6006.t }
	desc = fund_inspiration.6006.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOT = {
				geographical_region = adventure_rhovanion
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = seahorse_brooch
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6006 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:rhovanion
				var:adventure_destination = flag:rhovanion_anduin
				var:adventure_destination = flag:rhovanion_brownlands
				var:adventure_destination = flag:rhovanion_dalelands
			}
			NOT = {
				any_character_artifact = {
					has_variable = seahorse_brooch
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6006
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = horse_brooch_name
			description = horse_brooch_description
			type = miscellaneous
			visuals = brooch
			modifier = artifact_tolerance_advantage_mod_1_modifier
			creator = scope:inspiration_owner
			save_scope_as = seahorse_brooch
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect = {
			scope:seahorse_brooch = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = seahorse_brooch
					value = yes
				}
			}
		}
	}
	option = {
		name = fund_inspiration.6006.a
		if = {
			limit = {
				amenity_level = { 
					type = court_food_quality
					value < medium_amenity_level
				}
			}
			set_amenity_level = { type = court_food_quality value = 3 }
		}
		else_if = {
			limit = {
				amenity_level = { 
					type = court_food_quality
					value < high_amenity_level
				}
			}
			set_amenity_level = { type = court_food_quality value = 4 }
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = 0.5
				ai_compassion = 0.5
			}
		}
	}
	option = {
		name = fund_inspiration.6006.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_vengefulness = 0.5
			}
		}
	}
}

#Postcard from Elven Lands

fund_inspiration.6007 = {
	type = letter_event
	opening = { desc = fund_inspiration.6007.t }
	desc = fund_inspiration.6007.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOR = {
				geographical_region = middleearth_west_lothlorien
				geographical_region = middleearth_west_rhovanion_mirkwood
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = chain_necklace
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6007 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:west_lothlorien
				var:adventure_destination = flag:rhovanion_mirkwood
			}
			NOT = {
				any_character_artifact = {
					has_variable = chain_necklace
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6007
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = chain_necklace_name
			description = chain_necklace_description
			type = miscellaneous
			visuals = necklace
			modifier = artifact_attraction_opinion_2_modifier
			creator = scope:inspiration_owner
			save_scope_as = chain_necklace
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect = {
			scope:chain_necklace = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = chain_necklace
					value = yes
				}
			}
		}
		if = {
			limit = { is_married = yes }
			random_spouse = { save_scope_as = event_spouse }
		}
	}
	option = {
		name = fund_inspiration.6007.a
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = -0.5
			}
		}
	}
	option = {
		name = fund_inspiration.6007.b
		trigger = { exists = scope:event_spouse }
		reverse_add_opinion = {
			target = scope:event_spouse
			modifier = grateful_opinion
			opinion = 15
		}
		scope:chain_necklace = {
			set_owner = scope:event_spouse
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 0.5
			}
		}
	}
}

fund_inspiration.6008 = {
	type = letter_event
	opening = { desc = fund_inspiration.6008.t }
	desc = fund_inspiration.6008.desc
	sender = scope:inspiration_owner
	
	cooldown = { years = 5 }

	trigger = {
		exists = scope:inspiration
		location = {#We can't have an adventurer writing home about what a region is like that we belong to
			NOT = {
				geographical_region = adventure_orclands 
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = orc_bauble
			}
		}
		is_ai = no
		scope:inspiration_owner = {
			exists = var:adventure_destination
			exists = var:adventure_type
			NOT = {  has_character_flag = had_event_fund_inspiration_6008 }
			has_no_inspiration_event_cooldown = yes
			OR = {
				var:adventure_destination = flag:rhovanion_dolguldur
				var:adventure_destination = flag:west_isengard
				var:adventure_destination = flag:mordor
				var:adventure_destination = flag:mordor_gorgoroth
				var:adventure_destination = flag:forodwaith_greymountains
				var:adventure_destination = flag:farharad_abrakhan
			}
			NOT = {
				any_character_artifact = {
					has_variable = orc_bauble
				}
			}
		}
	}

	immediate = {
		save_scope_as = owner #for loc
		scope:inspiration_owner = {
			add_character_flag = {
				flag = had_event_fund_inspiration_6008
				years = 5
			}
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
		}
		create_artifact = {
			name = orc_bauble_name
			description = orc_bauble_description
			type = miscellaneous
			visuals = pocket_pouch
			modifier = artifact_tolerance_advantage_mod_1_modifier
			creator = scope:inspiration_owner
			save_scope_as = orc_bauble
			history = {
				type = discovered
				actor = scope:inspiration_owner
				recipient = root
				location = scope:inspiration_owner.location
			}
		}
		hidden_effect = {
			scope:orc_bauble = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = orc_bauble
					value = yes
				}
			}
		}
	}
	option = {
		name = fund_inspiration.6008.a
		remove_short_term_gold = minor_gold_value
		add_character_modifier = {
			modifier = stewardship_domain_improved_military_infrastructure_modifier
			years = 5
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}
	option = {
		name = fund_inspiration.6008.b
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}
}

#Bringing music to the jungle by Isabella Welch

fund_inspiration.6500 = {
	type = character_event
	title = fund_inspiration.6500.t
	desc = 	{
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6500.desc
		desc = fund_inspiration.6500.action
	}

	theme = hunting
	override_background = {
		event_background = fangorn
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	lower_left_portrait = {
		character = scope:court_musician
	}

	artifact = {
	    target = scope:leopard_hat
	    position = lower_center_portrait
	}
	
	cooldown = { years = 15 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				OR = {
					terrain = jungle
					terrain = deep_forest
				}
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = leopard_hat
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = { employs_court_position = court_musician_court_position }
			random_court_position_holder = {
				type = court_musician_court_position
				save_scope_as = court_musician
			}
		}
		else_if ={
			limit = { employs_court_position = court_poet_court_position }
			random_court_position_holder = {
				type = court_poet_court_position
				save_scope_as = court_musician
			}
		}
		else_if = {
			limit = { employs_court_position = court_jester_court_position }
			random_court_position_holder = {
				type = court_jester_court_position
				save_scope_as = court_musician
			}
		}
		else_if = {
			limit = {
				any_courtier = {
					has_trait = poet
				}
			}
			random_courtier = {
				limit = { has_trait = poet }
				save_scope_as = court_musician
			}
		}
		else = {
			random_courtier = {
				save_scope_as = court_musician
			}
		}
		hidden_effect = {
			set_artifact_rarity_common = yes
			save_scope_as = owner # Needed for 'visuals = crown'
			scope:inspiration_owner = {
				create_artifact = {
					name = leopard_hat_name
					description = leopard_hat_description
					wealth = scope:wealth
					quality = scope:quality
					type = helmet
					visuals = crown
					modifier = artifact_prowess_2_modifier
					save_scope_as = leopard_hat
				}
				hidden_effect_new_artifact = {
					scope:leopard_hat = {
						flag_as_trash_artifact = yes
						set_variable = {
							name = leopard_hat
							value = yes
						}
					}
				}
			}
		}
	}

	option = { # Show everyone the music, will they like it?
		name = fund_inspiration.6500.a
		scope:inspiration_owner = {
			duel = {
				skill = diplomacy
				value = 8
				40 = {
					desc = fund_inspiration.6500.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.5
					}
					send_interface_toast = {
						title = fund_inspiration.6500.a.success
						left_icon = scope:inspiration_owner
						scope:inspiration_owner = {
							change_artifact_quality_effect = {
								AMOUNT = 2
							}
						}
						scope:inspiration_owner = {
							add_diplomacy_skill = 2
						}
					}
				}
				10 = {
					desc = fund_inspiration.6500.a.failure
					send_interface_toast = {
						title = fund_inspiration.6500.a.failure
						left_icon = scope:inspiration_owner
						scope:inspiration_owner = {
							increase_wounds_effect = { REASON = poison }
						}
					}
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { # Adventurer flees
		name = fund_inspiration.6500.b
		scope:inspiration_owner = {
			duel = {
				skill = prowess
				value = 8
				40 = {
					desc = fund_inspiration.6500.b.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.5
					}
					send_interface_toast = {
						title = fund_inspiration.6500.b.success
						left_icon = scope:inspiration_owner
						scope:inspiration_owner = {
							add_prowess_skill = 2
						}
						scope:inspiration_owner = {
							change_artifact_quality_effect = {
								AMOUNT = 2
							}
						}
					}
				}
				10 = {
					desc = fund_inspiration.6500.b.failure
					hidden_effect = {
						send_interface_toast = {
							title = fund_inspiration.6500.b.failure
							left_icon = scope:inspiration_owner
							scope:inspiration_owner = {
								increase_wounds_effect = { REASON = fight }
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { # Adventurer fights a wild beast
		name = fund_inspiration.6500.c
		random_list = {
			10 = {
				custom_tooltip = fund_inspiration.6500.c.tt
				modifier = {
					add = 25
					scope:inspiration_owner = {
						has_trait = lifestyle_hunter
					}
				}
				modifier = {
					add = 25
					scope:inspiration_owner = {
						prowess > medium_skill_rating
					}
				}
				scope:leopard_hat = {
					set_owner = scope:inspiration_owner
				}
				hidden_effect = {	
					send_interface_toast = {
						title = fund_inspiration.6500.c.tt
						left_icon = scope:inspiration_owner
						scope:inspiration_owner = {
							change_artifact_quality_effect = {
								AMOUNT = 2
							}
						}
					}
				}
			}

			10 = {
				custom_tooltip = fund_inspiration.6500.c.tt_failure
				modifier = {
					add = 25
					scope:inspiration_owner = {
						prowess < medium_skill_rating
					}
				}
				hidden_effect = {	
					send_interface_toast = {
						title = fund_inspiration.6500.c.tt_failure
						left_icon = scope:inspiration_owner
						scope:inspiration_owner = {
							increase_wounds_effect = { REASON = fight }
						}
					}
				}
			}
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}
}

# Dragging a boat up a cliff by Isabella Welch

scripted_trigger sisyphus_nickname_trigger = {
	OR = {
		capital_province = {
			geographical_region = adventure_west
			geographical_region = middleearth_west_gondor
		}
	}
	always = no
}

fund_inspiration.6501 = {
	type = character_event
	title = fund_inspiration.6501.t
	desc = 	{
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6501.desc
		desc = fund_inspiration.6500.action
	}

	theme = hunting
	override_background = {
		event_background = wilderness_mountains
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	cooldown = { years = 10 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = hills
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	option = { # Adventurer cuts their losses
		name = fund_inspiration.6501.a
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = -2
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { # Adventurer attempts a ridiculous dragging of the boat over land
		name = fund_inspiration.6501.b
		scope:inspiration_owner = {
			duel = {
				skill = martial
				value = 10
				40 = {
					desc = fund_inspiration.6501.b.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.5
					}
					modifier = {
						add = 25
						scope:inspiration_owner = {
							has_lifestyle = martial_lifestyle
						}
					}
					modifier = {
						add = 25
						scope:inspiration_owner = {
							has_trait = strategist
						}
					}
					root = {
						send_interface_toast = {
							title = fund_inspiration.6501.b.success
							left_icon = scope:inspiration_owner
							scope:inspiration_owner = {
								add_prowess_skill = 2
								if = {
									limit = {
										root = { sisyphus_nickname_trigger = yes }
									}
									give_nickname = nick_sisyphus
								}
							}
							scope:inspiration_owner = {
								change_artifact_quality_effect = {
									AMOUNT = 4
								}
							}
							add_prestige = major_prestige_gain
						}
					}
				}
				10 = {
					desc = fund_inspiration.6501.b.failure
					hidden_effect = {
						root = {
							send_interface_toast = {
								title = fund_inspiration.6501.b.failure
								left_icon = scope:inspiration_owner
								remove_short_term_gold = major_gold_value
							}
						}
					}
					remove_short_term_gold = major_gold_value
				}
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { # Adventurer gives up and buys a new boat
		name = fund_inspiration.6501.c
		remove_short_term_gold = medium_gold_value
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = -0.5
			}
			modifier = {
				short_term_gold < medium_gold_value
				factor = 0
			}
		}
	}
}

#Adventurer in the desert dreaming of you

fund_inspiration.6502 = {
	type = character_event
	title = fund_inspiration.6502.t
	desc = 	{
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6502.desc
	}

	theme = hunting
	override_background = {
		event_background = wilderness_desert 
	}
	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	cooldown = { years = 20 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				or = {
					terrain = desert
					terrain = dune_sea
					terrain = red_desert
					terrain = volcanic_plains
					terrain = saltflats
				}
			}
		}
		can_set_relation_lover_trigger =  { CHARACTER = scope:inspiration_owner }
	}

	weight_multiplier = {
		base = 1
	}

	option = { # You are indeed missing your adventurer
		name = fund_inspiration.6502.a
		trigger = {
			has_relation_potential_lover = scope:inspiration_owner
			can_set_relation_lover_trigger = { CHARACTER = scope:inspiration_owner }
		}
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
		}
		progress_towards_lover_effect = {
			CHARACTER = scope:inspiration_owner
			OPINION = 20
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_rationality = -0.5
			}
		}
	}

	option = { # try and wrangle the adventurer into bringing back better items
		name = fund_inspiration.6502.b
		trigger = {
			NOT = { has_relation_potential_lover = scope:inspiration_owner }
		}
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
		}
		progress_towards_lover_effect = {
			CHARACTER = scope:inspiration_owner
			OPINION = 20
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}

	option = { # roll your eyes
		name = fund_inspiration.6502.c
		reverse_add_opinion = {
			target = scope:inspiration_owner
			modifier = disappointed_opinion
			opinion = -15
		}
		scope:inspiration_owner = {
			add_character_modifier = {
				modifier = dying_of_thirst_modifier
				years = 2
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}
}

#Burial mound entry

fund_inspiration.6503 = {
	type = character_event
	title = fund_inspiration.6503.t
	theme = hunting
	desc = {
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6503.desc
		desc = fund_inspiration.6500.action
	}
	
	override_background = {
		event_background = wilderness_steppe
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}
	
	cooldown = { years = 15 }
	
	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = steppe
				geographical_region = middleearth_rhun
			}
		}
		NOR = {
			any_character_artifact = {
				has_variable = kurgan_ornament
			}
			any_character_artifact = {
				has_variable = kurgan_saddle
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		hidden_effect = {
			scope:inspiration_owner = {
				create_artifact = {
					name = kurgan_ornament_name
					description = kurgan_ornament_description
					type = miscellaneous
					visuals = small_box
					modifier = artifact_court_grandeur_baseline_add_1_modifier
					save_scope_as = kurgan_ornament
				}
			}
			hidden_effect_new_artifact = {
				scope:kurgan_ornament = {
					flag_as_trash_artifact = yes
					set_variable = {
						name = kurgan_ornament
						value = yes
					}
				}
			}
		}
		hidden_effect = {
			scope:inspiration_owner = {
				create_artifact = {
					name = kurgan_saddle_name
					description = kurgan_saddle_description
					type = miscellaneous
					visuals = medium_box
					modifier = artifact_monthly_martial_lifestyle_xp_1_modifier
					save_scope_as = kurgan_saddle
				}
			}
			hidden_effect_new_artifact = {
				scope:kurgan_saddle = {
					flag_as_trash_artifact = yes
					set_variable = {
						name = kurgan_saddle
						value = yes
					}
				}
			}
		}
	}

	option = {  # get a fancy little bauble from the tomb
		name = fund_inspiration.6503.a
		scope:kurgan_ornament = {
			set_owner = root
		}
		hidden_effect = { destroy_artifact = scope:kurgan_saddle }
		scope:inspiration_owner = {
			add_character_modifier = {
				modifier = tomb_robber_modifier
				years = 2
			}
		}
		add_character_modifier = {
			modifier = tomb_robber_modifier
			years = 2
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}

	option = { # study the saddles and horsemanship of the scythians
		name = fund_inspiration.6503.b
		scope:kurgan_saddle = {
			set_owner = root
		}
		hidden_effect = { destroy_artifact = scope:kurgan_ornament }
		scope:inspiration_owner = {
			add_character_modifier = {
				modifier = tomb_robber_modifier
				years = 2
			}
		}
		add_character_modifier = {
			modifier = tomb_robber_modifier
			years = 2
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { # refuse to rob the tomb
		name = fund_inspiration.6503.c
		add_character_modifier = {
			modifier = respect_for_the_dead_modifier
			years = 2
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.5
			}
		}
	}
}

#Adventurer took a farmhand as a lover

scripted_trigger adventurer_pregnant_woman_trigger = {
	is_male = yes
	OR = {
		has_sexuality = bisexual
		has_sexuality = heterosexual
	}
}

scripted_trigger adventurer_female_lover_trigger = {
	is_female = yes
	has_sexuality = homosexual
}

fund_inspiration.6504 = {
	type = character_event
	title = fund_inspiration.6504.t
	theme = hunting
	desc = 	{
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6504.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						has_character_flag = adventurer_pregnant_lover_flag
					}
				}
				desc = fund_inspiration.6504.pregnant
			}
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						has_character_flag = adventurer_female_lover_flag
					}
				}
				desc = fund_inspiration.6504.female_lover
			}
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						has_character_flag = adventurer_male_lover_flag
						has_sexuality = homosexual
					}
				}
				desc = fund_inspiration.6504.male_lover_homosexual
			}
			desc = fund_inspiration.6504.male_lover
		}
		triggered_desc = {
			trigger = {
				NOT = {
					scope:inspiration_owner = {
						has_character_flag = adventurer_pregnant_lover_flag
					}
				}
			}
			desc = fund_inspiration.6504.lover_ultimatum
		}
	}
	
	override_background = {
		event_background = farmland
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	right_portrait = { 
		character = scope:adventurer_lover
		animation = love
	}
	cooldown = { years = 15 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = farmlands
			}
			NOR = { 
				has_trait = chaste
				has_trait = infertile
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:inspiration_owner = {
			location = {
				save_scope_as = location_template
			}
			if = {
				limit = {
					any_secret = {
						secret_type = secret_homosexual
					}
				}
				random_secret = {
					limit = { secret_type = secret_homosexual }
					reveal_to = root
				}
			}
		} 
		if = {
			limit = {
				scope:inspiration_owner = {
					adventurer_pregnant_woman_trigger = yes
				}
			}
			create_character = {
				location = scope:inspiration_owner.location
				template = adventurer_pregnant_lover_character
				faith = scope:location_template.faith
				culture = scope:location_template.culture
				save_scope_as = adventurer_lover
			}
			scope:inspiration_owner = {
				add_character_flag = adventurer_pregnant_lover_flag
			}
			hidden_effect = {
				scope:adventurer_lover = {
					if = {
						limit = {
							NOR = {
								has_sexuality = heterosexual
								has_sexuality = bisexual
							}
						}
						set_sexuality = heterosexual
					}
					make_pregnant = {
						father = scope:inspiration_owner
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:inspiration_owner = {
					adventurer_female_lover_trigger = yes
				}
			}
			create_character = {
				location = scope:inspiration_owner.location
				template = adventurer_female_lover_character
				faith = scope:location_template.faith
				culture = scope:location_template.culture
				save_scope_as = adventurer_lover
			}
			scope:inspiration_owner = {
				if = {
					limit = {
						is_female = yes
						NOT = { has_sexuality = homosexual }
					}
					set_sexuality = homosexual
					hidden_effect = {
						scope:adventurer_lover = { set_sexuality = homosexual }
					}
				}
				add_character_flag = adventurer_female_lover_flag
			}
		}
		else = {
			create_character = {
				location = scope:inspiration_owner.location
				template = adventurer_male_lover_character
				faith = scope:location_template.faith
				culture = scope:location_template.culture
				save_scope_as = adventurer_lover
			}
			scope:inspiration_owner = {
				if = {
					limit = {
						NOT = { has_sexuality = homosexual }
					}
					set_sexuality = bisexual
				}
				add_character_flag = adventurer_male_lover_flag
			}
		}
		hidden_effect = {
			scope:inspiration_owner = {
				set_relation_lover = scope:adventurer_lover
			}
		}
	}

	option = { # tell the adventurer to begone
		name = fund_inspiration.6504.a
		custom_tooltip = fund_inspiration.6504.a.tt
		trigger = {
			NOT = {
				scope:inspiration_owner = {
					has_character_flag = adventurer_pregnant_lover_flag
				}
			}
		}
		change_current_court_grandeur = medium_court_grandeur_gain
		end_inspiration_sponsorship = scope:inspiration
		remove_courtier_or_guest = scope:inspiration_owner
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = -0.5
			}
		}
	}

	option = { # let the adventurer and their lover come to court
		name = fund_inspiration.6504.b
		trigger = {
			NOT = {
				scope:inspiration_owner = {
					has_character_flag = adventurer_pregnant_lover_flag
				}
			}
		}
		add_courtier = scope:adventurer_lover
		change_current_court_grandeur = medium_court_grandeur_loss
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.5
			}
		}
	}

	option = { # express sympathy for the child if the lover is pregnant
		name = fund_inspiration.6504.c
		trigger = {
			scope:inspiration_owner = {
				has_character_flag = adventurer_pregnant_lover_flag
			}
		}
		add_courtier = scope:adventurer_lover
		change_current_court_grandeur = medium_court_grandeur_loss
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = 0.5
			}
		}
	}
	option = { # absolutely reject peasants in the court
		name = fund_inspiration.6504.d
		trigger = {
			scope:inspiration_owner = {
				has_character_flag = adventurer_pregnant_lover_flag
			}
		}
		change_current_court_grandeur = medium_court_grandeur_gain
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = -2
			}
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_compassion = -0.5
			}
		}
	}
}

#Oasis event, or, should I say, the CK3 beach episode

fund_inspiration.6505 = {
	type = character_event
	title = fund_inspiration.6505.t
	desc = 	{
		desc = fund_inspiration.6500.introduction
		desc = fund_inspiration.6505.desc
	}
	theme = hunting
	override_background = {
		event_background = wilderness_desert
	}
	left_portrait = {
		character = scope:inspiration_owner
		animation = happiness
		triggered_outfit = {
			remove_default_outfit = yes
			outfit_tags = { no_clothes }
		}
	}
	artifact = {
	    target = scope:naked_tapestry
	    position = lower_center_portrait
	}
	
	cooldown = { years = 10 }
	
	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = oasis
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = naked_tapestry
			}
		}
	}

	weight_multiplier = {
		base = 2
	}

	immediate = {
		hidden_effect = {
			save_scope_as = owner
			set_artifact_rarity_common = yes
			scope:inspiration_owner = {
				create_artifact = {	
					name = naked_tapestry_name
					description = naked_tapestry_description
					visuals = tapestry
					type = tapestry
					quality = scope:quality
					wealth = scope:wealth
					modifier = artifact_attraction_opinion_2_modifier
					save_scope_as = naked_tapestry
				}
				add_character_flag = is_naked
				hidden_effect_new_artifact = {
					scope:naked_tapestry = {
						flag_as_trash_artifact = yes
						set_variable = {
							name = naked_tapestry
							value = yes
						}
					}
				}
			}
		}
	}

	option = { # destroy the naked tapestry
		name = {
			trigger = { 
				has_trait = one_eyed
			}
			text = fund_inspiration.6505.a_one_eyed
		}
		name = {
			trigger = { 
				has_trait = blind
			}
			text = fund_inspiration.6505.a_blind
		}
		name = fund_inspiration.6505.a
		destroy_artifact = scope:naked_tapestry
		reverse_add_opinion = {
			target = scope:inspiration_owner
			opinion = -20
			modifier = insulted_opinion
		}
		if = {
			#limit = { NOT = { has_faith = faith:adamites } }
			add_piety = medium_piety_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { # appreciate the salacious tapestry... in private
		name = fund_inspiration.6505.b
		scope:naked_tapestry = {
			set_owner = root
		}
		add_intrigue_lifestyle_xp = medium_lifestyle_xp
		reverse_add_opinion = {
			target = scope:inspiration_owner
			opinion = 20
			modifier = pleased_opinion
		}
		if = {
			limit = {
				has_trait = chaste
			}
			remove_trait = chaste
			add_trait = lustful
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = -0.5
			}
		}
	}

	option = { # flex the naked tapestry in front of your whole court
		name = fund_inspiration.6505.c
		#trigger = {
		#	NOT = { has_faith = faith:adamites }
		#}
		scope:naked_tapestry = {
			set_owner = root
		}
		every_courtier = {
			limit = {
				has_trait = lustful
			}
			custom = all_lustful_in_the_court
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 20
			}
		}
		reverse_add_opinion = {
			target = scope:inspiration_owner
			opinion = 20
			modifier = pleased_opinion
		}
		change_current_court_grandeur = minor_court_grandeur_gain
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}
	#option = { #adamites find it sacred
	#	name = fund_inspiration.6505.d
	#	trigger = {
	#		has_faith = faith:adamites
	#	}
	#	scope:naked_tapestry = {
	#		set_owner = root
	#	}
	#	add_piety = medium_piety_gain
	#	reverse_add_opinion = {
	#		target = scope:inspiration_owner
	#		opinion = 20
	#		modifier = pleased_opinion
	#	}
	#	ai_chance = {
	#		base = 50
	#		ai_value_modifier = {
	#			ai_rationality = 0.5
	#		}
	#	}
	#}
}

#Adventurer hasn't gone on the adventure, is in a local tavern by Isabella Welch
#as pope urban iii would say, 'the tavern sins'
scripted_trigger deadbeat_adventurer_trigger = {
	OR = {
		has_trait = rakish
		has_trait = lazy
		has_trait = drunkard
		has_trait = gluttonous
		has_trait = drunkard
		has_trait = deceitful
		has_trait = greedy
	}
	NOT = { has_character_flag = was_deadbeat }
	adventure_inspiration_average_skill_value < high_inspiration_skill
}

fund_inspiration.6400 = {
	type = character_event
	title = fund_inspiration.6400.t
	desc = fund_inspiration.6400.desc
	theme = realm
	override_background = {
		event_background = tavern
	}
	left_portrait = { 
		character = scope:inspiration_owner
		animation = scheme
	}
	right_portrait = { 
		character = root
		animation = shock
	}

	cooldown = { years = 10 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
			scope:inspiration_owner = {
				deadbeat_adventurer_trigger = yes
			}
		}
	}

	weight_multiplier = {
		base = 0.25
		modifier = {
			add = 0.75
			scope:inspiration_owner = {
				OR = {
					has_trait = drunkard
					has_trait = lazy
				}
			}
		}
		modifier = {
			add = -0.25
			scope:inspiration_owner = {
				adventure_inspiration_average_skill_value >= medium_inspiration_skill
			}
		}
	}

	immediate = {
		scope:inspiration = {
			change_inspiration_progress = -5
		}
		scope:inspiration_owner = {
			if = {
				limit = {
					NOT = { has_trait = drunkard }
				}
				add_trait = drunkard
			}
			add_character_flag = was_deadbeat
		}
		hidden_effect = {
			scope:inspiration_owner.activity = {
				move_activity = root.capital_province
			}
		}
	}

	option = { 
		name = fund_inspiration.6400.a
		duel = {
			skill = stewardship
			target = scope:inspiration_owner
			30 = {
				desc = fund_inspiration.6400.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.2
				}
				send_interface_toast = {
					title = fund_inspiration.6400.a.success
					custom_tooltip = fund_inspiration.6400.a.success_continue
					left_icon = scope:inspiration_owner
				}
			}
			20 = {
				desc = fund_inspiration.6400.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.2
				}
				send_interface_toast = {
					title = fund_inspiration.6400.a.failure
					left_icon = scope:inspiration_owner
					remove_short_term_gold = minor_gold_value
					end_inspiration_sponsorship = scope:inspiration
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
			}
		}
	}

	option = {
		name = fund_inspiration.6400.b
		end_inspiration_sponsorship = scope:inspiration
		scope:inspiration_owner = {
			add_opinion = {
				target = root
				modifier = insulted_opinion
				opinion = -20
			}
		}
		root.capital_county = {
			add_county_modifier = {
				modifier = county_chastised_beloved_adventurer_modifier
				years = 25
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.5
				ai_greed = 0.5
			}
		}
	}
}


#Adventurer is being very precious, not really suited for the outdoors

fund_inspiration.6506 = {
	type = character_event
	title = fund_inspiration.6506.t
	desc = 	{
		desc = fund_inspiration.6506.introduction
		desc = fund_inspiration.6506.desc
	}

	theme = hunting
	override_background = {
		event_background = wilderness_steppe
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}
	
	cooldown = { years = 10 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = wetlands
			}
			NOT = {
				has_trait = rough_terrain_expert
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = frogspawn_jar
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 0.5
			scope:inspiration_owner = {
				OR = {
					has_trait = craven
					has_trait = lazy
					has_trait = gluttonous
					has_trait = irritable
					has_trait = profligate
				}
			}
		}
	}

	immediate = {
		scope:inspiration_owner = {
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
			create_artifact = {
				name = frogspawn_jar_name
				description = frogspawn_jar_description
				type = miscellaneous
				visuals = small_box
				modifier = artifact_fertility_gain_1_modifier
				save_scope_as = frogspawn_jar
				history = {
					type = discovered
					actor = scope:inspiration_owner
					recipient = root
					location = scope:inspiration_owner.location
				}
			}
			hidden_effect_new_artifact = {
				scope:frogspawn_jar = {
					flag_as_trash_artifact = yes
					set_variable = {
						name = frogspawn_jar
						value = yes
					}
				}
			}
		}
		scope:frogspawn_jar = {
			set_owner = root
		}
	}

	option = { #try and convince them to keep going
		name = fund_inspiration.6506.a
		scope:inspiration_owner = {
			add_stress = major_stress_gain
		}
		add_opinion = {
			target = root
			modifier = cruelty_opinion
			opinion = -20
		}
		scope:inspiration_owner = {
			hidden_effect = {
				duel = {
					skill = prowess
					value = 8
					40 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = 0.5
						}
						change_artifact_quality_effect = {
							AMOUNT = -2
						}
					}
					30 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = -0.5
						}
						hidden_effect = {
							add_character_flag = adventurer_stuck_in_swamp
						}
					}
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.5
				ai_honor = 0.5
			}
		}
	}

	option = { #let them go to easier lands
		name = fund_inspiration.6506.b
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = -2
			}
			add_opinion = {
				target = root
				modifier = kindness_opinion
				opinion = 20
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_greed = -0.5
			}
		}
	}
}

#Adventurer is travelling through reasonably pleasant lands, gets bullied by the county holder who doesn't like ROOT

fund_inspiration.6507 = {
	type = character_event
	title = fund_inspiration.6507.t
	desc = 	{
		desc = fund_inspiration.6507.introduction
		desc = fund_inspiration.6507.desc
	}

	theme = hunting
	override_background = {
		event_background = wilderness_steppe
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}


	cooldown = { years = 20 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			NOT = { has_character_flag = had_fund_inspiration.6507 }
			location = {
				terrain = plains
				exists = this.barony.holder
				this.barony.holder = {
					is_adult = yes
					opinion = {
						target = root
						value <= low_negative_opinion
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:inspiration_owner = {
			location = {
				this.barony.holder = { save_scope_as = grumpy_liege }
			}
			add_character_flag = had_fund_inspiration.6507
			if = {
				limit = {
					NOR = { 
						has_trait = blind
						has_trait = one_eyed
					}
				}
				add_trait = one_eyed
			}
			else_if = {
				limit = {
					has_trait = one_eyed
					NOT = { has_trait = blind }
				}
				add_trait = blind
			}
		}
	}

	option = { #midly respond by denouncing the guy who did this
		name = fund_inspiration.6507.a
		hidden_effect = {
			if = {
				limit = {
					scope:grumpy_liege = {
						can_start_scheme = {
							type = murder
							target = scope:inspiration_owner
						}
					}
				}
				scope:grumpy_liege = {
					start_scheme = {
						type = murder
						target = scope:inspiration_owner
					}
				}
			}
		}
		scope:grumpy_liege = {
			add_opinion = {
				target = root
				modifier = insulted_opinion
				opinion = -25
			}
		}
		scope:inspiration_owner = {
			if = {
				limit = { has_trait = brave }
				remove_trait = brave
				add_trait = craven
			}
			else_if = {
				limit = { has_trait = trusting }
				remove_trait = trusting
				add_trait = paranoid
			}
			change_artifact_quality_effect = {
				AMOUNT = -2
			}
		}
		if = {
			limit = {
				scope:inspiration_owner = {
					can_start_scheme = {
						type = murder
						target = scope:grumpy_liege
					}
				}
			}
			scope:inspiration_owner = {
				start_scheme = {
					type = murder
					target = scope:grumpy_liege
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.1
				ai_boldness = 0.1
			}
		}
	}

	option = { #help the sleighted adventurer scheme 
		name = fund_inspiration.6507.b
		trigger = {
			scope:grumpy_liege = {
				is_vassal_or_below_of = root
			}
			can_start_scheme = {
				type = murder
				target = scope:grumpy_liege
			}
		}
		start_scheme = {
			type = murder
			target = scope:grumpy_liege
		}
		random_scheme = {
			limit = {
				scheme_type = murder
				scheme_target = scope:grumpy_liege
			}
			save_scope_as = grumpy_liege_murder
		}
		scope:inspiration_owner = {
			force_add_to_scheme = {
				scheme = scope:grumpy_liege_murder
				years = 15
			}
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 40
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.5
				ai_boldness = 0.5
			}
		}
	}

	option = { #ignore everything and refuse to seek vengeance
		name = fund_inspiration.6507.c
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = -4
			}
			add_opinion = {
				target = root
				modifier = insulted_opinion
				opinion = -20
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = -0.5
				ai_boldness = -0.5
				ai_rationality = 0.5
			}
		}
	}
}

#Adventurer studying beavers in the Taiga

fund_inspiration.6508 = {
	type = character_event
	title = fund_inspiration.6508.t
	desc = 	{
		desc = fund_inspiration.6508.introduction
		desc = fund_inspiration.6508.desc
		triggered_desc = {
			trigger = {
				employs_court_position = royal_architect_court_position
			}
			desc = fund_inspiration.6508.architect_desc
		}
	}
	theme = hunting
	override_background = {
		event_background = wilderness_steppe
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}
	lower_left_portrait = {
		character = scope:royal_architect
	}
	lower_right_portrait = {
		character = scope:child
	}
	
	cooldown = { years = 15 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = taiga
			}
		}
		NOR = {
			any_character_artifact = {
				has_variable = beaver_book
			}
			any_child = {
				any_character_artifact = {
					has_variable = beaver_book
				}
			}
			any_court_position_holder = {
				type = royal_architect_court_position
				any_character_artifact = {
					has_variable = beaver_book
				}
			}
		}
	}

	immediate = {
		random_court_position_holder = {
			type = royal_architect_court_position
			save_scope_as = court_architect
		}
		scope:inspiration_owner = {
			#To stagger any following events
			add_character_flag = {
				flag = fund_adventure_inspiration_event_cooldown
				days = { 30 60 }
			}
			create_artifact = {
				name = beaver_book_name
				description = beaver_book_description
				type = miscellaneous
				visuals = book
				modifier = artifact_build_time_2_modifier
				save_scope_as = beaver_book
				history = {
					type = created
					actor = scope:inspiration_owner
					recipient = root
					location = scope:inspiration_owner.location
				}
			}
			hidden_effect_new_artifact = {
				scope:beaver_book = {
					flag_as_trash_artifact = yes
					set_variable = {
						name = beaver_book
						value = yes
					}
				}
			}
			add_learning_skill = 2
		}
		random_child = {
			limit = {
				age < 15
				is_available_ai = yes
			}
			save_scope_as = child
		}
	}
	option = { #study the beaver book yourself
		name = fund_inspiration.6508.a
		add_stewardship_lifestyle_xp = massive_lifestyle_xp
		scope:beaver_book = {
			set_owner = root
		}
	}

	option = { #give the book to your architect to study
		name = fund_inspiration.6508.b
		trigger = { exists = scope:court_architect }
		custom_tooltip = fund_inspiration.6508.b.tt
		scope:court_architect = {
			add_stewardship_skill = 2
			set_variable = {
				name = fund_inspiration_6508_architect_improvement
				value = yes
			}
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 20
			}
		}
		scope:beaver_book = {
			set_owner = scope:court_architect
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { #give the book to your child for fun
		name = fund_inspiration.6508.c
		trigger = {
			exists = scope:child
		}
		scope:child = {
			add_stewardship_skill = 2
			add_opinion = {
				target = root
				modifier = supportive_parent
				opinion = 20
			}
		}
		scope:beaver_book = {
			set_owner = scope:child
		}
		if = {
			limit = { exists = scope:court_architect }
			scope:court_architect = {
				add_opinion = {
					target = root
					modifier = insulted_opinion
					opinion = -20
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = -0.2
				ai_compassion = 0.5
			}
		}
	}
	option = { #pay to encourage the adventurer to keep up good work
		name = fund_inspiration.6508.d
		trigger = {
			NAND = {
				any_child = {
					age < 15
					is_available_ai = yes
				}
				employs_court_position = royal_architect_court_position
			}
		}
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
		}
		remove_short_term_gold = minor_gold_value
		scope:beaver_book = {
			set_owner = root
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = -0.5
			}
			modifier = {
				short_term_gold < minor_gold_value
				factor = 0
			}
		}
	}
}

#Adventurer vastly exaggerating what crocodiles look like

fund_inspiration.6509 = {
	type = character_event
	title = fund_inspiration.6509.t
	desc = {
		desc = fund_inspiration.6509.intro_desc
		desc = fund_inspiration.6509.desc
	}
	theme = hunting
	override_background = {
		event_background = wilderness_steppe
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}
	
	cooldown = { years = 10 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = jungle
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = crocodile_tapestry
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		
	}

	option = { #make a crocodile tapestry and display it! the horror!
		name = fund_inspiration.6509.a
		remove_short_term_gold = medium_gold_value

		save_scope_as = owner
		set_artifact_rarity_common = yes
			create_artifact = {
				name = crocodile_tapestry_name
				description = crocodile_tapestry_description
				type = tapestry
				visuals = tapestry
				modifier = artifact_dread_gain_mult_1_modifier
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = crocodile_tapestry
				history = {
					type = given
					actor = scope:inspiration_owner
					recipient = root
					location = scope:inspiration_owner.location
				}
			}
			hidden_effect_new_artifact = {
				scope:crocodile_tapestry = {
					flag_as_trash_artifact = yes
					set_variable = {
						name = crocodile_tapestry
						value = yes
					}
				}
			}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.5
			}
			modifier = {
				short_term_gold < medium_gold_value
				factor = 0
			}
		}
	}

	option = { #be afraid of the crocodile, but impressed by the adventurer
		name = fund_inspiration.6509.b
		add_stress = minor_stress_gain
		scope:inspiration_owner = {
			change_artifact_quality_effect = {
				AMOUNT = 2
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = -0.5
				ai_rationality = -0.1
			}
		}
	}

	option = { #you know what crocodiles are, see em everyday
		name = fund_inspiration.6509.c
		trigger = {
			any_held_title = {
				this = title:k_egypt
			}
		}
		add_learning_lifestyle_xp = medium_lifestyle_xp
		add_prestige = medium_prestige_gain

		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}
}

#Adventurer meeting a vigilante band who hide in the forest

fund_inspiration.6510 = {
	type = character_event
	title = fund_inspiration.6510.t
	desc = {
		desc = fund_inspiration.6510.intro_desc
		desc = fund_inspiration.6510.desc
	}
	theme = hunting
	override_background = {
		event_background = fangorn
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	trigger = {
		exists = scope:inspiration_owner.location.barony.holder
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				or = {
					terrain = forest
					terrain = deep_forest
					terrain = myrtle_forest
					terrain = mallorn_forest
				}
			}
			NOT = { has_trait = greedy }
			NOT = { is_councillor_of = root }
		} 
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:inspiration_owner = {
			location = {
				this.barony.holder = { save_scope_as = enemy_liege }
			}
			add_trait = improvident
		}

	}

	option = { #make them your steward, they become good at understanding the people
		name = fund_inspiration.6510.a
		
		trigger = {
			scope:inspiration_owner = {
				can_be_steward_trigger = { COURT_OWNER = root }
			}
		}
		
		root = { fire_councillor = cp:councillor_steward }
		root = {
			assign_councillor_type = {
				type = councillor_steward
				target = scope:inspiration_owner
			}
		}
		scope:inspiration_owner = {
			add_trait = peasant_leader
		}
		hidden_effect = {
			end_inspiration_sponsorship = scope:inspiration
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
			}
		}
	}

	option = { #threaten to kill the adventurer for not returning
		name = fund_inspiration.6510.b
		duel = {
			skill = intrigue
			target = scope:inspiration_owner
			10 = {
				custom_tooltip = fund_inspiration.6510.b.toast_outcome.positive
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
				}
				send_interface_toast = {
					title = fund_inspiration.6510.b.toast_outcome.positive
					custom_tooltip = fund_inspiration.6510.b.toast_outcome.positive.continue
					left_icon = root
					scope:inspiration_owner = {
						change_artifact_quality_effect = { AMOUNT = 2 }
					}
				}
			}
			20 = {
				custom_tooltip = fund_inspiration.6510.b.toast_outcome.refusal
				send_interface_toast = {
					title = fund_inspiration.6510.b.toast_outcome.refusal
					custom_tooltip = fund_inspiration.6510.b.toast_outcome.positive.flee
					left_icon = root
					scope:inspiration_owner = {
						end_inspiration_sponsorship = scope:inspiration
						add_prestige = medium_prestige_loss
						hidden_effect = {
							death = { death_reason = death_vanished }
						}
					}
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.5
				ai_boldness = 0.5
			}
		}
	}

	option = { # let em go, you don't need em
		name = fund_inspiration.6510.c
		end_inspiration_sponsorship = scope:inspiration
		scope:inspiration_owner = {
			hidden_effect = {
				death = { death_reason = death_vanished }
			}
		}
		ai_chance = {
			base = 10
		}
	}
}

#Ageing or sick adventurer decides that the mountains are a last moment of beauty for them

fund_inspiration.6511 = {
	type = character_event
	title = fund_inspiration.6511.t
	desc = {
		desc = fund_inspiration.6511.intro_desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						and = {
							is_elf = no
							if = {
								trigger = {has_trait = blood_of_numenor_1}
								age > 80
							}
							else_if = {
								trigger = {has_trait = blood_of_numenor_2}
								age > 120
							}
							else_if = {
								trigger = {has_trait = blood_of_numenor_3}
								age > 200
							}
							else_if = {
								trigger = {
									nor = {
										has_trait = blood_of_numenor_1
										has_trait = blood_of_numenor_2
										has_trait = blood_of_numenor_3
									}
								}
								age > 60
							}
					}
				}
				desc = fund_inspiration.6511.old_age
			}
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						health <= poor_health
					}
				}
				desc = fund_inspiration.6511.poor_health
			}
			triggered_desc = {
				trigger = {
					scope:inspiration_owner = {
						location = {
							has_province_modifier = winter_harsh_modifier
						}
					}
				}
				desc = fund_inspiration.6511.winter
			}
		}
	}
	theme = death
	override_background = {
		event_background = wilderness_mountains
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}

	cooldown = { years = 15 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = mountains
			}
			OR = {
				age > 60
				health <= poor_health
				OR = {
					location = {
						has_province_modifier = winter_harsh_modifier
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 0.5
	}

	immediate = {
		scope:inspiration_owner = {
			death = {
				death_reason = death_ice
			}
		}
	}

	option = { #these are conditions under which the adventurer can have a dramatic death, they aren't really there for you to select anything, just to tell you you were foolish for sending them into the snowy mountains
		name = fund_inspiration.6511.a
		#This event just informs you it has happened
	}
}

#Adventurer asking you to name the mountain

fund_inspiration.6512 = {
	type = character_event
	title = fund_inspiration.6512.t
	desc = {
		desc = fund_inspiration.6512.intro_desc
		desc = fund_inspiration.6512.desc
	}
	theme = hunting
	override_background = {
		event_background = wilderness_mountains
	}

	left_portrait = { 
		character = scope:inspiration_owner
		animation = personality_bold
	}


	
	cooldown = { years = 10 }

	trigger = {
		scope:inspiration = {
			has_inspiration_type = adventure_inspiration
		}
		scope:inspiration_owner = {
			location = {
				terrain = desert_mountains
				this.county.holder = {
					NOR = {
						this.top_liege = root
						this.liege = root
						this = root
					}
				}
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = mountain_rock
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:inspiration_owner = {
			location = {
				save_scope_as = mountain_location
			}
			hidden_effect = {	
				create_artifact = {
					name = mountain_rock_name
					description = mountain_rock_description
					type = miscellaneous
					visuals = rock
					modifier = artifact_heavy_cavalry_toughness_1_modifier
					save_scope_as = mountain_rock
					history = {
						type = discovered
						actor = scope:inspiration_owner
						recipient = root
						location = scope:inspiration_owner.location
					}
				}
				hidden_effect_new_artifact = {
					scope:mountain_rock = {
						flag_as_trash_artifact = yes
						set_variable = {
							name = mountain_rock
							value = yes
						}
					}
				}
			}
		}
		if = {
			limit = {
				any_relation = { type = lover }
			}
			random_relation = {
				type = lover
				save_scope_as = lover
			}
		}
		if = {
			limit = {
				any_relation = { type = potential_rival }
			}
			random_relation = {
				type = potential_rival
				save_scope_as = rival
			}
		}
	}

	after = {
		if = {
			limit = {
				NOT = { has_character_flag = got_mountain_rock }
			}
			destroy_artifact = scope:mountain_rock
		}
		remove_character_flag = got_mountain_rock
	}

	option = { #scoff at the idea of not respecting the local name
		name = fund_inspiration.6512.a
		add_prestige = medium_prestige_gain
		stress_impact = {
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { #dig at the rocky mountains
		name = fund_inspiration.6512.b
		trigger = {
			NOR = {
				exists = scope:lover
				is_cannibal_trigger = yes
				is_male = yes
				exists = scope:rival
				has_trait = greedy
				martial > 10
				intrigue > 10
			}
		}
		every_courtier_or_guest = {
			limit = { age < 14 }
			custom = custom.every_child_in_the_court
			add_opinion = {
				modifier = humorous_opinion
				opinion = 10
				target = root
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = -0.5
			}
		}
	}

	option = { #name after your war god
		name = fund_inspiration.6512.c
		trigger = {
			martial > 10
			NOR = {
				exists = scope:lover
				is_cannibal_trigger = yes
				is_male = yes
				exists = scope:rival
				has_trait = greedy
				intrigue > 10
			}
		}
		skill = martial
		add_martial_skill = 1
		add_piety = minor_piety_gain
		stress_impact = {
			arrogant = minor_stress_impact_gain
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}

	option = { #name after your fate god
		name = fund_inspiration.6512.d
		trigger = {
			intrigue > 10
			NOR = {
				exists = scope:lover
				is_cannibal_trigger = yes
				is_male = yes
				exists = scope:rival
				has_trait = greedy
				martial > 10
			}
		}
		skill = intrigue
		add_intrigue_skill = 1
		add_piety = minor_piety_gain
		stress_impact = {
			arrogant = minor_stress_impact_gain
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { #name after your beloved and become their soulmate, possibly
		name = fund_inspiration.6512.e
		trigger = { exists = scope:lover }
		if = {
			limit = {
				can_set_relation_soulmate_trigger = { CHARACTER = scope:lover }
			}
			set_relation_soulmate = scope:lover
		}
		else = {
			reverse_add_opinion = {
				target = scope:lover
				opinion = 20
				modifier = love_opinion
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			callous = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
			}
		}
	}

	option = { #flex that you like biting things
		name = fund_inspiration.6512.f
		trigger = { is_cannibal_trigger = yes }
		trait = cannibal
		add_dread = medium_dread_gain
		stress_impact = {
			humble = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = -0.5
			}
		}
		
	}

	option = { #name after your... ahem... rod
		name = fund_inspiration.6512.g
		trigger = {
			is_male = yes
			has_trait = arrogant
		}
		add_character_modifier = {
			modifier = phallic_mountain_modifier
			years = 10
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.7
			}
		}
	}

	option = { #name after your rival. that will teach them!
		name = fund_inspiration.6512.h
		trigger = { exists = scope:rival }
		progress_towards_rival_effect = {
			CHARACTER = scope:rival
			OPINION = no
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.5
			}
		}
	}

	option = { #force them to lug some rocks home
		name = fund_inspiration.6512.i
		trigger = { has_trait = greedy }
		trait = greedy
		scope:mountain_rock = { set_owner = root }
		add_character_flag = got_mountain_rock
		stress_impact = {
			content = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = 0.5
				ai_rationality = 0.5
			}
		}
	}
}