#LotR travel events

namespace = lotr_travel_events

############################
## LotR Travel Events
############################

# lotr_travel_events.0001 		- A Colossal Wreck by Juke
# lotr_travel_events.0002 		- Giant Scorpion Attack
# lotr_travel_events.0003 		- Sandstorm!
# lotr_travel_events.0003-0004	- An Encounter in Rhosgobel - Meet Radagast!


############################################


##########################################
# A Colossal Wreck
# by Juke
# 0001
# Came across an ancient (numenorean?) monument somewhere around the dune sea
##########################################

lotr_travel_events.0001 = {
	type = character_event
	title = lotr_travel_events.0001.t
	desc = lotr_travel_events.0001.desc
	theme = travel	
	#override_background = {
	#	reference = wilderness_desert
	#}
	left_portrait = {
		character = root
	}
	cooldown = { years = 50 }
	trigger = {
		is_available_travelling = yes
		is_landed = yes
		NOT = { has_character_flag = had_event_ozymandias }
		location = {
			OR = {
				terrain = desert
				terrain = desert_mountains
				terrain = dune_sea
				terrain = red_desert
				terrain = saltflats
			}
		}
	}
	immediate = {
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}
	}
	option = { # Nothing besides remains.
		name = lotr_travel_events.0001.a
		trigger = {
			has_trait = humble
		}
		add_character_flag = {
			flag = had_event_ozymandias
		}
		add_character_modifier = {
			modifier = harad_0017_ozymandias_good_modifier
			years = 25
		}
		stress_impact = {
			base = miniscule_stress_impact_loss
		}
		add_piety = 50
	}
	option = { # Nothing besides remains...
		name = lotr_travel_events.0001.b
		trigger = {
			NOR = {
				has_trait = humble
				has_trait = arrogant
			}
		}
		add_character_flag = {
			flag = had_event_ozymandias
		}
		add_character_modifier = {
			modifier = harad_0017_ozymandias_bad_modifier
			years = 25
		}
		stress_impact = {
			base = miniscule_stress_impact_gain
		}
	}
	option = { # Nothing besides remains...!
		name = lotr_travel_events.0001.c
		trigger = {
			has_trait = arrogant
		}
		add_character_flag = {
			flag = had_event_ozymandias
		}
		add_character_modifier = {
			modifier = harad_0017_ozymandias_bad_modifier
			years = 25
		}
		stress_impact = {
			base = miniscule_stress_impact_gain
		}
		add_prestige = 50	
		random = {
			chance = 10
			add_trait = depressed_1	
		}
	}
}

##########################################
# Giant Scorpion Attack
# by Jaco_Daan and Juke
# 0002
# Attacked by Giant Scorpion in the Dune Sea!
##########################################

scripted_effect lotr_travel_events_scorpion_duel_effect = {	#lifted from #travel_danger_events_6000_beast_duel_effect
	$FIGHTER$ = {
		duel = {
			skill = prowess
			value = high_skill_rating
			5 = {
				desc = lotr_travel_events.0002.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -49
				}
				root = {
					send_interface_toast = {
						title = lotr_travel_events.0002.success
						left_icon = $FIGHTER$
						$FIGHTER$ = { add_prestige = medium_prestige_gain }
					}
				}
				min = 1
			}
			15 = {
				desc = lotr_travel_events.0002.wound
				trigger = {
					NOT = {
						has_trait_rank = {
							trait = wounded
							rank > 1
						}
					}
				}
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				root = {
					send_interface_toast = {
						title = lotr_travel_events.0002.wound
						left_icon = $FIGHTER$
						$FIGHTER$ = {
							hunt_animal_wound_effect = { VARIABLE = root.var:animal_type }
						}
					}
				}
				min = 3
			}
			10 = {
				desc = lotr_travel_events.0002.failure
				trigger = {
					cannot_be_killed = no #lotr
				}
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				root = {
					send_interface_toast = {
						title = lotr_travel_events.0002.failure
						left_icon = $FIGHTER$
						$FIGHTER$ = {
							death = { death_reason = death_scorpion }
						}
					}
				}
				min = 2
				modifier = {
					add = -30
					is_elf = yes
				}
			}
		}
	}
}
lotr_travel_events.0002 = { ### GIANT SCORPION ###
	type = character_event
	title = lotr_travel_events.0002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = had_scorpion_event_recently }
				desc = lotr_travel_events.0002.desc.again
			}
			desc = lotr_travel_events.0002.desc
		}
		triggered_desc = {
			trigger = { exists = scope:beast_victim }
			desc = lotr_travel_events.0002.desc.victim
		}
	}
	theme = travel
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:beast_victim
		animation = fear
	}
	lower_left_portrait = {
		trigger = { exists = scope:travel_leader }
		character = scope:travel_leader
	}
	trigger = {
		is_available_travelling = yes
		is_landed = yes
		location = {
			terrain = dune_sea
		}
	}
	immediate = {
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
					cannot_be_killed = no #lotr
				}
				alternative_limit = { always = yes }
				weight = {
					base = 1
					modifier = { add = prowess }
					modifier = {
						add = 10
						has_court_position = bodyguard_court_position
					}
					modifier = {
						add = 10
						is_knight_of = root
					}
				}
				save_scope_as = beast_victim
			}
			#Save travel leader
			if = {
				limit = {
					NOT = { travel_leader ?= scope:beast_victim }
				}
				travel_leader ?= { save_scope_as = travel_leader }
			}
			#Save destination scope 
			next_destination_province = { save_scope_as = destination }
		}
	}
	option = { #Fight it
		name = lotr_travel_events.0002.a
		save_scope_as = fighter
		stress_impact = {
			craven = medium_stress_gain
		}
		lotr_travel_events_scorpion_duel_effect = { FIGHTER = root }
		
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = craven
			}
		}
		
	}

	option = { #Distract with someone else
		name = lotr_travel_events.0002.b
		trigger = { exists = scope:beast_victim }
		lotr_travel_events_scorpion_duel_effect = { FIGHTER = scope:beast_victim }
		stress_impact = {
			compassionate = medium_stress_impact_gain
			brave = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = compassionate
			}
		}
	}

	option = { #Run!
		name = lotr_travel_events.0002.c
		trigger = {
			culture = {
				NOT = { has_cultural_tradition = tradition_dune_sea_warfare }
			}
		}
		add_prestige = minor_prestige_loss
		current_travel_plan = { 
			delay_travel_plan = { days = 10 }
		}
		stress_impact = {
			base = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}
		stress_impact = {
			brave = medium_stress_impact_gain
			craven = minor_stress_impact_loss
		}
		random_list = {
			50 = {
				desc = lotr_travel_events.0002.ran
				send_interface_toast = {
					title = lotr_travel_events.0002.ran
				}
			}
			40 = {
				desc = lotr_travel_events.0002.wound
				trigger = {
					NOT = {
						has_trait_rank = {
							trait = wounded
							rank > 1
						}
					}
				}
				send_interface_toast = {
					title = lotr_travel_events.0002.wound
					left_icon = root
					root = {
						hunt_animal_wound_effect = { VARIABLE = root.var:animal_type }
					}
				}
			}
			10 = {
				desc = lotr_travel_events.0002.failure
				trigger = {
					cannot_be_killed = no #lotr
				}
				send_interface_toast = {
					title = lotr_travel_events.0002.failure
					left_icon = root
					root = {
						death = { death_reason = death_scorpion }
					}
				}
				modifier = {
					add = -30
					is_elf = yes
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = brave
			}
		}
	}
	option = {
		name = lotr_travel_events.0002.d
		trigger = {
			culture = {
				has_cultural_tradition = tradition_dune_sea_warfare
			}
		}
		custom_tooltip = lotr_travel_events.0002.d.tt
		send_interface_toast = {
			title = lotr_travel_events.0002.sneak
			left_icon = root
		}
		stress_impact = {
			base = minor_stress_impact_gain
			impatient = medium_stress_gain
			reckless = minor_stress_impact_gain
		}
		ai_chance = {
			base = 500
			modifier = {
				factor = 0.1
				OR = {
					has_trait = reckless
					has_trait = impatient
				}
			}
		}
	}
	
	after = {
		mp_resume_travel_plan = yes
		#First time getting the event
		if = {
			limit = {
				is_alive = yes
			}
			add_character_flag = {
				flag = had_scorpion_event_recently
				years = 1
			}
		}
	}
}

##########################################
# Sandstorm!
# by Jaco_Daan and Juke
# 0003
# A great Sand Storm engulfs you in the dune sea/desert
##########################################

lotr_travel_events.0003 = {
	type = character_event
	title = lotr_travel_events.0003.t
	desc = lotr_travel_events.0003.desc
	theme = travel
	left_portrait = {
		character = root 
	   	animation = fear
	}
	right_portrait = {
		character = root.current_travel_plan.travel_leader
	   	animation = stress
	}
	cooldown = { months = 1 }
	trigger = {
		exists = current_travel_plan.travel_leader
		NOT = { current_travel_plan.travel_leader = root }
		is_available_travelling = yes
		is_landed = yes
		location = {
			OR = {
				terrain = desert
				terrain = dune_sea
			}
		}
	}
	immediate = {
		hidden_effect = {
			while = {
				count = 5
				current_travel_plan = {
					random_entourage_character = {
						limit = {
							NOT = { this = root }
							cannot_be_killed = no #lotr
						}
						weight = {
							base = 1
							# Try to find someone relevant
							modifier = {
								is_close_family_of = root
								add = 1
							}
							modifier = {
								is_elf = yes
								add = -0.75
							}
						}
						add_to_list = drowning_courtiers_list
					}
				}
			}
		}
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 7
		}
	}
	# Trust your guide judgement
	option = {
		name = lotr_travel_events.0003.a
		current_travel_plan.travel_leader = {
			duel = {
				skill = martial
				value = high_skill_rating
				50 = { # You manage to navigate the storm
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.5
					}
					custom_tooltip = sandstorm_survived
					hidden_effect = {
						root = {
							send_interface_toast = {
								title = sandstorm_survived
								left_icon = root
								add_prestige = 10
							}
						}
					}
				}
				40 = { # You mess up and get someone killed
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.5
					}
					add_prestige = medium_prestige_loss
					increase_wounds_effect = { REASON = sandstorm}
					custom_tooltip = sandstorm_someone_dies
					hidden_effect = {
						root = {
							send_interface_toast = {
								title = sandstorm_someone_dies
								left_icon = root
								random_in_list = {
									list = drowning_courtiers_list
									death = {
										death_reason = death_sandstorm
									}
								}
							}
						}
					}
				}
				10 = { # They mess up a lot and kill a lot of people
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.5
					}
					increase_wounds_effect = { REASON = sandstorm}
					custom_tooltip = sandstorm_many_die
					hidden_effect = {
						root = {
							send_interface_toast = {
								title = sandstorm_many_die
								left_icon = root
								every_in_list = {
									list = drowning_courtiers_list
									death = {
										death_reason = death_sandstorm
									}
								}
							}
						}
					}
				}
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			brave = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = brave
				}
			}
		}
	}
	# I will coordinate the camp!
	option = {
		name = lotr_travel_events.0003.b
		stress_impact = {
			arrogant = minor_stress_impact_loss
			craven = medium_stress_impact_gain
		}
		progress_towards_rival_effect = {
			REASON = rival_upstaged_at_sea
			CHARACTER = root.current_travel_plan.travel_leader
			OPINION = default_rival_opinion
		}
		duel = {
			skill = martial
			value = high_skill_rating
			50 = { # You manage to navigate the storm
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
				}
				send_interface_toast = {
					title = sandstorm_survived
					left_icon = root
					add_prestige = medium_prestige_gain
				}
			}
			40 = { # You mess up and get someone killed
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				custom_tooltip = sandstorm_someone_dies
				hidden_effect = {
					mariner_progress_point_gain_effect = yes
					send_interface_toast = {
						title = sandstorm_someone_dies
						left_icon = root
						every_in_list = {
							list = drowning_courtiers_list
							death = {
								death_reason = death_sandstorm
							}
						}
						add_prestige = medium_prestige_loss
						increase_wounds_effect = { REASON = sandstorm}
					}
				}
			}
			10 = { # You really mess up and get yourself killed
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				IF = {
					limit = {
						cannot_be_killed = yes #lotr
					}
					send_interface_toast = {
						title = travel_danger_events.6020.immortaltoast #you return to middle earth
						left_icon = root
						add_character_modifier = {
							modifier = recovering_from_storm_modifier
							years = 2
						}
					}
				}
				ELSE = {
					send_interface_toast = {
						title = sandstorm_you_die
						left_icon = root
						add_prestige = medium_prestige_loss
						death = {
							death_reason = death_sandstorm
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				has_trait = arrogant
			}
			modifier = {
				factor = 0
				has_trait = craven
			}
		}
	}
	# I will Save myself!
	option = {
		name = lotr_travel_events.0003.c
		add_prestige = minor_prestige_loss
		stress_impact = {
			just = medium_stress_impact_gain
			patient = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			craven = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = brave
				}
			}
		}
	}
}

##########################################
# An Encounter in Rhosgobel - Meet Radagast!
# by Juke
# 0003
# You decide to take a stroll through Rhosgobel and have a chancer to meet an odd brown sage!
##########################################

lotr_travel_events.0004 = {
	type = character_event
	title = lotr_travel_events.0004.t
	desc = {
		desc = lotr_travel_events.0004.desc
		triggered_desc = {
			trigger = {
				faith_is_good = yes
			}
			desc = lotr_travel_events.0004.desc.sage
		}
	}
	theme = travel
	override_background = { reference = wilderness_forest_pine }
	left_portrait = {
		character = root
	}
	cooldown = { years = 10 }
	trigger = {
		is_available_travelling = yes
		is_landed = yes
		NOT = { has_character_flag = asked_radagast_for_help }
		location = province:3189 # Rhosgobel
		current_travel_plan.travel_plan_owner = root
		is_landed = yes
		is_location_valid_for_travel_event_on_land = yes #Should not be needed...
		NOT = { location.county.holder = root } #If I own it then it does not make sense to visit it.
	}
	immediate = {
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}
	}
	option = {	# attempt to find the brown sage!
		name = lotr_travel_events.0004.b
		trigger = {
			#faith = faith:faith_woodmen
			faith_is_good = yes
			is_landed = yes
			#faith.religion = { religion:northmen_religion }
			character:lineofradagast = {
				#has_title = title:d_woodmen_faith_head
				has_title = title:c_rhosghobel
			}
		}
		current_travel_plan = { 
			delay_travel_plan = { days = 10 }
		}
		custom_tooltip = lotr_travel_events.0004.btt	#Inform player - they will wander the woods a bit
		hidden_effect = {
			random_list = {
				# Didnt find him
				700 = {
					trigger_event = {
						id = lotr_travel_events.0005
						days = 5
					}
				}
				# Found Radagast 1
				50 = {
					save_scope_value_as = {
						name = radagast_advice
						value = flag:advice_1
					}
					trigger_event = {
						id = lotr_travel_events.0006
						days = 5
					}
				}
				# Found Radagast 2
				50 = {
					save_scope_value_as = {
						name = radagast_advice
						value = flag:advice_2
					}
					trigger_event = {
						id = lotr_travel_events.0006
						days = 5
					}
				}
				# Found Radagast 3
				50 = {
					save_scope_value_as = {
						name = radagast_advice
						value = flag:advice_3
					}
					trigger_event = {
						id = lotr_travel_events.0006
						days = 5
					}
				}
				# Found Radagast 4
				50 = {
					save_scope_value_as = {
						name = radagast_advice
						value = flag:advice_4
					}
					trigger_event = {
						id = lotr_travel_events.0006
						days = 5
					}
				}
			}
		}
	}
	option = {	#No time
		name = lotr_travel_events.0004.a
		stress_impact = {
			base = minor_stress_impact_gain
			impatient = minor_stress_impact_loss
			patient = minor_stress_impact_gain
		}
		mp_resume_travel_plan = yes
	}
}

lotr_travel_events.0005 = { # Sairtheod (Rhosgobel), didnt find Radagast
	type = character_event
	title = lotr_travel_events.0005.t
	desc = lotr_travel_events.0005.desc
	theme = travel
	override_background = { reference = wilderness_forest_deep }
	left_portrait = {
		character = root
		animation = dismissal
	}
	option = {	#At least the weather was nice...
		name = lotr_travel_events.0005.a
		custom_tooltip = lotr_travel_events.0005.att
		add_prestige = minor_prestige_loss
	}
	after = {
		mp_resume_travel_plan = yes
	}
}

lotr_travel_events.0006 = { # Sairtheod (Rhosgobel), Radagast gives Advice
	type = character_event
	title = lotr_travel_events.0006.t
	desc = {
		desc = lotr_travel_events.0006.desc.intro
		# What advice does he give?
		first_valid = {
			triggered_desc = {
				trigger = { scope:radagast_advice = flag:advice_1 }
				desc = lotr_travel_events.0006.desc.advice1
			}
			triggered_desc = {
				trigger = { scope:radagast_advice = flag:advice_2 }
				desc = lotr_travel_events.0006.desc.advice2
			}
			triggered_desc = {
				trigger = { scope:radagast_advice = flag:advice_3 }
				desc = lotr_travel_events.0006.desc.advice3
			}
			triggered_desc = {
				trigger = { scope:radagast_advice = flag:advice_4 }
				desc = lotr_travel_events.0006.desc.advice4
			}
		}
	#	desc = lotr_travel_events.0006.desc.outro
	}
	theme = travel
	override_background = {
		reference = wilderness_forest_deep
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = character:lineofradagast
		animation = idle
	}
	option = {	# I am reading too much into this
		name = lotr_travel_events.0006.b
		add_piety = miniscule_piety_gain
	}
	option = {	# attempt to interpret

		name = lotr_travel_events.0006.a
		custom_tooltip = lotr_travel_events.0006.att
		duel = {
			skill = learning
			value = 10
			30 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
					min = -20
				}
				desc = lotr_travel_events.0006.a.success
				send_interface_toast = {
					left_icon = root
					add_piety = medium_piety_gain
					title = lotr_travel_events.0006.a.success.toast.t
					if = {
						limit = {
							scope:radagast_advice = flag:advice_1
						}
						add_character_modifier = radagast_advice_1_modifier
					}
					if = {
						limit = {
							scope:radagast_advice = flag:advice_2
						}
						add_character_modifier = radagast_advice_2_modifier
					}
					if = {
						limit = {
							scope:radagast_advice = flag:advice_3
						}
						add_character_modifier = radagast_advice_3_modifier
					}
					if = {
						limit = {
							scope:radagast_advice = flag:advice_4
						}
						add_character_modifier = radagast_advice_4_modifier
					}
				}
			}
			40 = {		
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2
					min = -25
				}
				desc = lotr_travel_events.0006.a.failure				
				send_interface_toast = {
					left_icon = root
					title = lotr_travel_events.0006.a.failure.toast.t
				}
			
			}
		}
	}
	after = {
		add_character_flag = {
			flag = asked_radagast_for_help
		}
		mp_resume_travel_plan = yes
	}
}