namespace = hold_court_lotr

# Differences in namespace range down to the on-going CD civil war between whether a range starts at 0 or 1.
# It starts at 001 and goes to 000, damn it, and anyone who says otherwise is a knave and a cur.

##################################################
# # RANGES
# 0001 - 0100		Elven Events
# 
##################################################











##################################################
# Setup, Example, & Misc

##################################################
# 0001 - 0010	Example Event
# 0011 - 0010	Activity Start
# 0021 - 0020	Activity End
##################################################

##################################################
# Example Event
# by Ewan Cowhig Croft
# 0001 - 0010
##################################################

# Example hold court event for studying.
# hold_court.0001 = {
	##Court-type events only appear in the Royal Court view, and, for the Hold Court activity, are mandatory.
	# type = court_event
	##Desc and theming rules are as normal, but since there's no background, there's no need for background overrides.
	# title = hold_court.0001.t
	# desc = hold_court.0001.desc
	# theme = court
	##Main portraits are unnecessary: we define this stuff via the court_scene block instead.
	##Secondary portraits may be used as usual.
	# lower_left_portrait = scope:character_c

	##Hold Court events should be fired from their specific on_action (hold_court_event_selection), but since this is an example, it's left orphaned.
	# orphan = yes

	##Here, we define how the event appears inside the court view.
	# This block exists in the root scope, so you can just define anyone you'd normally have access to/set up in the immediate block here.
	# court_scene = {
		##Define which character will have the button for starting the event appear over the top of 'em.
		# button_position_character = scope:character_a
		##Forcibly open the event next.
		# court_event_force_open = yes
		# show_timeout_info = no
		# should_pause_time = yes
		##Roles defined in \ck3\game\gfx\court_scene\character_roles\, if you want to change them or add new ones.
		# roles = {
			##First, we take each scoped relevant scoped character.
			# scope:character_a = {
				##Then we define their role, where they're positioned in the scene.
				# group = petitioners_group
				##Next, we select their animation override (if applicable: you can leave it to the generic default/role default if defined, though generally you'll want to define this).
				# animation = anger
			# }
			# scope:character_b = {
				# group = petitioners_group
				# animation = rage
			# }
			##Characters who are not physically present are referred to only via copy links or lower portraits, so we don't bother putting them here.
		# }
	# }
	##Add the widget to show which court event we're currently at in the chain.
	# widget = {
		# gui = "event_window_widget_event_chain_progress"
		# container = "custom_widgets_container"
		# controller = event_chain_progress
	# }

	# weight_multiplier = {
		# base = 1
		
		##Court weightings: plug in a court type that should see this event more often.
		# ep1_weight_up_for_court_type_modifier = { COURT_TYPE = court_diplomatic }
	# }

	# immediate = {
		##As with portraits, we do our general character setup stuff in this event.
		# random_courtier_or_guest = { save_scope_as = character_a }
		# random_courtier_or_guest = {
			# limit = {
				# NOT = { this = scope:character_a }
			# }
			# save_scope_as = character_b
		# }
	# }

	# Court events, as with all events, require at least one option to display.
	#option = {
		#name = hold_court.0001.a
	#}
#}

############################
# A Drunken Sommelier 0001 #
############################

scripted_trigger hold_court_lotr_0001_valid_sommelier = {
	is_available_ai_adult = yes
	has_court_event_flag = no
	NOR = { 
		has_trait = temperate
		has_trait = inappetetic
	}
}

hold_court_lotr.0001 = {
	type = court_event
	title = hold_court_lotr.0001.t
	desc = hold_court_lotr.0001.desc
	theme = court

	court_scene = {
		button_position_character = scope:guard
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:guard = {
				group = petitioners_group
				animation = disapproval
			}
			scope:sommelier = {
				group = petitioners_group
				animation = worry
			}
		}
	}
	widget = {
		gui = "event_window_widget_event_chain_progress"
		container = "custom_widgets_container"
		controller = event_chain_progress
	}
	# Portrait left in in order to apply outfit tags.
	right_portrait = {
		character = scope:guard
		outfit_tags = { military_outfit }
		hide_info = yes
	}
	
	trigger = {
		is_elf = yes
		NOT = { has_character_flag = had_event_hold_court_lotr_0001 }
		any_courtier_or_guest = { 
			hold_court_lotr_0001_valid_sommelier = yes
		}
		exists = title:k_dorwinion.holder
		title:k_dorwinion.holder = {
			is_within_diplo_range = { CHARACTER = root }
		}
	}

	weight_multiplier = {
		base = 1
	}
	
	immediate = {
		add_character_flag = {
			flag = had_event_hold_court_lotr_0001
			years = 10
		}

		random_courtier_or_guest = {
			limit = { hold_court_lotr_0001_valid_sommelier = yes }

			weight = {
				base = 0.5
				compare_modifier = {
					value = ai_greed
					multiplier = 0.01 # At 100 greed, x3 as likely to be picked. At -50 greed, 0% chance of being picked.
				}
				compare_modifier = {
					value = ai_honor
					multiplier = -0.01 # At 50 honor, 0% chance to be picked. At -100 honor, x3 as likely to be picked.
				}
			}
			save_scope_as = sommelier
			court_event_character_flag_effect = yes
		}
		
		if = {
			limit = {
				employs_court_position = cupbearer_court_position
				any_court_position_holder = {
					type = cupbearer_court_position
				}
			}
			random_court_position_holder = {
				type = cupbearer_court_position
				save_scope_as = current_cupbearer
			}
		}
		
		if = {
			limit = {
				employs_court_position = court_jester_court_position
				any_court_position_holder = {
					type = court_jester_court_position
		            has_court_event_flag = no		
					is_landed = no
					is_available_ai_adult = yes
				}
			}
			random_court_position_holder = {
				type = court_jester_court_position
				limit = {
		            has_court_event_flag = no
		            is_landed = no	
					is_available_ai_adult = yes
				}
				save_scope_as = current_jester
			}
		}

		hidden_effect = {
			create_character = {
				template = new_warrior_character
				dynasty = none
				location = root.capital_province
				culture = root.capital_county.culture
				faith = root.capital_county.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = guard
			}
		}
		# Trigger next event in chain.
		hold_court_queue_next_event_effect = yes
	}

	# Court events, as with all events, require at least one option to display.
	option = {
		name = hold_court_lotr.0001.a
		trigger = {
			scope:sommelier = { can_be_employed_as = cupbearer_court_position }
			can_employ_court_position_type = cupbearer_court_position
		}
		
		if = {
			limit = {
				exists = scope:current_cupbearer
			}
			revoke_court_position = {
				recipient = scope:current_cupbearer
				court_position = cupbearer_court_position
			}
		}
		appoint_court_position = {
			recipient = scope:sommelier
			court_position = cupbearer_court_position
		}
		scope:sommelier = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50
			}
		}
		stress_impact = {
			sadistic = major_stress_gain
			wrathful = medium_stress_gain
			paranoid = medium_stress_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.b
		
		if = {
			limit = { exists = scope:current_jester }
			replace_court_position = {
				recipient = scope:sommelier
				holder = scope:current_jester
				court_position = court_jester_court_position
			}
		}
		else = {
			appoint_court_position = {
				recipient = scope:sommelier
				court_position = court_jester_court_position
			}
		}
		
		stress_impact = {
 			compassionate = medium_stress_impact_gain
 			humble = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = humble
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.c
	
		remove_courtier_or_guest = {
			character = scope:sommelier
		}
		stress_impact = {
 			compassionate = medium_stress_impact_gain
 			just = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = just
			}
		}
	}
}