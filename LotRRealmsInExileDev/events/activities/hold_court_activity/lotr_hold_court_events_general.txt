namespace = hold_court_lotr

# Differences in namespace range down to the on-going CD civil war between whether a range starts at 0 or 1.
# It starts at 001 and goes to 000, damn it, and anyone who says otherwise is a knave and a cur.

##################################################
# # RANGES
# 0001 - 0100		Elven Events
# 
##################################################











##################################################
# Setup, Example, & Misc

##################################################
# 0001 - 0010	Example Event
# 0011 - 0010	Activity Start
# 0021 - 0020	Activity End
##################################################

##################################################
# Example Event
# by Ewan Cowhig Croft
# 0001 - 0010
##################################################

# Example hold court event for studying.
# hold_court.0001 = {
	##Court-type events only appear in the Royal Court view, and, for the Hold Court activity, are mandatory.
	# type = court_event
	##Desc and theming rules are as normal, but since there's no background, there's no need for background overrides.
	# title = hold_court.0001.t
	# desc = hold_court.0001.desc
	# theme = court
	##Main portraits are unnecessary: we define this stuff via the court_scene block instead.
	##Secondary portraits may be used as usual.
	# lower_left_portrait = scope:character_c

	##Hold Court events should be fired from their specific on_action (hold_court_event_selection), but since this is an example, it's left orphaned.
	# orphan = yes

	##Here, we define how the event appears inside the court view.
	# This block exists in the root scope, so you can just define anyone you'd normally have access to/set up in the immediate block here.
	# court_scene = {
		##Define which character will have the button for starting the event appear over the top of 'em.
		# button_position_character = scope:character_a
		##Forcibly open the event next.
		# court_event_force_open = yes
		# show_timeout_info = no
		# should_pause_time = yes
		##Roles defined in \ck3\game\gfx\court_scene\character_roles\, if you want to change them or add new ones.
		# roles = {
			##First, we take each scoped relevant scoped character.
			# scope:character_a = {
				##Then we define their role, where they're positioned in the scene.
				# group = petitioners_group
				##Next, we select their animation override (if applicable: you can leave it to the generic default/role default if defined, though generally you'll want to define this).
				# animation = anger
			# }
			# scope:character_b = {
				# group = petitioners_group
				# animation = rage
			# }
			##Characters who are not physically present are referred to only via copy links or lower portraits, so we don't bother putting them here.
		# }
	# }
	##Add the widget to show which court event we're currently at in the chain.
	# widget = {
		# gui = "event_window_widget_event_chain_progress"
		# container = "custom_widgets_container"
		# controller = event_chain_progress
	# }

	# weight_multiplier = {
		# base = 1
		
		##Court weightings: plug in a court type that should see this event more often.
		# ep1_weight_up_for_court_type_modifier = { COURT_TYPE = court_diplomatic }
	# }

	# immediate = {
		##As with portraits, we do our general character setup stuff in this event.
		# random_courtier_or_guest = { save_scope_as = character_a }
		# random_courtier_or_guest = {
			# limit = {
				# NOT = { this = scope:character_a }
			# }
			# save_scope_as = character_b
		# }
	# }

	# Court events, as with all events, require at least one option to display.
	#option = {
		#name = hold_court.0001.a
	#}
#}

hold_court_lotr.0001 = {
	type = court_event
	title = hold_court_lotr.0001.t
	desc = hold_court_lotr.0001.desc
	theme = court

	court_scene = {
		button_position_character = scope:guard
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:guard = {
				group = petitioners_group
				animation = disapproval
			}
			scope:sommelier = {
				group = petitioners_group
				animation = worry
			}
		}
	}
	widget = {
		gui = "event_window_widget_event_chain_progress"
		container = "custom_widgets_container"
		controller = event_chain_progress
	}
	# Portrait left in in order to apply outfit tags.
	right_portrait = {
		character = scope:guard
		outfit_tags = { military_outfit }
		hide_info = yes
	}

	weight_multiplier = {
		base = 1
		
		# Court weightings: plug in a court type that should see this event more often.
		ep1_weight_up_for_court_type_modifier = { COURT_TYPE = court_diplomatic }
	}

	immediate = {
		# As with portraits, we do our general character setup stuff in this event.
		random_courtier_or_guest = { save_scope_as = character_a }
		random_courtier_or_guest = {
			limit = {
				NOT = { this = scope:character_a }
			}
			save_scope_as = character_b
		}
	}

	# Court events, as with all events, require at least one option to display.
	option = {
		name = hold_court.0001.a
	}
}