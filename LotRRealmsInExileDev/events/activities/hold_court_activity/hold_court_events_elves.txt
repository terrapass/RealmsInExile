namespace = hold_court_lotr

# Differences in namespace range down to the on-going CD civil war between whether a range starts at 0 or 1.
# It starts at 001 and goes to 000, damn it, and anyone who says otherwise is a knave and a cur.

##################################################
# # RANGES
# 0001 - 0100		Elven Events
# 
##################################################











##################################################
# Setup, Example, & Misc

##################################################
# 0001 - 0010	Example Event
# 0011 - 0010	Activity Start
# 0021 - 0020	Activity End
##################################################

############################
# A Drunken Sommelier 0001 #
############################

scripted_trigger hold_court_lotr_0001_valid_sommelier = {
	is_available_ai_adult = yes
	has_court_event_flag = no
	can_be_employed_as = cupbearer_court_position
	NOR = { 
		has_trait = temperate
		has_trait = inappetetic
	}
}

hold_court_lotr.0001 = {
	type = court_event
	title = hold_court_lotr.0001.t
	desc = hold_court_lotr.0001.desc
	theme = court

	court_scene = {
		button_position_character = scope:guard
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:guard = {
				group = petitioners_group
				animation = disapproval
			}
			scope:sommelier = {
				group = petitioners_group
				animation = worry
			}
		}
	}
	widget = {
		gui = "event_window_widget_event_chain_progress"
		container = "custom_widgets_container"
		controller = event_chain_progress
	}
	# Portrait left in in order to apply outfit tags.
	right_portrait = {
		character = scope:guard
		outfit_tags = { military_outfit }
		hide_info = yes
	}
	
	trigger = {
		is_elf = yes
		NOT = { has_character_flag = had_event_hold_court_lotr_0001 }
		any_courtier_or_guest = { 
			hold_court_lotr_0001_valid_sommelier = yes
		}
		exists = title:k_dorwinion.holder
		title:k_dorwinion.holder = {
			is_within_diplo_range = { CHARACTER = root }
		}
	}

	weight_multiplier = {
		base = 1
	}
	
	immediate = {
		add_character_flag = {
			flag = had_event_hold_court_lotr_0001
			years = 10
		}

		random_courtier_or_guest = {
			limit = { hold_court_lotr_0001_valid_sommelier = yes }

			weight = {
				base = 0.5
				compare_modifier = {
					value = ai_greed
					multiplier = 0.01 # At 100 greed, x3 as likely to be picked. At -50 greed, 0% chance of being picked.
				}
				compare_modifier = {
					value = ai_honor
					multiplier = -0.01 # At 50 honor, 0% chance to be picked. At -100 honor, x3 as likely to be picked.
				}
			}
			save_scope_as = sommelier
			court_event_character_flag_effect = yes
		}
		
		if = {
			limit = {
				employs_court_position = cupbearer_court_position
				any_court_position_holder = {
					type = cupbearer_court_position
				}
			}
			random_court_position_holder = {
				type = cupbearer_court_position
				save_scope_as = current_cupbearer
			}
		}
		
		if = {
			limit = {
				employs_court_position = court_jester_court_position
				any_court_position_holder = {
					type = court_jester_court_position
		            has_court_event_flag = no		
					is_landed = no
					is_available_ai_adult = yes
				}
			}
			random_court_position_holder = {
				type = court_jester_court_position
				limit = {
		            has_court_event_flag = no
		            is_landed = no	
					is_available_ai_adult = yes
				}
				save_scope_as = current_jester
			}
		}

		hidden_effect = {
			create_character = {
				template = new_warrior_character
				dynasty = none
				location = root.capital_province
				culture = root.capital_county.culture
				faith = root.capital_county.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = guard
			}
		}
		# Trigger next event in chain.
		hold_court_queue_next_event_effect = yes
	}

	# Court events, as with all events, require at least one option to display.
	option = {
		name = hold_court_lotr.0001.a
		trigger = {
			can_employ_court_position_type = cupbearer_court_position
		}
		
		if = {
			limit = {
				exists = scope:current_cupbearer
			}
			revoke_court_position = {
				recipient = scope:current_cupbearer
				court_position = cupbearer_court_position
			}
		}
		appoint_court_position = {
			recipient = scope:sommelier
			court_position = cupbearer_court_position
		}
		scope:sommelier = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50
			}
		}
		stress_impact = {
			sadistic = major_stress_gain
			wrathful = medium_stress_gain
			paranoid = medium_stress_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = 0.5
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.b
		
		if = {
			limit = { exists = scope:current_jester }
			replace_court_position = {
				recipient = scope:sommelier
				holder = scope:current_jester
				court_position = court_jester_court_position
			}
		}
		else = {
			appoint_court_position = {
				recipient = scope:sommelier
				court_position = court_jester_court_position
			}
		}
		
		stress_impact = {
 			compassionate = medium_stress_impact_gain
 			humble = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = humble
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.c
	
		remove_courtier_or_guest = {
			character = scope:sommelier
		}
		stress_impact = {
 			compassionate = medium_stress_impact_gain
 			just = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = just
			}
		}
	}
}

##################################################
# Tight-Lipped Adventurer (a.k.a Thorin&Co) 0002 #
##################################################

hold_court_lotr.0002 = {
	type = court_event
	title = hold_court_lotr.0002.t
	desc = hold_court_lotr.0002.desc
	theme = court

	court_scene = {
		button_position_character = scope:guard
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:guard = {
				group = petitioners_group
				animation = disapproval
			}
			scope:adventurer = {
				group = petitioners_group
				animation = prisonhouse
			}
		}
	}
	widget = {
		gui = "event_window_widget_event_chain_progress"
		container = "custom_widgets_container"
		controller = event_chain_progress
	}
	# Portrait left in in order to apply outfit tags.
	right_portrait = {
		character = scope:guard
		outfit_tags = { military_outfit }
		hide_info = yes
	}
	
	trigger = {
		is_elf = yes
		NOT = { has_character_flag = had_event_hold_court_lotr_0002 }
	}

	weight_multiplier = {
		base = 1
	}
	
	immediate = {
		add_character_flag = {
			flag = had_event_hold_court_lotr_0002
			years = 10
		}

		hidden_effect = {
			create_character = {
				template = new_warrior_character
				dynasty = none
				location = root.capital_province
				culture = root.capital_county.culture
				faith = root.capital_county.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = guard
			}
			create_character = {
				template = new_warrior_character
				dynasty = none
				location = root.capital_province
				culture = culture:framling
				faith = faith:faith_framling
				trait = adventurer
				trait = stubborn
				trait = brave
				trait = paranoid
				gender_female_chance = root_soldier_female_chance
				save_scope_as = adventurer
			}
		}
		
		hold_court_queue_next_event_effect = yes
	}

	option = {
		name = hold_court_lotr.0002.a
		imprison = {
			target = scope:adventurer
			type = dungeon
		}
		
		stress_impact = {
 			compassionate = medium_stress_impact_gain
 			trusting = medium_stress_impact_gain
			patient = medium_stress_impact_loss
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_rationality = -0.25
				ai_vengefulness = 0.5
				ai_greed = 0.5
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = trusting
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0002.b
		
		add_courtier = scope:adventurer
		scope:adventurer = { create_inspiration = adventure_inspiration }
		pay_short_term_gold = {
			target = scope:adventurer
			gold = minor_gold_value
		}
		
		change_current_court_grandeur = minor_court_grandeur_gain
		
		stress_impact = {
 			paranoid = medium_stress_impact_gain
 			greedy = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
				ai_greed = -0.5
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = paranoid
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = greedy
			}
			
		}
	}
	
	option = {
		name = hold_court_lotr.0001.c
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = -0.5
				ai_energy = -0.5
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = lazy
			}
		}
	}
}

#########################################
# An Unfamiliar Face (Time Flies!) 0003 #
#########################################

scripted_trigger hold_court_lotr_0003_valid_vassal = {
	is_human = yes
	primary_title.previous_holder = {
		even_if_dead = yes
		is_parent_of = root 
		is_alive = no
		time_since_death = { years >= 10 }
	}
}

hold_court_lotr.0003 = {
	type = court_event
	title = hold_court_lotr.0003.t
	desc = hold_court_lotr.0003.desc
	theme = court
	lower_left_portrait = scope:human_vassal_parent

	court_scene = {
		button_position_character = scope:human_vassal
		court_event_force_open = yes
		show_timeout_info = no
		should_pause_time = yes
		roles = {
			scope:human_vassal = {
				group = petitioners_group
				animation = worry
			}
		}
	}
	widget = {
		gui = "event_window_widget_event_chain_progress"
		container = "custom_widgets_container"
		controller = event_chain_progress
	}
	
	trigger = {
		is_elf = yes
		NOT = { has_character_flag = had_event_hold_court_lotr_0003 }
		any_vassal_or_below = { hold_court_lotr_0003_valid_vassal = yes }
	}

	weight_multiplier = {
		base = 1
	}
	
	immediate = {
		add_character_flag = {
			flag = had_event_hold_court_lotr_0003
			years = 10
		}

		random_vassal_or_below = {
			limit = { hold_court_lotr_0003_valid_vassal = yes }
			save_scope_as = human_vassal
			primary_title.previous_holder = { save_scope_as = human_vassal_parent }
		}
		
		if = {
			limit = { any_child = { is_heir_of =  scope:human_vassal  } }
			random_child = {
				is_heir_of =  scope:human_vassal
				save_scope_as = human_vassal_heir
			}
		}
		
		if = {
			limit = {
				employs_court_position = seneschal_court_position
				any_court_position_holder = {
					type = seneschal_court_position
				}
			}
			random_court_position_holder = {
				type = seneschal_court_position
				save_scope_as = current_seneschal
			}
		}
		
		hold_court_queue_next_event_effect = yes
	}

	option = {
		name = hold_court_lotr.0003.a
		scope:human_vassal = {
			add_hook = {
				target = root
				type = favor_hook
			}
			add_opinion = 20
		}
		
		stress_impact = {
 			callous = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_greed = -0.5
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = arrogant
			}
			modifier = {	#Weight down for stress.
				add = -30
				has_trait = callous
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0003.b
		
		trigger = { 
			num_of_relation_ward < 2
			exists = scope:human_vassal_heir
		}
		
		highlight_portrait = root
		scope:human_vassal_heir = {
			set_relation_guardian = root
			add_opinion = {
				modifier = grateful_opinion
				target = root
				opinion = 20
			}
		}
		scope:human_vassal = {
			add_opinion = {
				modifier = respect_opinion
				target = root
				opinion = 10
			}
		}
		change_current_court_grandeur = minor_court_grandeur_gain
		
		stress_impact = {
 			stress_impact = {
				callous = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
 		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = 0.25
			}
			modifier = {	#Weight down for stress.
				add = -15
				has_trait = paranoid
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.c
		
		trigger = {
			can_employ_court_position_type = seneschal_court_position
			scope:human_vassal = { is_vassal_of = root}
		}
		if = {
			limit = {
				exists = scope:current_seneschal
			}
			revoke_court_position = {
				recipient = scope:current_seneschal
				court_position = seneschal_court_position
			}
		}
		appoint_court_position = {
			recipient = scope:human_vassal
			court_position = seneschal_court_position
		}
		scope:human_vassal = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 50
			}
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.5
			}
		}
	}
	
	option = {
		name = hold_court_lotr.0001.d
		
		scope:human_vassal = {
			add_opinion = {
				target = root
				opinion = -15
			}
		}
		change_current_court_grandeur = minor_court_grandeur_loss
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.5
				ai_compassion = -0.5
			}
		}
	}
}