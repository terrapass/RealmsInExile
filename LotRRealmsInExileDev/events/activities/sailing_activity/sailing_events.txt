# Events for handling the Sailing and Pirate activities

namespace = sailing

############################
## Random events in port
## 1000-1999
## by Jamie-san
############################
# 1001 - Don't have a boat - charter or buy?
# 1002 - Chartering a boat
# 1003 - Buying a boat
# 1004 - Repairing a boat
# 1005 - Dockyard temptations
# 1007 - Whittling wood
# 1008 - Street brawl
# 1009 - Attempted mugging
# 1010 - Contraband discovered in port
# 1011 - Rats on the ship!
# 1012 - Seagull surprise
# 1013 - Sampling the food
# 1014 - Fortune teller
# 1015 - Music
# 1016 - Haggling for supplies

#Character does not own a boat - charter or buy?
sailing.1001 = {
	type = character_event
	title = sailing.1001.t
	desc = sailing.1001.desc
	theme = docks
	left_portrait = {
		character = root
		animation = happiness
	}

	option = { # I'll charter a vessel
		name = sailing.1001.a
		trigger_event = sailing.1002
		ai_chance = {
			base = 70
		}
	}
	
	option = { # Actually, let me buy one...
		name = sailing.1001.b
		show_as_unavailable = {
			gold <= small_boat_cost
		}
		trigger_event = sailing.1003
		ai_chance = {
			base = 30
		}
	}
	
	option = { # Wait, what? You mean I need a boat for this?
		name = sailing.1001.c
		scope:activity = {
			complete_activity = yes
		}
		remove_character_flag = planning_an_activity
		remove_decision_cooldown = set_sail_decision
		ai_chance = {
			base = 0
		}
	}
}

#Character HIRES a boat, which one to choose!?
sailing.1002 = {
	type = character_event
	title = sailing.1002.t
	desc = sailing.1002.desc
	theme = docks
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { # Small but nimble
		name = sailing.1002.a
		remove_short_term_gold = small_boat_hire_cost
		add_character_modifier = {
			modifier = small_boat_modifier
			years = 1
		}
	}
	
	option = { # A fine vessel
		name = sailing.1002.b
		show_as_unavailable = {
			gold <= medium_boat_hire_cost
		}		
		remove_short_term_gold = medium_boat_hire_cost
		add_character_modifier = {
			modifier = medium_boat_modifier
			years = 1
		}
	}
	
	option = { # A flagship fit for a king
		name = sailing.1002.c
		show_as_unavailable = {
			gold <= large_boat_hire_cost
		}
		remove_short_term_gold = large_boat_hire_cost
		add_character_modifier = {
			modifier = large_boat_modifier
			years = 1
		}
	}
	
	after = {
		trigger_event = {
			on_action = sailing_dockyard_events
		}
	}
}

#Character BUYS a boat, which one to choose!?
sailing.1003 = {
	type = character_event
	title = sailing.1003.t
	desc = sailing.1003.desc
	theme = docks
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = { # Small but nimble
		name = sailing.1003.a
		remove_short_term_gold = small_boat_cost
		add_character_modifier = small_boat_modifier
	}
	
	option = { # A fine vessel
		name = sailing.1003.b
		show_as_unavailable = {
			gold <= medium_boat_cost
		}
		remove_short_term_gold = medium_boat_cost
		add_character_modifier = medium_boat_modifier
	}
	
	option = { # A flagship fit for a king
		name = sailing.1003.c
		show_as_unavailable = {
			gold <= large_boat_cost
		}
		remove_short_term_gold = large_boat_cost
		add_character_modifier = large_boat_modifier
	}
	
	after = {
		trigger_event = {
			on_action = sailing_dockyard_events
		}
	}
}

#My boat is in a poor state of repair, should I pay to fix it up?
sailing.1004 = {
	type = character_event
	title = sailing.1004.t
	desc = sailing.1004.desc
	theme = docks
	left_portrait = {
		character = root
		animation = disapproval
	}

	trigger = {
		has_damaged_boat = yes
	}

	option = { # Of course, I'm not going out in her like THAT!
		name = sailing.1004.a
		if = {
			limit = { has_character_modifier = small_damaged_boat_modifier }
			remove_short_term_gold = small_boat_repair_cost
			add_character_modifier = small_boat_modifier
			remove_character_modifier = small_damaged_boat_modifier
		}
		else_if = {
			limit = { has_character_modifier = medium_damaged_boat_modifier }
			remove_short_term_gold = medium_boat_repair_cost
			add_character_modifier = medium_boat_modifier
			remove_character_modifier = medium_damaged_boat_modifier
		}
		else_if = {
			limit = { has_character_modifier = large_damaged_boat_modifier }
			remove_short_term_gold = large_boat_repair_cost
			add_character_modifier = large_boat_modifier
			remove_character_modifier = large_damaged_boat_modifier
		}
	}
	
	option = { # Bah! She's still seaworthy.
		name = sailing.1004.b
	}
	
	after = {
		trigger_event = {
			on_action = sailing_dockyard_events
		}
	}
}

#Temptation at the Docks
sailing.1005 = {
	type = character_event
	title = sailing.1005.t
	desc = sailing.1005.desc
	theme = docks
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:hooker
		animation = flirtation
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sailing_1005
			years = 15
		}
		hidden_effect = {
			romance_target_gender_effect = { SCOPE_NAME = romance_target }
			
			create_character = {
				location = scope:sailing_province #root.capital_province
				gender = scope:romance_target
				template = beautiful_peasant_character
				random_traits_list = {
					count = 1
					gregarious = {}
					lustful = {}
					compassionate = {}
					generous = {}
					ambitious = {}
				}
				save_scope_as = hooker
			}
			hidden_effect = {
				scope:hooker = { 
					set_sexuality = homosexual
					set_to_lowborn = yes
				}
				random_list = {
					25 = {
						trigger = {
							is_female = yes
							scope:hooker = { is_female = yes }
						}
						scope:hooker = { set_sexuality = homosexual }
					}
					100 = {
						trigger = {
							is_female = yes
							scope:hooker = { is_male = yes }
						}
						scope:hooker = { set_sexuality = heterosexual }
					}
					25 = {
						trigger = {
							is_male = yes
							scope:hooker = { is_male = yes }
						}
						scope:hooker = { set_sexuality = homosexual }
					}
					100 = {
						trigger = {
							is_male = yes
							scope:hooker = { is_female = yes }
						}
						scope:hooker = { set_sexuality = heterosexual }
					}
					50 = {
						scope:hooker = { set_sexuality = bisexual }
					}
				}
				random_list = {
					60 = {
						scope:hooker = { add_trait = seducer }
					}
					40 = {
						scope:hooker = { add_trait = lovers_pox }
					}
				}
			}
		}
	}

	# Take as dock wench/boy
	option = {
		name = sailing.1005.a
		set_relation_lover = scope:hooker
		had_sex_with_effect = {
				CHARACTER = scope:hooker
				PREGNANCY_CHANCE = pregnancy_chance
		}
		remove_short_term_gold = 5
		if = {
			limit = { 
				OR = {
					religion = religion:free_peoples_religion
					faith = { has_doctrine = doctrine_echoes_of_the_ainur }
				}
			}
			hidden_effect = {
				random = {
					chance = 100
					trigger_event = sailing.1006
				}
			}
		}
	}

	# Lay with them
	option = {
		name = sailing.1005.b			
		had_sex_with_effect = {
			CHARACTER = scope:hooker
			PREGNANCY_CHANCE = pregnancy_chance
		}
		remove_short_term_gold = 5	
		if = {
			limit = { 
				OR = {
					religion = religion:free_peoples_religion
					faith = { has_doctrine = doctrine_echoes_of_the_ainur }
				}
			}
			hidden_effect = {
				random = {
					chance = 2
					trigger_event = sailing.1006
				}
			}
		}
	}
	
	# Refuse
	option = {
		name = sailing.1005.c
		add_piety = 20
		stress_impact = {
			chaste = minor_stress_impact_loss
			lustful = minor_stress_impact_gain
		}
	}
}

#A Dagger in the Bedroom - Sauron sends his regards
sailing.1006 = {
	type = character_event
	title = sailing.1006.t
	desc = sailing.1006.desc
	theme = docks
	override_background = {
		event_background = bedchamber
	}
	left_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:hooker
		animation = scheme
	}

	option = { # A knife!
		name = sailing.1006.a
		custom_tooltip = sailing.1006.a.desc
		duel = {
			skill = prowess 
			value = very_high_skill_rating
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				desc = sailing.1006.duel_success
				add_stress = massive_stress_gain
				imprison = {
					target = scope:hooker
					type = dungeon
				}
			}
			100 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -19
				}
				desc = sailing.1006.duel_failure
				death = {
					killer = scope:hooker
					death_reason = death_murder
				}
			}
		}
	}
}

#Whittling wood
sailing.1007 = {
	type = character_event
	title = sailing.1007.t
	desc = sailing.1007.desc
	theme = docks
	left_portrait = {
		character = root
		animation = boredom
	}
	right_portrait = {
		character = scope:whittler
		animation = happiness
	}

	immediate = {
		random_in_list = {
			variable = potential_sailing_participants
			limit = {
				is_alive = yes
			}
			save_scope_as = whittler
		}	
	}

	option = { # Sit down and give it a go
		name = sailing.1007.a
		add_prestige = minor_prestige_gain
		stress_impact = {
			impatient = medium_stress_impact_gain
		}
	}
	
	option = { # What a waste of time!
		name = sailing.1007.b
		custom_tooltip = sailing.1007.a.desc
		add_prestige = minor_prestige_loss
		stress_impact = {
			patient = medium_stress_impact_gain
		}		
	}
}

############################
## Random events at sea
## 2000-2999
## by Jamie-san
############################

#An invitation to play dice
sailing.2001 = {
	type = character_event
	title = sailing.2001.t
	desc = sailing.2001.desc
	#theme = at_sea
	left_portrait = root
	#right_portrait = scope:gambling_sailor_1

	#trigger = {
	#	scope:activity = {
	#		has_variable_list = potential_sailing_participants
	#		any_in_list = {
	#				variable = potential_sailing_participants
	#				is_alive = yes
	#				count >= 1
	#		}
	#	}
	#}
	#
	#immediate = {
	#	scope:activity = {
	#		random_in_list = {
	#			variable = potential_sailing_participants
	#			limit = {
	#				is_alive = yes
	#			}
	#			alternative_limit = {
	#				is_powerful_vassal = yes
	#			}
	#			save_scope_as = gambling_sailor_1
	#		}
	#		set_variable = {
	#			name = participant_to_use
	#			value = scope:gambling_sailor_1
	#			days = 300
	#		}
	#	}
	#}

	option = { # Sure, I'll play some dice
		name = sailing.2001.a
		add_prestige = minor_prestige_gain
		stress_impact = {
			greedy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 40
				OR = {
					has_trait = greedy
					has_trait = gregarious
				}
			}
		}
	}

	option = { # You won't catch me gambling!
		name = sailing.2001.b
		add_prestige = minor_prestige_loss
		stress_impact = {
			greedy = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 40
				OR = {
					has_trait = generous
					has_trait = shy
				}
			}
		}
	}

	after = {
		trigger_event = {
			id = sailing.9001 #To complete the activity
			days = { 14 20 }
		}	
	}

}

############################
## Random events in port
## 9000-9999
## by Jamie-san
############################

#Back home
sailing.9001 = {
	type = character_event
	title = sailing.9001.t
	desc = sailing.9001.desc
	#theme = at_sea
	left_portrait = root

	option = { # I'm back!
		name = sailing.9001.a
	}

	after = {
		#End the activity
		if = {
			limit = {
				exists = scope:activity
			}
			scope:activity = {
				complete_activity = yes
			}
		}	
	}

}