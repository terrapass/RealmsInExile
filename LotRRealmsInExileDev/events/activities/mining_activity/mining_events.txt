# Events for handling the Hunt activity

namespace = mining

#####################################
#	SETUP AND MAINTENANCE EVENTS    #
#	0000 - 0999						#
#####################################

# Select an Overseer of the Mines #
mining.0100 = {
	type = activity_event
	title = mining.0100.t
	desc = {
		desc = mining.0100.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_rival = scope:ootm_candidate_1
						opinion = {
							value <= low_negative_opinion
							target = scope:ootm_candidate_1
						}
					}
				}
				desc = mining.0100.desc.hates_candidate_a
			}
			desc = mining.0100.desc.candidate_a
		}
		triggered_desc = {
			trigger = { exists = scope:ootm_candidate_2 }
			desc = mining.0100.desc.nepotism
		}
		triggered_desc = {
			trigger = { exists = scope:ootm_candidate_3 }
			desc = mining.0100.desc.enthusiasm
		}
		desc = mining.0100.desc.outro
	}
	theme = hunt_activity_camp
	left_portrait = {
		character = scope:host
		animation = thinking
	}
	center_portrait = {
		character = scope:ootm_candidate_2
		animation = war_over_win
	}
	right_portrait = {
		character = scope:ootm_candidate_1
		animation = admiration
	}
	lower_right_portrait = scope:ootm_candidate_3

	trigger = {
		NOT = { employs_court_position = overseer_of_the_mines_court_position } #This is a delayed event so it is possible you have picked out an Overseer after it was set to trigger
		exists = scope:activity #As it is delayed, the activity might have invalidated in the meanwhile
		scope:activity = {
			OR = {
				any_attending_character = {
					AND = {
						OR = {
							is_vassal_of = root
							is_courtier_of = root
						}
						root = {
							can_appoint_char_to_court_position = {
								CHAR = prev
								COURT_POS = overseer_of_the_mines_court_position
							}
						}
					}
					AND = {
						any_pool_character = {
							province = scope:activity.activity_location
							is_physically_able_ai_adult = yes
							can_be_knight_trigger = { ARMY_OWNER = scope:host }
						}
					}
				}
			}
		}
	}

	immediate = {
		scope:activity = {
			ordered_attending_character = { # The best guy for the job
				limit = {
					OR = {
						is_vassal_of = root
						is_courtier_of = root
					}
					root = {
						can_appoint_char_to_court_position = {
							CHAR = prev
							COURT_POS = overseer_of_the_mines_court_position
						}
					}
				}
				order_by = aptitude:overseer_of_the_mines_court_position
				save_scope_as = ootm_candidate_1
			}
			if = {
				limit = {
					NOT = { exists = scope:ootm_candidate_1 }
				}
				limit = {
					any_pool_character = {
						province = scope:activity.activity_location
						is_physically_able_ai_adult = yes
						can_be_knight_trigger = { ARMY_OWNER = scope:host }
					}
				}
				random_pool_character = {
					province = scope:activity.activity_location
					limit = {
						is_physically_able_ai_adult = yes
						can_be_knight_trigger = { ARMY_OWNER = scope:host }
					}
					save_scope_as = ootm_candidate_1
				}
			}
			if = {
				limit = {
					any_attending_character = {
						OR = {
							is_vassal_of = root
							is_courtier_of = root
						}
						OR = {
							is_close_or_extended_family_of = root
							has_relation_friend = root
							has_relation_lover = root
						}
						NOT = { has_relation_rival = root }
						root = {
							can_appoint_char_to_court_position = {
								CHAR = prev
								COURT_POS = overseer_of_the_mines_court_position
							}
						}
						NOT = { this = scope:ootm_candidate_1 }
					}
				}
				random_attending_character = { # The nepotism pick
					limit = {
						OR = {
							is_vassal_of = root
							is_courtier_of = root
						}
						OR = {
							is_close_or_extended_family_of = root
							has_relation_friend = root
							has_relation_lover = root
						}
						NOT = { has_relation_rival = root }
						root = {
							can_appoint_char_to_court_position = {
								CHAR = prev
								COURT_POS = overseer_of_the_mines_court_position
							}
						}
						NOT = { this = scope:ootm_candidate_1 }
					}
					save_scope_as = ootm_candidate_2
				}
			}
			if = {
				limit = {
					any_attending_character = {
						OR = {
							is_vassal_of = root
							is_courtier_of = root
						}
						root = {
							can_appoint_char_to_court_position = {
								CHAR = prev
								COURT_POS = overseer_of_the_mines_court_position
							}
						}
						NOT = { this = scope:ootm_candidate_1 }
						trigger_if = {
							limit = {
								exists = scope:ootm_candidate_2
							}
							NOT = { this = scope:ootm_candidate_2 }
						}
					}
				}
				ordered_attending_character = { # Second best guy for the job
					limit = {
						OR = {
							is_vassal_of = root
							is_courtier_of = root
						}
						root = {
							can_appoint_char_to_court_position = {
								CHAR = prev
								COURT_POS = overseer_of_the_mines_court_position
							}
						}
						NOT = { this = scope:ootm_candidate_1 }
						trigger_if = {
							limit = {
								exists = scope:ootm_candidate_2
							}
							NOT = { this = scope:ootm_candidate_2 }
						}
					}
					order_by = {
						value = aptitude:overseer_of_the_mines_court_position
						add = ai_energy
					}
					save_scope_as = ootm_candidate_3
				}
			}
		}
	}

	option = { # Pick the best guy
		name = mining.0100.a
		court_position_grant_effect = {
			CANDIDATE = scope:ootm_candidate_1
			POS = overseer_of_the_mines_court_position
			EMPLOYER = root
		}
		add_prestige = minor_prestige_gain
		ai_chance = {
			base = 10
			opinion_modifier = {
				who = root
				opinion_target = scope:ootm_candidate_1
				min = 0
				max = 10
				multiplier = 0.5
			}
			modifier = {
				factor = 0.5
				has_trait = family_first
			}
			modifier = {
				factor = 0.5
				has_relation_rival = scope:ootm_candidate_1
				NOT = { has_trait = forgiving }
			}
		}
	}

	option = { # Pick the nepotism target
		name = mining.0100.b
		trigger = {
			exists = scope:ootm_candidate_2
		}
		court_position_grant_effect = {
			CANDIDATE = scope:ootm_candidate_2
			POS = overseer_of_the_mines_court_position
			EMPLOYER = root
		}
		reverse_add_opinion = {
			target = scope:ootm_candidate_2
	 		modifier = grateful_opinion
	 		opinion = 15
		}
		ai_chance = {
			base = 10
			opinion_modifier = {
				who = root
				opinion_target = scope:ootm_candidate_2
				min = 0
				max = 10
				multiplier = 0.5
			}
			modifier = {
				factor = 2
				has_trait = family_first
			}
		}
	}

	option = { # Pick the third target
		name = mining.0100.c
		trigger = {
			exists = scope:ootm_candidate_3
		}
		court_position_grant_effect = {
			CANDIDATE = scope:ootm_candidate_3
			POS = overseer_of_the_mines_court_position
			EMPLOYER = root
		}
		random = {
			chance = 50
			set_relation_friend = {
				target = scope:ootm_candidate_3
		 		reason = friend_made_me_moh
			}
		}
		ai_chance = {
			base = 5
			opinion_modifier = {
				who = root
				opinion_target = scope:ootm_candidate_3
				min = 0
				max = 10
				multiplier = 0.5
			}
			modifier = {
				factor = 0.5
				has_trait = family_first
			}
			modifier = {
				factor = 0.5
				has_relation_rival = scope:ootm_candidate_3
				NOT = { has_trait = forgiving }
			}
		}
	}

	option = { # Pick nobody
		name = mining.0100.d
		ai_chance = { # The AI should always pick someone, unless they're bankrupt
			base = 0
			modifier = {
				add = 100
				gold < tiny_gold_value
			}
		}
	}

	after = {
		# Update success chance
		scope:activity = {
			set_variable = {
				name = mining_success_chance
				value = mining_success_chance_value
			}
		}
	}
}

#####################################
#	INVITATION EVENTS	            #
#	0100 - 0199						#
#####################################

#####################################
#	START EVENTS	                #
#	0200 - 0299						#
#####################################

# Mining Start
mining.0200 = { # Host - kick off - add stress
	type = activity_event
	title = mining.0200.t
	desc = mining.0200.desc
	override_background = {
		reference = mining_activity
	}
	left_portrait = {
		character = scope:crowd_member_1
		animation = throne_room_conversation_3
	}
	center_portrait = {
		character = scope:crowd_member_2
		animation = throne_room_conversation_4
	}
	right_portrait = {
		character = scope:host
		animation = throne_room_conversation_2
	}

	immediate = {
		scope:activity = {
			set_variable = {
				name = mining_success_chance
				value = mining_success_chance_value
			}
			random_attending_character = {
				limit = {
					NOT = {
						this = root
					}
				}
				save_scope_as = crowd_member_1
			}
			random_attending_character = {
				limit = {
					NOT = {
						this = root
						this = scope:crowd_member_1
					}
				}
				save_scope_as = crowd_member_2
			}
		}
		if = {
			limit = {
				employs_court_position = overseer_of_the_mines_court_position
				scope:activity = {
					any_attending_character = {
						limit = {
							location = scope:activity.activity_location
							has_court_position = overseer_of_the_mines_court_position
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						location = scope:activity.activity_location
						has_court_position = overseer_of_the_mines_court_position
						is_ai = yes
					}
					save_scope_as = ootm_character
					save_scope_as = crowd_member_1
				}
			}
		}
	}

	option = { # Pep Talk
		name = mining.0200.a
		duel = {
			skill = diplomacy
			value = 8
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -15
				}
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:pep_talk_success
					}
				}
				custom_tooltip = mining.0200.a.success
				send_interface_toast = {
					title = mining_success_chance.pep_talk_success
					left_icon = root
					custom_tooltip = mining_activity_success_increase_medium_tt
					add_prestige = 50
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_pep_talk_success
						score = 25
						tags = { good }
						character = root
					}
				}
			}

			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -15
				}
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:pep_talk_failure
					}
				}
				custom_tooltip = mining.0200.a.failure
				send_interface_toast = {
					title = mining_success_chance.pep_talk_failure
					left_icon = root
					custom_tooltip = mining_activity_success_decrease_medium_tt
					add_prestige = -50
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_pep_talk_fail
						score = 25
						tags = { bad }
						character = root
					}
				}
			}
		}
	}

	option = { # Devise a Plan
		name = mining.0200.b
		duel = {
			skill = learning
			value = 10
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -15
				}
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:strategy_success
					}
				}
				custom_tooltip = mining.0200.b.success
				send_interface_toast = {
					title = mining_success_chance.strategy_success
					left_icon = root
					custom_tooltip = mining_activity_success_increase_major_tt
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_strategy_success
						score = 25
						tags = { good }
						character = root
					}
				}
			}

			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -15
				}
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:strategy_failure
					}
				}
				custom_tooltip = mining.0200.b.failure
				send_interface_toast = {
					title = mining_success_chance.strategy_failure
					left_icon = root
					custom_tooltip = mining_activity_success_decrease_major_tt
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_strategy_fail
						score = 25
						tags = { bad }
						character = root
					}
				}
			}
		}
	}

	option = { # Threaten
		name = mining.0200.c
		custom_description_no_bullet = {
			text = effect_dread_challenge
		}
		random_list = {
			1 = {
				modifier = {
					add = dread
				}
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:threaten_success
					}
				}
				custom_tooltip = mining.0200.c.success
				send_interface_toast = {
					title = mining_success_chance.threaten_success
					left_icon = root
					custom_tooltip = mining_activity_success_increase_medium_tt
					add_dread = 5
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_threat_success
						score = 25
						tags = { good }
						character = root
					}
				}
			}
			22 = {
				scope:activity = {
					set_variable = {
						name = mining_team_huddle
						value = flag:threaten_failure
					}
				}
				custom_tooltip = mining.0200.c.failure
				send_interface_toast = {
					title = mining_success_chance.threaten_failure
					left_icon = root
					custom_tooltip = mining_activity_success_decrease_major_tt
					add_dread = -5
				}
				scope:activity = {
					add_activity_log_entry = {
						key = mining_log_prospecting_start_threat_fail
						score = 25
						tags = { bad }
						character = root
					}
				}
			}
		}
	}

	option = { # Let my Overseer take over
		trigger = {
			exists = scope:ootm_character
		}
		name = mining.0200.d
		save_scope_as = ootm_speaker
		custom_description_no_bullet = {
			text = effect_aptitude_challenge
		}
		scope:ootm_character = {
			random_list = {
				3 = {
					modifier = {
						add = aptitude:overseer_of_the_mines_court_position
					}
					scope:activity = {
						set_variable = {
							name = mining_team_huddle
							value = flag:overseer_success
						}
					}
					custom_tooltip = mining.0200.d.success
					root = {
						send_interface_toast = {
							title = mining_success_chance.overseer_success
							left_icon = scope:ootm_character
							custom_tooltip = mining_activity_success_increase_medium_tt
						}
					}
					add_prestige = 50
					scope:activity = {
						add_activity_log_entry = {
							key = mining_log_prospecting_start_overseer_success
							score = 25
							tags = { good }
							character = scope:ootm_character
						}
					}
				}
				3 = {
					scope:activity = {
						set_variable = {
							name = mining_team_huddle
							value = flag:overseer_failure
						}
					}
					custom_tooltip = mining.0200.d.failure
					root = {
						send_interface_toast = {
							title = mining_success_chance.overseer_failure
							left_icon = scope:ootm_character
							custom_tooltip = mining_activity_success_decrease_medium_tt
						}
					}
					add_prestige = -50
					scope:activity = {
						add_activity_log_entry = {
							key = mining_log_prospecting_start_overseer_fail
							score = 25
							tags = { bad }
							character = scope:ootm_character
						}
					}
				}
			}
		}
	}

	option = { # Leave them to it
		name = mining.0200.e
		custom_tooltip = mining.0200.e.tt
		scope:activity = {
			set_variable = {
				name = mining_team_huddle
				value = flag:no_speech
			}
		}
	}

	after = {
		if = {
			limit = { this = scope:host }
			scope:activity = {
				every_attending_character = {
					limit = {
						NOT = { this = scope:host }
					}
					trigger_event = mining.0201
				}
				set_variable = mining_started
				set_variable = {
					name = mining_success_chance
					value = mining_success_chance_value
				}
			}
		}
	}
}

mining.0201 = { # Guest - kick off result - add stress
	type = activity_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:pep_talk_success }
				}
				desc = mining.0201.t.pep_talk_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:pep_talk_failure }
				}
				desc = mining.0201.t.pep_talk_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:strategy_success }
				}
				desc = mining.0201.t.strategy_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:strategy_failure }
				}
				desc = mining.0201.t.strategy_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:threaten_success }
				}
				desc = mining.0201.t.threaten_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:threaten_failure }
				}
				desc = mining.0201.t.threaten_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:overseer_success }
				}
				desc = mining.0201.t.overseer_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:overseer_failure }
				}
				desc = mining.0201.t.overseer_failure
			}
			desc = mining.0201.t.get_on_with_it
		}
	}
	desc = {
		desc = mining.0201.desc.start
		first_valid = {
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:pep_talk_success }
				}
				desc = mining.0201.desc.pep_talk_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:pep_talk_failure }
				}
				desc = mining.0201.desc.pep_talk_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:strategy_success }
				}
				desc = mining.0201.desc.strategy_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:strategy_failure }
				}
				desc = mining.0201.desc.strategy_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:threaten_success }
				}
				desc = mining.0201.desc.threaten_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:threaten_failure }
				}
				desc = mining.0201.desc.threaten_failure
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:overseer_success }
				}
				desc = mining.0201.desc.overseer_success
			}
			triggered_desc = {
				trigger = { 
					scope:activity = { var:mining_team_huddle ?= flag:overseer_failure }
				}
				desc = mining.0201.t.overseer_failure
			}
			desc = mining.0201.desc.get_on_with_it
		}
	}
	override_background = {
		reference = mining_activity
	}
	left_portrait = {
		character = scope:crowd_member_1
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_success
						var:mining_team_huddle ?= flag:strategy_success
						var:mining_team_huddle ?= flag:overseer_success
					}
				}
			}
			animation = throne_room_cheer_2
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_failure
						var:mining_team_huddle ?= flag:strategy_failure
						var:mining_team_huddle ?= flag:threaten_failure
						var:mining_team_huddle ?= flag:overseer_failure
					}
				}
			}
			animation = sadness
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					var:mining_team_huddle ?= flag:threaten_success
				}
			}
			animation = stress
		}
		animation = throne_room_conversation_3
	}
	center_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_success
						var:mining_team_huddle ?= flag:strategy_success
						var:mining_team_huddle ?= flag:overseer_success
					}
				}
			}
			animation = throne_room_cheer_1
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_failure
						var:mining_team_huddle ?= flag:strategy_failure
						var:mining_team_huddle ?= flag:threaten_failure
						var:mining_team_huddle ?= flag:overseer_failure
					}
				}
			}
			animation = stress
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					var:mining_team_huddle ?= flag:threaten_success
				}
			}
			animation = worry
		}
		animation = throne_room_conversation_4
	}
	right_portrait = {
		character = scope:speaker
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_success
						var:mining_team_huddle ?= flag:strategy_success
						var:mining_team_huddle ?= flag:overseer_success
					}
				}
			}
			animation = flirtation
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					OR = {
						var:mining_team_huddle ?= flag:pep_talk_failure
						var:mining_team_huddle ?= flag:strategy_failure
						var:mining_team_huddle ?= flag:threaten_failure
						var:mining_team_huddle ?= flag:overseer_failure
					}
				}
			}
			animation = throne_room_conversation_2
		}
		triggered_animation = {
			trigger = {
				scope:activity = {
					var:mining_team_huddle ?= flag:threaten_success
				}
			}
			animation = anger
		}
		animation = throne_room_conversation_2
	}

	trigger = {
		is_ai = no
	}

	immediate = {
		if = {
			limit = {
				exists = scope:ootm_speaker
			}
			scope:ootm_speaker = {
				save_scope_as = speaker
			}
		}
		else = {
			scope:host = {
				save_scope_as = speaker
			}
		}
		scope:activity = {
			random_attending_character = {
				limit = {
					NOT = {
						this = root
						this = scope:speaker
					}
				}
				save_scope_as = crowd_member_1
			}
		}
	}

	option = {
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:pep_talk_success }
			}
			text = mining.0201.a.pep_talk_success
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:pep_talk_failure }
			}
			text = mining.0201.a.pep_talk_failure
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:strategy_success }
			}
			text = mining.0201.a.strategy_success
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:strategy_failure }
			}
			text = mining.0201.a.strategy_failure
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:threaten_success }
			}
			text = mining.0201.a.threaten_success
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:threaten_failure }
			}
			text = mining.0201.a.threaten_failure
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:overseer_success }
			}
			text = mining.0201.a.overseer_success
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:overseer_failure }
			}
			text = mining.0201.a.overseer_failure
		}
		name = {
			trigger = { 
				scope:activity = { var:mining_team_huddle ?= flag:no_speech }
			}
			text = mining.0201.a.get_on_with_it
		}

		if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:pep_talk_success }
			}
			custom_tooltip = mining_activity_success_increase_medium_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:pep_talk_failure }
			}
			custom_tooltip = mining_activity_success_decrease_medium_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:strategy_success }
			}
			custom_tooltip = mining_activity_success_increase_major_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:strategy_failure }
			}
			custom_tooltip = mining_activity_success_decrease_major_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:threaten_success }
			}
			custom_tooltip = mining_activity_success_increase_medium_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:threaten_failure }
			}
			custom_tooltip = mining_activity_success_decrease_major_tt
		}
		else_if = {
			limit = {
				scope:activity = { var:mining_team_huddle ?= flag:overseer_success }
			}
			custom_tooltip = mining_activity_success_increase_medium_tt
		}
		else = {
			custom_tooltip = mining_activity_success_decrease_medium_tt
		}
	}
}

#####################################
#	OUTCOME EVENTS	                #
#	8001 - 8999						#
#####################################

# Prospecting Success
mining.8001 = {
	type = activity_event
	title = mining.8001.t
	desc = mining.8001.desc
	override_background = {
		reference = mining_activity
	}

	left_portrait = {
		character = scope:host
		animation = throne_room_two_handed_passive_1
	}
	right_portrait = {
		trigger = { exists = scope:mining_participant }
		character = scope:mining_participant
		animation = marshal
	}

	cooldown = { weeks = 1 }

	trigger = {
		scope:activity = { scope:special_option ?= flag:mining_type_prospecting }
	}

	weight_multiplier = {
		base = 1
		modifier = { add = involved_activity.var:mining_success_chance }
	}

	immediate = {
		scope:activity = {
			set_variable = {
				name = mining_success
				value = flag:yes
			}
		}
		scope:activity = {
			random_attending_character = {
				limit = {
					NOT = { this = scope:host }
				}
				save_scope_as = mining_participant
			}
		}
		save_scope_as = mining_ending
		# hunt_outcome_scope_effect = yes
		mining_all_attendee_xp_effect = { CHANGE = 2 RANDOM = 1 } # Guest XP gain for success
		# if = {
		# 	limit = { hunt_murder_target_trigger = yes }
		# 	hidden_effect = { hunt_save_murder_target_effect = yes }
		# }
	}

	option = { # Find a random resource
		name = mining.8001.a
		mining_generate_new_random_resource = yes

		# Duel
		# hunt_animal_bow_kill_effect = { DEATH = no VAR = scope:activity.var:animal_type }
	}

}

# Prospecting Failure - All the Glisters
