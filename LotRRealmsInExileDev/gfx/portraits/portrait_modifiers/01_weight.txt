weight = {
	usage = game

	@overweight_multiplier = 0.5
	@underweight_multiplier = -0.5

	overweight = {
		ignore_outfit_tags = yes
		dna_modifiers = {
			morph = {
				mode = modify
				gene = gene_bs_body_type
				value = {
					value = scope:weight_for_portrait # An absolute and normalized value derived from character body weight
					multiply = @overweight_multiplier
				}
			}
		}
		weight = {
			base = 0
			modifier = {
				add = 100
				scope:current_weight > overweight_threshold
			}
			modifier = {
                add = -100
				exists = this
				OR = {
					has_character_flag = has_scripted_weight
					has_character_flag = has_scripted_appearance #LotR
					is_elf = yes #LotR
					is_maiar = yes #LotR
				}
            }
		}
	}

	underweight = {
		ignore_outfit_tags = yes
		dna_modifiers = {
			morph = {
				mode = modify
				gene = gene_bs_body_type
				value = {
					value = scope:weight_for_portrait # An absolute and normalized value derived from character body weight
					multiply = @underweight_multiplier
				}
			}
		}
		weight = {
			base = 0
			modifier = {
				add = 100
				scope:current_weight < underweight_threshold
			}
			modifier = {
                add = -100
				exists = this
				OR = {
					has_character_flag = has_scripted_weight
					has_character_flag = has_scripted_appearance #LotR
					is_elf = yes #LotR
					is_maiar = yes #LotR
				}
            }
		}
	}

	ruler_designer_overweight = {
		dna_modifiers = {
			morph = {
				mode = modify
				gene = gene_bs_body_type
				value = {
					value = scope:weight_for_portrait # An absolute and normalized value derived from character body weight
					multiply = @overweight_multiplier
				}
			}
		}
		weight = {
			base = 0
			modifier = {
				add = 100
				exists = scope:ruler_designer
				scope:current_weight > overweight_threshold
			}
		}
	}
	ruler_designer_underweight = {
		dna_modifiers = {
			morph = {
				mode = modify
				gene = gene_bs_body_type
				value = {
					value = scope:weight_for_portrait # An absolute and normalized value derived from character body weight
					multiply = @underweight_multiplier
				}
			}
		}
		weight = {
			base = 0
			modifier = {
				add = 100
				exists = scope:ruler_designer
				scope:current_weight < underweight_threshold
			}
		}
	}
}

@muscle_multiply = 1
@muscle_max = 1.0

muscularity = {

	usage = game
	
	muscular = {
		ignore_outfit_tags = yes
		dna_modifiers = {
			morph = {
				mode = modify
				gene = gene_bs_body_shape
				value = {
					value = 0

					if = { 
						limit = { exists = scope:ruler_designer }
						add = scope:prowess
					}
					else_if = {
						limit = { exists = this }
						add = prowess_for_portrait
					}
					else = {
						add = scope:prowess
					}

					multiply = 4

					max = 1.0
				}
			}
		}
		weight = {
			base = 100
			modifier = {
				add = -100
				OR = {
					has_character_flag = has_scripted_appearance #LotR
					is_elf = yes #LotR
					is_maiar = yes #LotR
				}
			}
		}
	}
}

pregnancy = {

	usage = game

	pregnant = {
		ignore_outfit_tags = yes
		dna_modifiers = {
			morph = {
				mode = add
				gene = gene_bs_pregnant
				template = pregnant
				value = {
					value = 1
					if = {
						# Overweight females should have less visible pregnancy, so we change the 100% pregnant value
						limit = { current_weight > overweight_threshold }
						value = scope:weight_for_portrait # An absolute and normalized value derived from character body weight
						multiply = -1.0 
						add = 1.5
						max = 1.0
					}
					if = {
						limit = {  
							is_elf = no
							# NOT = { this = character:animation_test_female_pregnant }
						}
						multiply = {
							add = pregnancy_days
							# Only change every 10 days
							divide = 10
							round = yes
							multiply = 10
							divide = 250 # PREGNANCY_DAYS is 280; we want 1 month at 100%
							max = 1
						}
					}
					else_if = {
						limit = {
							is_elf = yes
							has_variable = year_became_pregnant
							# NOT = { this = character:animation_test_female_pregnant }
						}
						multiply = {
							add = current_year
							subtract = var:year_became_pregnant
							# Only change every 10 days
							divide = 9
							max = 1
						}
					}					
				}
			}
		}
		weight = {
			base = 0
			modifier = {
				add = 100
				OR = {
					portrait_has_trait_trigger = { TRAIT = pregnant }
					AND = {
						is_female = yes
						exists = var:year_became_pregnant
						has_variable = year_became_pregnant
						has_trait = elf_pregnant
					}
				}
			}			
		}
	}
}