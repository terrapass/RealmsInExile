decision_nelornieth_diplo = {
    title = decision_nelornieth_diplo
    picture = "gfx/interface/illustrations/decisions/decision_nelornieth_embassy.dds"

    major = yes
    ai_goal = yes
    ai_will_do = {
        base = 100
    }

    cooldown = { days = 3650 }

    selection_tooltip = decision_nelornieth_diplo_tooltip
    desc = decision_nelornieth_diplo_desc

    is_shown = {
        is_elf = yes
        has_title = title:k_nelornieth
        religion = {
			NOT = {
				is_in_family = rf_forcesofevil
			}
		}
	}

	is_valid = {
		is_adult = yes
		completely_controls = title:k_nelornieth
		prestige_level >= high_prestige_level
		gold >= 700
        prestige >= 1000 
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	should_create_alert = { #This means that if the player is tracking the decision, it won't make an alert unless these additional conditions are fulfilled
		gold >= 700
        	prestige >= 1000 
	}

	effect = {
		trigger_event = {
		    id = nelornieth.0001
		}
	}
}

request_elven_healer_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	title = request_elven_healer_decision_title
	
	sort_order = 82

	desc = request_elven_healer_decision_desc
	selection_tooltip = request_elven_healer_decision_tooltip

	ai_check_interval = 60

	is_shown = {
		is_ruler = yes
		faith_is_good = yes
		OR = {
			has_trait = cancer
			has_trait = bubonic_plague
			has_trait = black_breath
			any_spouse = {
				OR = {
					has_trait = cancer
					has_trait = bubonic_plague
					has_trait = black_breath
				}
			}
			any_child = {
				OR = {
					has_trait = cancer
					has_trait = bubonic_plague
					has_trait = black_breath
				}
			}
		}
		is_in_valinor = no
	}

	cooldown = { years = 50 }

	is_valid = {
		is_imprisoned = no
		custom_tooltip = {
			text = LOTR_FRIENDS_WITH_ELVEN_KING_TRIGGER
			lotr_friends_with_elven_king_trigger = yes
		}	
	}

	effect = {
		trigger_event = {
			id = health.3021
			days = 14
		}
		custom_tooltip = request_elven_healer_decision_effect_tooltip
	}
	
	ai_potential = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		gold > 500
		is_at_war = no
	}

	ai_will_do = {
		base = 100
	}
}

##################################################
# Establish the high kingdom of Eryn Lasgalen
# by Fredsch
##################################################
decision_establish_high_kingdom_of_eryn_lasgalen = {
	picture = "gfx/interface/illustrations/decisions/decision_eryn_lasgalen.dds"
	title = decision_establish_high_kingdom_of_eryn_lasgalen
	desc = decision_establish_high_kingdom_of_eryn_lasgalen_desc	
	selection_tooltip = decision_establish_high_kingdom_of_eryn_lasgalen_tooltip
	confirm_text = decision_establish_high_kingdom_of_eryn_lasgalen_confirm
	major = yes

	# Shown checks
	is_shown = {
		is_elf = yes
		culture = culture:lasgalendrim

		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_establish_high_kingdom_of_eryn_lasgalen
			}
		}
	}

	# Valid checks
	is_valid = {
		is_at_war = no
		is_independent_ruler = yes
		prestige_level >= max_prestige_level
		completely_controls_region = middleearth_west_rhovanion_mirkwood
		has_title = title:k_lasgalen
		custom_tooltip = {
			text = decision_establish_high_kingdom_of_eryn_lasgalen.amon_lanc_is_lasgalendrim
			title:c_amon_lanc.culture = culture:lasgalendrim
		}
		title:c_amon_lanc = { 
			title_province = {
				has_building = wonder_amon_lanc_03
			}
		}
	}

	# Effect
	effect = {
		get_title = title:e_greenwood
		custom_tooltip = decision_establish_high_kingdom_of_eryn_lasgalen.greenwood_renamed_eryn_lasgalen
		title:e_greenwood = { set_title_name = e_eryn_lasgalen }
		dynasty_legacy_of_oropher_effects = yes

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_establish_high_kingdom_of_eryn_lasgalen
		}

		if = {
			limit = { # Major News
				NOT = { has_game_rule = no_news }
			}
			every_player = { #Global News Announcement
				trigger_event = news_event.0017
			}
		}
	}

	# Cost
	cost = {
		prestige = 5000
	}

	# AI values
	ai_check_interval = 12

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

decision_destroy_dol_guldur = {
	title = decision_destroy_dol_guldur
	picture = "gfx/interface/illustrations/decisions/decision_dol_guldur_dominion_of_the_sorcerer.dds"
	major = yes
	ai_goal = yes
	selection_tooltip = decision_destroy_dol_guldur_tooltip
	desc = decision_destroy_dol_guldur_desc
	confirm_text = decision_destroy_dol_guldur_confirm

	is_shown = {
		has_title = title:k_lothlorien
		character:nazgul2 = {
			has_title = title:k_amon_lanc
		}
		is_elf = yes
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_destroy_dol_guldur
			}
		}
	}

	is_valid = {
		is_independent_ruler = yes
		character_is_realm_neighbor = character:nazgul2
		NOT = { has_truce = character:nazgul2 }
	}

	effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_destroy_dol_guldur
		}
		start_war = {
			casus_belli = destroy_dol_guldur_cb
			target = character:nazgul2
			target_title = title:d_amon_lanc
		}
		custom_tooltip = decision_destroy_dol_guldur_effect_1
	}
	
	ai_potential = {
		character:nazgul2 = {
			is_tributary = no
		}
	}

	ai_will_do = {
		base = 80
	}
}

##################################################
# Claim Amon Lanc for Laurelindorenan
# by Fredsch
##################################################
claim_amon_lanc_for_laurelindorenan = {
	picture = "gfx/interface/illustrations/decisions/decision_eryn_lasgalen.dds"
	title = claim_amon_lanc_for_laurelindorenan
	desc = claim_amon_lanc_for_laurelindorenan_desc	
	selection_tooltip = claim_amon_lanc_for_laurelindorenan_tooltip
	confirm_text = claim_amon_lanc_for_laurelindorenan_confirm
	major = yes

	# Shown checks
	is_shown = {
		is_elf = yes
		culture = culture:galadhrim
		any_held_title = {
			de_jure_liege = title:k_lothlorien
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:claim_amon_lanc_for_laurelindorenan
			}
		}
	}

	# Valid checks
	is_valid = {
		is_at_war = no
		is_independent_ruler = yes
		prestige_level >= max_prestige_level
		has_title = title:k_lothlorien
		completely_controls = title:d_amon_lanc
		completely_controls = title:d_gwath_anglennol
		completely_controls = title:d_taur_e_ndaedlos
		completely_controls = title:d_drownholt
		custom_tooltip = {
			text = claim_amon_lanc_for_laurelindorenan.amon_lanc_is_galadhrim
			title:c_amon_lanc.culture = culture:galadhrim
		}
		title:c_amon_lanc = { 
			title_province = {
				has_building = wonder_amon_lanc_03
			}
		}
	}

	# Effect
	effect = {
		get_title = title:e_laurelindorenan
		title:k_amon_lanc = { set_de_jure_liege_title = title:e_laurelindorenan }
		title:d_drownholt = { set_de_jure_liege_title = title:k_lothlorien }
		custom_tooltip = claim_amon_lanc_for_laurelindorenan.amon_lanc_renamed_east_lorien
		title:k_amon_lanc = { set_title_name = cn_east_lorien }
		dynasty_light_of_the_forest = yes
		
		give_nickname = nick_lordlady_of_light

		if = {
			limit = {
				has_character_modifier = valar_ban_modifier
			}
			remove_character_modifier = valar_ban_modifier
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:claim_amon_lanc_for_laurelindorenan
		}
	}

	# Cost
	cost = {
		prestige = 5000
	}

	# AI values
	ai_check_interval = 12

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

##################################################
# Elevate Edhellond into Kingdom
# by Jaco_Daan
##################################################
decision_make_edhellond_kingdom = {
	picture = "gfx/interface/illustrations/event_scenes/armenelos.dds"
	title = decision_make_edhellond_kingdom
	selection_tooltip = decision_make_edhellond_kingdom_tooltip
	desc = decision_make_edhellond_kingdom_desc
	confirm_text = decision_make_edhellond_kingdom_confirm
	major = yes

	# SHOWN
	is_shown = {
		is_landed = yes
		is_elf = yes
		
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:elves_edhellond_kingdom
			}
		}
		is_target_in_global_variable_list = {  
			name = unavailable_unique_decisions
			target = flag:invite_elves_edhellond
		}
		has_title = title:c_edhellond
	}

	# IS VALID
	is_valid = {
		prestige_level >= 4
		AND = {
			has_title = title:c_edhellond
		}
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	#COST
	cost = {
		prestige = 1500
		gold = 500
		piety = 750
	}

	#EFFECT
	effect = {
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_edhellond = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:elves_edhellond_kingdom
		}
		
		if = {
			limit = { 
				has_title = title:c_dol_amroth
			}
			title:c_dol_amroth = {
				set_de_jure_liege_title = title:d_edhellond
			}
			title:k_belfalas = {
				set_capital_county = title:c_nargond
			}
		}
		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { exists = title:k_edhellond.holder.liege }	
			}
			title:k_edhellond = {
				set_de_jure_liege_title = title:e_gondor
			}
		} else = {
			title:k_edhellond = {
				set_de_jure_liege_title = root.top_liege.primary_title
			}
		}
		
		title:d_edhellond = {
			set_de_jure_liege_title = title:k_edhellond
		}
		hidden_effect = {
			title:c_edhellond = {
				set_de_jure_liege_title = title:d_edhellond
			}
		}
	}

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
}

##################################################
# Reclaim Sîrgala Kingdom
# by Jaco_Daan
##################################################

decision_reclaim_sirgala = {
	title = decision_reclaim_sirgala
	desc = decision_reclaim_sirgala_desc
	confirm_text = decision_reclaim_sirgala_confirm
	selection_tooltip = decision_reclaim_sirgala_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_elves_dwarves_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	# IS SHOWN
	is_shown = {
		has_culture = culture:sirrandrai
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_reclaim_sirgala
			}		
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= high_prestige_level
		completely_controls = title:d_siragale # Completely controls the old heartland of the Kingdom
		#completely_controls = title:d_sarn_athrad # Completely controls the old heartland of the Kingdom
		# Vector note - Sarn Athrad had slipped out of Sirgala's control by the mid-late Second Age. More fitting to make this an optional objective.
		completely_controls = title:d_hyarromenya # Completely controls the old heartland of the Kingdom
		highest_held_title_tier < tier_empire
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# EFFECT
	effect = {
		add_prestige = 1000

		hidden_effect = {
			title:d_siragale = {
				set_de_jure_liege_title = title:k_sirgala
			}
			#title:d_sarn_athrad = { # Vector Note - see above comment
			#	set_de_jure_liege_title = title:k_sirgala
			#}
			title:d_hyarromenya = {
				set_de_jure_liege_title = title:k_sirgala
			}
			set_realm_capital = title:c_edhelas
		}
		title:k_sirgala = {
			set_de_jure_liege_title = title:e_lindon
		}
		title:k_sirgala = {
			set_capital_county = title:c_edhelas
		}
		get_title = title:k_sirgala
		set_primary_title_to = title:k_sirgala

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_reclaim_sirgala
		}
	}
}

##################################################
# Restore Elven Suza Sumar
# by Commander Sol
##################################################

decision_restore_suza_sumar_elven = {
	title = decision_restore_suza_sumar_elven
	desc = decision_restore_suza_sumar_elven_desc
	confirm_text = decision_restore_suza_sumar_elven_confirm
	selection_tooltip = decision_restore_suza_sumar_elven_tooltip
	picture = "gfx/interface/illustrations/decisions/decision_elves_dwarves_02.dds"
	major = yes

	# AI
	ai_goal = yes
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
	
	# IS SHOWN
	is_shown = {
		culture = { has_cultural_pillar = heritage_moriquendi }
		has_title = title:d_suza_sumar
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_restore_suza_sumar_elven
			}		
		}
	}
	
	# IS VALID
	is_valid = {
		prestige_level >= high_prestige_level
		completely_controls = title:d_suza_sumar
		completely_controls = title:d_sarwa
		has_title = title:c_sanma
		has_title = title:c_simza
		highest_held_title_tier < tier_kingdom
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}

	# EFFECT
	effect = {
		add_prestige = 1000

		hidden_effect = {
			title:d_suza_sumar = {
				set_de_jure_liege_title = title:k_sumarieth
			}
			title:d_sarwa = {
				set_de_jure_liege_title = title:k_sumarieth
			}
			title:c_simza = {
				set_de_jure_liege_title = title:d_suza_sumar
			}
			title:c_sanma = {
				set_de_jure_liege_title = title:d_suza_sumar
			}
			set_realm_capital = title:c_pred
		}
		title:k_sumarieth = {
			set_de_jure_liege_title = title:e_bozisha_miraz
		}
		title:k_sumarieth = {
			set_capital_county = title:c_pred
		}
		get_title = title:k_sumarieth
		set_primary_title_to = title:k_sumarieth

		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_restore_suza_sumar_elven
		}
	}
}

decision_return_cuind = {
	# TEXT
	title = decision_return_cuind
	picture = "gfx/interface/illustrations/decisions/decision_fornost_02.dds"
	selection_tooltip = decision_return_cuind_tooltip
	desc = decision_return_cuind_desc
	confirm_text = decision_return_cuind_confirm
	major = yes

	# IS_SHOWN
	is_shown = {
		has_title = title:k_sumarieth
		
		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_restore_suza_sumar_elven
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:decision_return_cuind
			}
		}
	}
	
	# IS_VALID
	is_valid = {
		prestige_level >= 4
		piety_level >= 5
		prestige >= 1000
		gold >= 200
	}
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	# EFFECT 
	effect = {
		set_culture = culture:cuind
		
		if = {
			limit = { 
				any_spouse = { 
					is_landed = no 
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				} 
			}
			every_spouse = {
				limit = {
					is_landed = no
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_close_family_member = {
				limit = {
					is_landed = no
					NOT = { is_spouse_of = root }
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				custom = all_unlanded_family_members
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}
		if = {
			limit = {
				any_child = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_child = {
				limit = {
					NOT = { 
						OR = {
							culture = { has_cultural_pillar = heritage_moriquendi }
						}
					}
				}
				custom = all_children_custom
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
			}
		}

		#Convert appropriate vassals, and their family
		if = {
			limit = {
				any_vassal_or_below = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
			}
			every_vassal_or_below = {
				custom = decision_return_cuind_vassals_custom
				limit = {
					OR = {
						culture = { has_cultural_pillar = heritage_moriquendi }
					}
				}
				if = {
					limit = { is_ai = yes }
					set_culture = culture:cuind
				}
				hidden_effect = {
					if = {
						limit = { 
							any_spouse = { 
								is_landed = no
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							} 
						}
						every_spouse = {
							limit = {
								is_landed = no
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_close_family_member = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_close_family_member = {
							limit = {
								is_landed = no
								NOT = { is_spouse_of = prev }
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							custom = all_unlanded_family_members
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_child = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_child = {
							limit = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							custom = all_children_custom
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
						}
					}
					if = {
						limit = {
							any_vassal_or_below = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
						}
						every_vassal_or_below = {
							custom = decision_return_cuind_vassals_custom
							limit = {
								OR = {
									culture = { has_cultural_pillar = heritage_moriquendi }
								}
							}
							if = {
								limit = { is_ai = yes }
								set_culture = culture:cuind
							}
							hidden_effect = {
								if = {
									limit = { 
										any_spouse = { 
											is_landed = no 
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										} 
									}
									every_spouse = {
										limit = {
											is_landed = no
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
								if = {
									limit = {
										any_close_family_member = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
									}
									every_close_family_member = {
										limit = {
											is_landed = no
											NOT = { is_spouse_of = prev }
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										custom = all_unlanded_family_members
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
								if = {
									limit = {
										any_child = {
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
									}
									every_child = {
										limit = {
											OR = {
												culture = { has_cultural_pillar = heritage_moriquendi }
											}
										}
										custom = all_children_custom
										if = {
											limit = { is_ai = yes }
											set_culture = culture:cuind
										}
									}
								}
							}
						}
					}
				}
			}
		}

		#Flip Counties
		every_county = {
			custom = decision_return_cuind_counties_custom
			limit = {
				OR = {
					holder = root
					holder.top_liege = root
				}
				culture = { has_cultural_pillar = heritage_moriquendi }
			}
			set_county_culture = culture:cuind
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:decision_return_cuind
		}
	}

	# AI
	ai_goal = yes
	ai_potential = { always = yes }
	ai_will_do = { base = 100 }
}