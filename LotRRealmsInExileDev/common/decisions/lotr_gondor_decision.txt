### Gondor Decisions ###

decision_recover_harondor = {
	title = decision_recover_harondor
	picture = "gfx/interface/illustrations/decisions/decision_harondor_01.dds"
	major = yes
	ai_goal = no
	ai_check_interval = 120
	selection_tooltip = decision_recover_harondor_tooltip
	desc = decision_recover_harondor_desc
	confirm_text = decision_recover_harondor_confirm
	
	is_shown = {
		has_culture_group = culture_group:lotr_dunedain_group
		is_landed = yes
			OR = {
				has_title = title:e_gondor_steward
				has_title = title:e_gondor
			}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:reclaim_harondor_decision
				}
			}
		}
	is_valid = {
		completely_controls = title:k_harondor
	}
	
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_available_adult = yes
		is_at_war = no
	}
	
	effect = {
		if = {
			limit = { has_title = title:e_gondor_steward }
			title:k_harondor = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor_steward
				}
			}
		}
		else_if = {
			limit = { has_title = title:e_gondor }
			title:k_harondor = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_gondor
				}
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
		target = flag:reclaim_harondor_decision
		}
		show_as_tooltip = {
			reclaim_harondor_decision = yes
		}
		trigger_event = gondor.1000
		save_scope_as = restorer
		# Send event to other players
		every_player = {
			limit = {
				NOT = { this = root }
				OR = {
					has_culture_group = culture_group:lotr_dunlending_group
#					has_culture_group = culture_group:lotr_andrast_gwathuirim_group
#					has_culture_group = culture_group:lotr_druwaith_iaur_gwathuirim_group
#					has_culture_group = culture_group:lotr_arnorian_gwathuirim_group
					has_culture = culture:eotheod
					has_culture = culture:rohirrim
#					has_culture = culture:gondorian
				}
			}
			trigger_event = gondor.1001
		}
	}
	
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
}