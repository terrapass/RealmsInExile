settle_elven_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = settle_elven_holding

	desc = settle_elven_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			has_government = elven_government
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = elven_holding
					}
					culture = {
						is_elf_culture = yes
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "settle_elven_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
			prestige >= medium_prestige_gain
		}
	}

	cost = {
		prestige = medium_prestige_loss
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = settle_elven_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = elven_holding
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_castle_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_castle_holding

	desc = feudalize_into_castle_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				has_government = tribal_government
				has_government = elven_government
			}
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
		gold >= feudalize_tribal_holding_interaction_cost
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_into_castle_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = castle_holding
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_city_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_city_holding

	desc = feudalize_into_city_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				has_government = tribal_government
				has_government = elven_government
			}
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			title_province = {
				is_county_capital = no
			}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
			gold >= feudalize_tribal_holding_interaction_cost
		}
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_tribal_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = city_holding
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

feudalize_into_temple_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = feudalize_into_temple_holding

	desc = feudalize_into_temple_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			NOR = {
				has_government = tribal_government
				has_government = elven_government
			}
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					OR = {
						has_holding_type = tribal_holding
						has_holding_type = elven_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "feudalize_tribal_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			title_province = {
				is_county_capital = no
			}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
			gold >= feudalize_tribal_holding_interaction_cost
		}
	}

	cost = {
		gold = {
			value = feudalize_tribal_holding_interaction_cost
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = feudalize_into_temple_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = church_holding
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

tribalize_elven_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = tribalize_elven_holding

	desc = tribalize_elven_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			has_government = tribal_government
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_elf = no
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = tribal_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "settle_elven_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			add_gold = 250
			send_interface_toast = {
				title = tribalize_elven_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						set_holding_type = tribal_holding
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 150
	}
}

destroy_holding_interaction = {
	category = interaction_category_uncategorized
	hidden = yes
	# special_interaction = destroy_holding

	desc = destroy_holding_interaction_desc

	target_type = title
	target_filter = actor_domain_titles
	
	auto_accept = yes

	is_shown = {
		scope:actor = {
			this = scope:recipient
			has_government = elven_government
		}
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:actor
			is_capital_barony = no # we'll use the county in that case
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					NOT = {
						has_holding_type = elven_holding
					}
				}
			}
			trigger_else = {
				custom_description = {
					text = "settle_elven_holding_interaction_title_not_county_or_below"
					always = no
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = {
			title_province = {
				is_county_capital = no
			}
			trigger_if = {
				limit = { tier <= tier_county }
				title_province = {
					barony_controller = scope:actor
					has_ongoing_construction = no
				}
			}
		}
	}

	cost = {
		gold = {
			value = 0
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = destroy_holding_interaction_notification

				right_icon = scope:actor					

				if = {
					limit = { exists = scope:target.title_province }
					scope:target.title_province = {
						remove_holding = yes
					}
				}
			}
		}
	}

	ai_will_do = {
		base = -100
		modifier = {
			add = 1000
			scope:actor = {
				is_elf = yes
			}
		}
	}
}