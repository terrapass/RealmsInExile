### WIZARDS'S NEW CLOTHES ###
# Saruman of Many Colours
# Saruman the Radiant (White)



### SETUP ISENGARD UNLEASHED CHARACTERS ###
# Setup Saruman.
# Populating Isengard's Uruk characters and Saruman's court. Add named Uruks.
# Gríma Wormtongue should travel to Saruman's court.
#spawn_sarumans_uruk_court_effect = {
#}

spawn_saruman_dunlending_court_effect = {
	# Spawn Isengard Dunlending/Gondorian court and knights
	create_character = { # Alfric, Guard of Isengard
		name = "Alfric"
		employer = scope:saruman
		template = isengard_alfric_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = alfric
	}
	scope:alfric = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
		set_relation_friend = scope:saruman
	}
	create_character = { # Garnoc, Chieftain of the Men of the Isen
		name = "Garnoc"
		employer = scope:saruman
		template = isengard_garnoc_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = garnoc
	}
	scope:garnoc = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Dianach, Doorwarden of Orthanc
		name = "Dianach"
		gender = female
		employer = scope:saruman
		template = isengard_dianach_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = dianach
	}
	scope:dianach = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
		set_relation_friend = scope:saruman
	}
	create_character = { # Bocaern, Keeper of the Scriptorium
		name = "Bocaern"
		employer = scope:saruman
		template = isengard_bocaern_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = bocaern
	}
	scope:bocaern = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Melmidoc, Apprentice to Bocaern
		name = "Melmidoc"
		employer = scope:saruman
		template = isengard_melmidoc_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = melmidoc
	}
	scope:melmidoc = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = { # Geth, Bird Master of Saruman
		name = "Geth"
		employer = scope:saruman
		template = isengard_geth_character_template
		faith = scope:saruman.faith
		culture = isengard_dunlending
		save_scope_as = geth
	}
	scope:geth = {
		add_character_flag = {
			flag = immune_to_disease
			years = 10
		}
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = scope:saruman
		template = new_warrior_character
		faith = scope:saruman.faith
		culture = isengard_dunlending
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = scope:saruman
		template = new_warrior_character
		faith = scope:saruman.faith
		culture = herdfolk_dunlending
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = scope:saruman
		template = new_warrior_character
		faith = scope:saruman.faith
		culture = hill_dunlending
	}
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = scope:saruman
		template = new_warrior_character
		faith = scope:saruman.faith
		culture = rohirrim
	}
	# Spawn Isengard Dunlending/Gondorian engineer
	create_character = {
		gender_female_chance = root_soldier_female_chance
		employer = scope:saruman
		template = new_siege_engineer
		faith = scope:saruman.faith
		culture = isengard_dunlending
	}
}

# "Lurtz 'as arrived, he'll know what to do!"
give_lurtz_land_effect = {
	save_scope_as = urukhai_chieftain

	create_title_and_vassal_change = {
		type = conquest
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:c_AAAA = { # County north of Isengard in the Misty Mountains.
		change_title_holder = {
			holder = scope:urukhai_chieftain
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
}
spawn_uruk_lurtz_character_effect = {
	title:c_AAAA.title_province = { # County north of Isengard in the Misty Mountains.
		save_scope_as = lurtz_holding
	}
	create_character = { # ToDo create female Lurtz-like character for gender equality.
		name = "Lurtz"
		location = c_isengard
		employer = scope:saruman
		template = uruk_lurtz_character_template
		save_scope_as = uruk_lurtz
	}
	scope:uruk_lurtz = {
		add_character_flag = {
			flag = immune_to_disease
			years = 5
		}
		add_trait = firstborn_of_the_urukhai
		give_lurtz_land_effect = yes
		add_gold = 1000
		add_dread = high_dread
		# Spawn Ugluk as heir. No, he's not Lurtz son.
		form_the_mongol_empire_effect = yes
		add_prestige = 25000
		dynasty = {
			add_dynasty_prestige_level = 5
			add_dynasty_prestige = 10000
			add_dynasty_perk = warfare_legacy_1
			add_dynasty_perk = warfare_legacy_2
			add_dynasty_perk = warfare_legacy_3
			add_dynasty_perk = warfare_legacy_4
		}
	}
}



### FORM ISENGARD UNLEASHED ###
form_isengard_unleashed_effect = {
	save_scope_as = isengard_unleashed_founder

	# Create the title and laws
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_isengard_unleashed = {
		change_title_holder = {
			holder = scope:isengard_unleashed_founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	add_realm_law_skip_effects = high_partition_succession_law
	assert_if = {
		limit = { NOT = { exists = title:e_isengard_unleashed } }
		text = "Isengard Unleashed title was not created!"
	}
	hidden_effect = { set_primary_title_to = title:e_isengard_unleashed }
	every_held_title = {
		limit = {
			tier = tier_empire
			NOT = { this = title:e_isengard_unleashed }
		}
		scope:isengard_unleashed_founder = {
			destroy_title = prev
		}
	}

	# Effects for Saruman and Isengard Unleashed
	spawn_isengard_uruk_troops_effect = yes

	add_character_modifier = {
		modifier = isengard_unleashed_saruman_modifier
	}

	# Global variable
	set_global_variable = {
		name = isengard_unleashed_has_spawned
		value = yes
	}
}

# mongol_realm_invasion_war = isengard_unleashed_realm_invasion_war
# mongol_conqueror = isengard_unleashed_conqueror
### START WAR OF CONQUEST FOR S. DUNLAND ###
start_wars_for_south_dunland_effect = {
	save_temporary_scope_as = isengard_unleashed_conqueror
	# Build a list of potential targets.
	every_neighboring_top_liege_realm_owner = {
		limit = {
			any_sub_realm_county = {
				title_province = { geographical_region = special_isengard_unleashed_conquest_region_prio_1 }
			}
		}
		if = {
			limit = { NOT = { is_in_list = top_liege_targets } }
			add_to_temporary_list = top_liege_targets
		}
	}
	every_in_list = {
		list = top_liege_targets
		save_temporary_scope_as = new_war_target
		primary_title.empire = { save_temporary_scope_as = war_target_title }
		# Declare the war
		scope:isengard_unleashed_conqueror = {
			start_war = {
				cb = mongol_realm_invasion_war
				target = scope:new_war_target.top_liege
				target_title = scope:war_target_title.empire
			}
		}
	}
}


### ISENGARD UNLEASHED TROOPS ###
spawn_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 10
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_berserker
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 10
		}
		location = capital_province
	}
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_uruk_event_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_fighting
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 5
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 10
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 5
		}
		location = capital_province
	}
}
# Orcs from the Misty Mountains
spawn_isengard_orc_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_orc_event_troops
		men_at_arms = {
			type = orc_warriors
			stacks = 2
		}
		men_at_arms = {
			type = orc_archers
			stacks = 2
		}
		men_at_arms = {
			type = mountainorc_warriors
			stacks = 2
		}
		location = capital_province
	}
}
# Dunlendings in service to Saruman
spawn_isengard_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = no
		inheritable = no
		name = isengard_dunlending_event_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}
# Uruk-hai of Isengard
spawn_decision_isengard_uruk_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_uruk_troops
		men_at_arms = {
			type = urukhai_fighting
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_crossbowmen
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_pikemen
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_isengard_siege_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_isengard_siege_troops
		men_at_arms = {
			type = urukhai_berserker
			stacks = 2
		}
		men_at_arms = {
			type = urukhai_sappers
			stacks = 1
		}
		men_at_arms = {
			type = urukhai_ballista
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_dunlending_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_dunlending_troops
		men_at_arms = {
			type = dunlending_huscarl
			stacks = 1
		}
		men_at_arms = {
			type = dunlending_longbowmen
			stacks = 2
		}
		men_at_arms = {
			type = dunlending_outriders
			stacks = 2
		}
		location = capital_province
	}
}
spawn_decision_wildmen_troops_effect = {
	spawn_army = {
		uses_supply = yes
		inheritable = no
		name = decision_wildmen_troops
		levies = {
			value = decision_wildmen_troops_value
		}
		men_at_arms = {
			type = light_footmen
			stacks = 2
		}
		location = capital_province
	}
}


