# Historical Artifacts Creation #

set_artifact_rarity_common = {
	save_scope_value_as = {
		name = quality
		value = 15
	}
	save_scope_value_as = {
		name = wealth
		value = 15
	}
}

set_artifact_rarity_masterwork = {
	save_scope_value_as = {
		name = quality
		value = 30
	}
	save_scope_value_as = {
		name = wealth
		value = 30
	}
}

set_artifact_rarity_famed = {
	save_scope_value_as = {
		name = quality
		value = 70
	}
	save_scope_value_as = {
		name = wealth
		value = 70
	}
}

set_artifact_rarity_illustrious = {
	save_scope_value_as = {
		name = quality
		value = 100
	}
	save_scope_value_as = {
		name = wealth
		value = 100
	}
}

create_artifact_anduril_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = anduril_name
		description = anduril_description
		type = sword
		visuals = anduril
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 7032.1.1
			recipient = character:lineisildur42 #Aragorn
			location = province:b_minas_tirith #Minas Tirith
		}
		modifier = anduril_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = anduril
		save_scope_as = epic
	}
}

create_artifact_crown_of_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = crown_of_gondor_name
		description = crown_of_gondor_description
		type = helmet
		visuals = crown_of_gondor
		wealth = scope:wealth
		quality = scope:quality
		template = crown_of_gondor_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 5200.1.1
			recipient = character:lineofanarion21 # Atanatar II Alcarin
			location = province:c_osgiliath #Osgiliath
		}
		modifier = crown_of_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crown_of_gondor
		save_scope_as = epic
	}
}

create_artifact_throne_of_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = throne_of_gondor_name
		description = throne_of_gondor_description
		type = throne_special
		visuals = throne_of_gondor
		wealth = scope:wealth
		quality = scope:quality
		template = throne_of_gondor_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3912.1.1
			recipient = character:lineofanarion1 # Anarion
			location = province:c_osgiliath #Osgiliath
		}
		modifier = throne_of_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_of_gondor
		save_scope_as = epic
	}
}

create_artifact_black_chair_stewards_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = black_chair_stewards_name
		description = black_chair_stewards_description
		type = throne_special
		visuals = black_chair_stewards
		wealth = scope:wealth
		quality = scope:quality
		template = black_chair_stewards_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 6052.1.1
			recipient = character:linesteward4 #Mardil Voronwë
			location = province:c_minas_tirith #Minas Tirith
		}
		modifier = black_chair_stewards_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_chair_stewards
		save_scope_as = epic
	}
}

create_artifact_steward_rod_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = stewards_rod
		description = stewards_rod_description
		type = regalia
		visuals = stewards_rod
		wealth = scope:wealth
		quality = scope:quality
		template = steward_rod_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 6052.1.1
			recipient = character:linesteward4 #Mardil Voronwë
			location = province:c_minas_tirith #Minas Tirith
		}
		modifier = steward_rod_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = stewards_rod
		save_scope_as = epic
	}
}

create_artifact_mithrellas_talisman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  mithrellas_talisman_name
		description = mithrellas_talisman_description
		type = necklace
		visuals = mithrellas_talisman
		wealth = scope:wealth
		quality = scope:quality
		template = mithrellas_talisman_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 6100.1.1
			recipient = character:dolamroth2 #Imrazôr
			location = province:c_dol_amroth #Dol Amroth
		}
		modifier = mithrellas_talisman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mithrellas_talisman
		save_scope_as = epic
	}
}

create_artifact_lindalf_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = lindalf_name
		description = lindalf_description
		type = spear
		visuals = lindalf
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6110.1.1
			recipient = character:dolamroth3 # Galador
			location = province:c_dol_amroth #Dol Amroth
		}
		modifier = lindalf_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = lindalf
		save_scope_as = epic
	}
}

create_artifact_horn_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = horn_gondor_name
		description = horn_gondor_description
		type = miscellaneous
		template = horn_gondor_template
		visuals = horn_gondor
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6000.1.1
			recipient = character:linesteward3 # Vorondil the Hunter
			location = province:c_osgiliath # Osgiliath
		}
		modifier = horn_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = horn_gondor
		save_scope_as = epic
	}
}

create_artifact_ring_barahir_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ring_barahir_name
		description = ring_barahir_description
		type = miscellaneous
		template = ring_barahir_template
		visuals = ring_barahir
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1.1.1
			recipient = character:linefinwe6 # Finarfin
			location = province:k_tirion # Tirion
		}
		modifier = ring_barahir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_barahir
		save_scope_as = epic
	}
}

create_artifact_storms_wrath_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = storms_wrath_name
		description = storms_wrath_description
		type = sword
		visuals = storms_wrath
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4600.1.1
			recipient = character:lineofdulgu44 #Arnakhor
			location = province:b_khorsaj #Khorsaj
		}
		modifier = storms_wrath_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = storms_wrath
		save_scope_as = epic
	}
}

create_artifact_herugrim_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = herugrim_name
		description = herugrim_description
		type = sword
		visuals = herugrim
		template = rohan_royal_weapon_artifact
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6792.1.1
			recipient = character:6000010 #Fréaláf
			location = province:b_edoras #Edoras
		}
		modifier = herugrim_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = herugrim
		save_scope_as = epic
	}
}

create_artifact_guthwine_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = guthwine_name
		description = guthwine_description
		type = sword
		visuals = guthwine
		template = rohan_royal_weapon_artifact
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6600.1.1
			recipient = character:eofor #Prince Eofor
			location = province:b_edoras #Edoras
		}
		modifier = guthwine_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = guthwine
		save_scope_as = epic
	}
}

create_artifact_tapestry_ride_eorl_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  tapestry_ride_eorl_name
		description = tapestry_ride_eorl_description
		type = wall_big
		visuals = tapestry_ride_eorl
		wealth = scope:wealth
		quality = scope:quality
		template = tapestry_ride_eorl_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3580.1.1
			recipient = character:6000001 #Brego
			location = province:c_kingstead #Kingstead
		}
		modifier = tapestry_ride_eorl_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = tapestry_ride_eorl
		save_scope_as = epic
	}
}

create_artifact_horn_mark_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = horn_mark_name
		description = horn_mark_description
		type = miscellaneous
		visuals = horn_mark
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6543.11.11
			recipient = character:6000000 # Eorl the Young (none of his ancestors in-game)
			location = province:c_foldbourn # Foldbourn
		}
		modifier = horn_mark_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = horn_mark
		save_scope_as = epic
	}
}

create_artifact_branch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  branch_name
		description = branch_description
		type = pedestal
		visuals = branch
		wealth = scope:wealth
		quality = scope:quality
		template = branch_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3913.1.1
			recipient = character:lineofisilithor1 #Isilithôr
			location = province:c_korlea #Korlea
		}
		modifier = branch_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = branch
		save_scope_as = epic
	}
}

create_artifact_niluzagar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = niluzagar_name
		description = niluzagar_description
		type = sword
		visuals = niluzagar
		template = niluzagar_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 3592.1.1
			recipient = character:Zagarth_o_r #Zagarthôr
			location = province:b_nilulonde #Nilulonde
		}
		modifier = niluzagar_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = niluzagar
		save_scope_as = epic
	}
}

create_artifact_book_baitha_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  book_baitha_name
		description = book_baitha_description
		type = pedestal
		visuals = book
		wealth = scope:wealth
		quality = scope:quality
		template = book_baitha_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 4960.1.1
			recipient = character:lineofthonuzir1 #Thonuzir of Hazaj Tollin
			location = province:c_hazaj_tollin #Hazaj Tollin
		}
		modifier = book_baitha_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = book_baitha
		save_scope_as = epic
	}
}

create_artifact_throne_of_castaher_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = throne_of_castaher_name
		description = throne_of_castaher_description
		type = throne_special
		visuals = throne_of_castaher
		wealth = scope:wealth
		quality = scope:quality
		template = throne_of_castaher_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 5481.1.1
			recipient = character:lineofcastaher2 # Castaher
			location = province:c_umbar #Umbar
		}
		modifier = throne_of_castaher_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_of_castaher
		save_scope_as = epic
	}
}

create_artifact_cloak_ancient_ones_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = cloak_ancient_ones_name
		description = cloak_ancient_ones_description
		type = regalia
		visuals = cloak_ancient_ones
		template = cloak_ancient_ones_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 7026.6.22
			recipient = character:onikanna #Ôn-Ikanna
			location = province:b_pred #Prêd
		}
		modifier = cloak_ancient_ones_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = cloak_ancient_ones
		save_scope_as = epic
	}
}

create_artifact_bones_batou_joche_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = bones_batou_joche_name
		description = bones_batou_joche_description
		type = pedestal
		visuals = bones_batou_joche
		template = bones_batou_joche_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4930.1.1
			recipient = character:lineofjoamtuv1 #Joam-Tuv
			location = province:b_joam #Joam 
		}
		modifier = bones_batou_joche_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = bones_batou_joche
		save_scope_as = epic
	}
}

create_artifact_scroll_of_isildur_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = scroll_of_isildur_name
		description = scroll_of_isildur_description
		type = pedestal
		visuals = scroll_of_isildur
		template = scroll_of_isildur_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4034.1.1
			recipient = character:lineisildur0 #Isildur
			location = province:b_minas_tirith #Minas Tirith
		}
		modifier = scroll_of_isildur_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = scroll_of_isildur
		save_scope_as = epic
	}
}

create_artifact_statue_of_elros_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = statue_of_elros_name
		description = statue_of_elros_description
		type = sculpture
		visuals = statue_of_elros
		template = statue_of_elros_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4133.1.1
			recipient = character:lineofanarion5 #Meneldil
			location = province:b_minas_tirith #Minas Tirith
		}
		modifier = statue_of_elros_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = statue_of_elros
		save_scope_as = epic
	}
}

create_artifact_aldarion_erendis_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = aldarion_erendis_name
		description = aldarion_erendis_description
		type = book
		visuals = aldarion_erendis
		template = aldarion_erendis_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 3892.1.1
			recipient = character:lineofelendil #Elendil
			location = province:c_minas_tirith #Minas Tirith
		}
		modifier = aldarion_erendis_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = aldarion_erendis
		save_scope_as = epic
	}
}

create_artifact_skull_earnur_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = skull_earnur_name
		description = skull_earnur_description
		type = pedestal
		visuals = skull_earnur
		template = skull_earnur_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6083.1.1
			recipient = character:nazgul1 #Witch-King
			location = province:k_morgul #Minas Morgul
		}
		modifier = skull_earnur_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_earnur
		save_scope_as = epic
	}
}

create_artifact_sauron_defying_thunder_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name =  sauron_defying_thunder_name
		description = sauron_defying_thunder_description
		type = wall_big
		visuals = sauron_defying_thunder
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6974.1.1
			recipient = character:lineofsauron #Sauron
			location = province:b_barad_dur #Barad-Dûr
		}
		modifier = sauron_defying_thunder_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sauron_defying_thunder
		save_scope_as = epic
	}
}

create_artifact_the_nine_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = the_nine_name
		description = the_nine_description
		type = pedestal
		visuals = the_nine
		template = the_nine_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 2289.1.1
			recipient = character:lineofsauron #Sauron
			location = province:b_barad_dur #Barad-Dur
		}
		modifier = the_nine_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = the_nine
		save_scope_as = epic
	}
}

create_artifact_vasa_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = vasa_name
		description = vasa_description
		type = mace
		visuals = vasa
		wealth = scope:wealth
		quality = scope:quality
		template = vasa_template
		history = {
			type = created
			date = 6974.1.1
			recipient = character:lineofsauron #Sauron
			location = province:b_barad_dur #Barad-Dur
		}
		modifier = vasa_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = vasa
		save_scope_as = epic
	}
}

create_artifact_ring_saruman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = ring_saruman_name
		description = ring_saruman_description
		type = miscellaneous
		visuals = ring_saruman
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6999.1.1
			recipient = character:6000053 #Saruman
			location = province:c_isengard #Isengard
		}
		modifier = ring_saruman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_saruman
		save_scope_as = epic
	}
}

create_artifact_staff_saruman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = staff_saruman_name
		description = staff_saruman_description
		type = regalia
		visuals = staff_saruman
		wealth = scope:wealth
		quality = scope:quality
		template = staff_saruman_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 5033.1.1
			recipient = character:6000053 #Saruman
			location = province:c_isengard #Isengard
		}
		modifier = staff_saruman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_saruman
		save_scope_as = epic
	}
}

create_artifact_morgul_blade_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = morgul_blade_name
		description = morgul_blade_description
		type = dagger
		visuals = morgul_blade
		wealth = scope:wealth
		quality = scope:quality
		template = morgul_blade_template
		history = {
			type = created
			date = 6083.1.1
			recipient = character:nazgul1 #Witch-King
			location = province:k_morgul #Minas Morgul
		}
		modifier = morgul_blade_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = morgul_blade
		save_scope_as = epic
	}
}

create_artifact_palantir_minasanor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = palantir_minasanor_name
		description = palantir_minasanor_description
		type = pedestal
		visuals = palantir_minasanor
		wealth = scope:wealth
		quality = scope:quality
#		template = palantir_template
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_minasanor
		save_scope_as = epic
	}
}

create_artifact_palantir_orthanc_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = palantir_orthanc_name
		description = palantir_orthanc_description
		type = pedestal
		visuals = palantir_orthanc
		wealth = scope:wealth
		quality = scope:quality
#		template = palantir_template
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_orthanc
		save_scope_as = epic
	}
}

create_artifact_palantir_minasithil_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = palantir_minasithil_name
		description = palantir_minasithil_description
		type = pedestal
		visuals = palantir_minasithil
		wealth = scope:wealth
		quality = scope:quality
#		template = palantir_template
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_minasithil
		save_scope_as = epic
	}
}