# Historical Artifacts Creation #

set_artifact_rarity_common = {
	save_scope_value_as = {
		name = quality
		value = 15
	}
	save_scope_value_as = {
		name = wealth
		value = 15
	}
}

set_artifact_rarity_masterwork = {
	save_scope_value_as = {
		name = quality
		value = 30
	}
	save_scope_value_as = {
		name = wealth
		value = 30
	}
}

set_artifact_rarity_famed = {
	save_scope_value_as = {
		name = quality
		value = 70
	}
	save_scope_value_as = {
		name = wealth
		value = 70
	}
}

set_artifact_rarity_illustrious = {
	save_scope_value_as = {
		name = quality
		value = 100
	}
	save_scope_value_as = {
		name = wealth
		value = 100
	}
}



### RINGS OF POWER ###

## One Ring

create_artifact_one_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = one_ring_name
		description = one_ring_description
		creator = character:lineofsauron #Sauron
		type = miscellaneous
		visuals = one_ring
		wealth = scope:wealth
		quality = scope:quality
		template = one_ring_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2192.1.1
			recipient = character:lineofsauron #Sauron
			location = province:621 #Orodruin
		}
		modifier = one_ring_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = one_ring
		set_variable = ring_of_power
		save_scope_as = epic
	}
}


## Elven Rings

create_artifact_nenya_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = nenya_name
		description = nenya_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = nenya
		wealth = scope:wealth
		quality = scope:quality
		template = elven_ring_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = nenya_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = nenya
		set_variable = elven_ring
		set_variable = ring_of_power
		save_scope_as = epic
	}
}

create_artifact_vilya_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = vilya_name
		description = vilya_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = vilya
		wealth = scope:wealth
		quality = scope:quality
		template = elven_ring_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = vilya_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = vilya
		set_variable = elven_ring
		set_variable = ring_of_power
		save_scope_as = epic
		equip_artifact_to_owner = yes
	}
}

create_artifact_narya_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = narya_name
		description = narya_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = narya
		wealth = scope:wealth
		quality = scope:quality
		template = elven_ring_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = narya_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = narya
		set_variable = elven_ring
		set_variable = ring_of_power
		save_scope_as = epic
		equip_artifact_to_owner = yes
	}
}


## Rings of Men

create_artifact_ring_of_men_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ring_of_men_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = ring_of_men
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_witchking_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = witchking_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = witchking_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_khamul_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = khamul_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = khamul_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_goldenking_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = goldenking_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = goldenking_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_yi_indur_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = yi_indur_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = yi_indur_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_blindsorceror_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = blindsorceror_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = blindsorceror_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_mauhoshat_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = mauhoshat_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = mauhoshat_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_dendra_dwar_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dendra_dwar_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = dendra_dwar_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_ren_iey_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ren_iey_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = ren_iey_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_uvatha_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = uvatha_ring_name
		description = ring_of_men_description
		creator = character:linefinwe18  #Celebrimbor
		type = miscellaneous
		visuals = uvatha_ring
		wealth = scope:wealth
		quality = scope:quality
		template = ring_of_men_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 2182.1.1
			recipient = character:linefinwe18  #Celebrimbor
			location = province:b_ost_in_edhil #Ost-in-Edhil
		}
		modifier = ring_of_men_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_of_men
		set_variable = ring_of_power
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

### HISTORICAL ARTIFACTS ###


## Wizards ##

create_artifact_ring_saruman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = ring_saruman_name
		description = ring_saruman_description
		creator = character:lineofsaruman #Saruman
		type = miscellaneous
		visuals = ring
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6999.1.1
			recipient = character:lineofsaruman #Saruman
			location = province:20 #Orthanc
		}
		modifier = ring_saruman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_saruman
		save_scope_as = epic
	}
}

create_artifact_staff_saruman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = staff_saruman_name
		description = staff_saruman_description
		creator = character:lineofsaruman #Saruman
		type = regalia
		visuals = staff_saruman
		wealth = scope:wealth
		quality = scope:quality
		template = wizard_staff_template
		history = {
			type = created
			date = 5033.1.1
			recipient = character:lineofsaruman #Saruman
			location = province:3901 #Valimar
		}
		modifier = staff_saruman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_saruman
		set_variable = wizard_staff
		save_scope_as = epic
		equip_artifact_to_owner = yes
	}
}

create_artifact_palantir_orthanc_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = palantir_orthanc_name
		description = palantir_orthanc_description
		type = pedestal
		visuals = palantir
		creator = character:linefinwe2 #Fëanor
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #Tirion
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_orthanc
		set_variable = palantir
		save_scope_as = epic
		add_artifact_history = {
			type = inherited
			date = 6792.8.30
			recipient = character:lineofsaruman
		}
	}
}

create_artifact_staff_gandalf_the_grey_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = staff_gandalf_the_grey_name
		description = staff_gandalf_the_grey_description
		type = regalia
		visuals = staff_gandalf_the_grey
		wealth = scope:wealth
		quality = scope:quality
		template = wizard_staff_template
		history = {
			type = created
			date = 5033.1.1
			recipient = character:lineofgandalf #Gandalf
			location = province:3901 #Valimar
		}
		modifier = staff_gandalf_the_grey_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_gandalf_the_grey
		set_variable = wizard_staff
		save_scope_as = epic
		equip_artifact_to_owner = yes
	}
}

create_artifact_glamdring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = glamdring_name
		description = glamdring_description
		type = sword
		visuals = glamdring
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 118.1.1
			recipient = character:linefinwe21 #Turgon
		}
		modifier = glamdring_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = glamdring
		set_variable = elven
		set_variable = relic
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_staff_radagast_the_brown_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = staff_radagast_the_brown_name
		description = staff_radagast_the_brown_description
		type = regalia
		visuals = staff_radagast_the_brown
		wealth = scope:wealth
		quality = scope:quality
		template = wizard_staff_template
		history = {
			type = created
			date = 5033.1.1
			recipient = character:lineofradagast #Radagast
			location = province:3901 #Valimar
		}
		modifier = staff_radagast_the_brown_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_radagast_the_brown
		set_variable = wizard_staff
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}


## Elven ##

create_artifact_galadriel_mirror_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = galadriel_mirror_name
		description = galadriel_mirror_description
		creator = character:linefinwe36 #Galadriel
		type = pedestal
		visuals = galadriel_mirror
		template = galadriel_mirror_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6014.1.1
			recipient = character:linefinwe36 #Galadriel
			location = province:3108 #Caras Galadhon
		}
		modifier = galadriel_mirror_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = galadriel_mirror
		save_scope_as = epic
	}
}

create_artifact_elessar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = elessar_name
		description = elessar_description
		type = miscellaneous
		visuals = elessar
		template = elessar_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 405.1.1
			recipient = character:linefinwe25 #Idril Celebrindal
		}
		modifier = elessar_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = elessar
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_narn_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = narn_name
		description = narn_description
		type = book
		visuals = narn
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 502.1.1
			recipient = character:lineofelwe3 #Elu Thingol
		}
		modifier = narn_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = narn
		save_scope_as = epic
	}
}

create_artifact_leithian_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = leithian_name
		description = leithian_description
		type = book
		visuals = leithian
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 453.1.1
			recipient = character:lineofelwe3 #Elu Thingol
		}
		modifier = leithian_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = leithian
		save_scope_as = epic
	}
}

create_artifact_aranthel_and_ungoldagnir_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = aranthel_and_ungoldagnir_name
		description = aranthel_and_ungoldagnir_description
		type = sword
		visuals = aranthel_and_ungoldagnir
		template = aranthel_and_ungoldagnir_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6014.1.1
			recipient = character:lineoforopher3 #Thranduil
			location = province:3108 #Caras Galadhon
		}
		modifier = aranthel_and_ungoldagnir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = aranthel_and_ungoldagnir
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_crown_woodland_realm_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = crown_woodland_realm_name
		description = crown_woodland_realm_description
		type = helmet
		visuals = crown_woodland_realm
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:lineoforopher3 #Thranduil
			location = province:3216 #Aradhrynd
		}
		modifier = crown_woodland_realm_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = artifact_succession_title
			value = title:k_lasgalen
		}
		set_variable = relic
		set_variable = elven
		set_variable = crown_woodland_realm
		save_scope_as = epic
	}
}

create_artifact_legolas_childhood_sledge_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = legolas_childhood_sledge_name
		description = legolas_childhood_sledge_description
		type = wall_small
		visuals = wall_shield
		visuals_source = title:e_greenwood
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4830.10.4
			recipient = character:lineoforopher6 #Legolas
			location = province:3216 #Aradhrynd
		}
		modifier = legolas_childhood_sledge_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = legolas_childhood_sledge
		save_scope_as = epic
	}
}

create_artifact_hadhafang_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = hadhafang_name
		description = hadhafang_description
		type = sword
		visuals = hadhafang
		template = hadhafang_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 505.1.1
			recipient = character:linefinwe25 #Idril
		}
		modifier = hadhafang_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = hadhafang
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
		equip_artifact_to_owner = yes
	}
}

create_artifact_silver_harp_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = silver_harp_name
		description = silver_harp_description
		type = pedestal
		visuals = silver_harp
		template = silver_harp_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 110.1.1
			recipient = character:linefinwe11  #Maglor
			location = province:3900 #Tirion
		}
		modifier = silver_harp_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = silver_harp
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_silmaril_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = silmaril_name
		description = silmaril_description
		creator = character:linefinwe2 #Fëanor
		type = helmet
		visuals = silmaril
		template = silmaril_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1.1.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #tirion
		}
		modifier = silmaril_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = silmaril
		set_variable = elven
		set_variable = relic
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_athrad_gillith_harp_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = athrad_gillith_harp_name
		description = athrad_gillith_harp_description
		type = miscellaneous
		visuals = athrad_gillith_harp
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 2007.1.1
			recipient = character:lineoflanthir1 #Lanthir
			location = province:3911 #Caras Torn
		}
		modifier = athrad_gillith_harp_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = athrad_gillith_harp
		set_variable = elven
		save_scope_as = epic
	}
}

## Dwarven ##

create_artifact_arkenstone_effect = {
    # Get the character the artifact is being made for.
    $OWNER$ = { save_scope_as = owner }
    # Not really used, but if we don't set the scopes we get errors in the feature selection
    set_artifact_rarity_illustrious = yes

    # Create the artifact
    create_artifact = {
        name = arkenstone_name
        description = arkenstone_description
        type = pedestal
        visuals = arkenstone
        wealth = scope:wealth
        quality = scope:quality
		template = arkenstone_template
        history = {
            type = created
            date = 6032.1.1
            recipient = character:lineofdurin74 #Thráin I, King under the Mountain aka King of Erebor
            location = province:4408 #Throne of Erebor
        }
        modifier = arkenstone_modifier
        save_scope_as = newly_created_artifact
        decaying = no
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        # set_variable = arkenstone # Currently unused variable, can uncomment once used
		set_variable = relic
        save_scope_as = epic
    }
}

create_artifact_barazanthual_effect = { # Dáin's Red Axe
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = barazanthual_name
		description = barazanthual_description
		type = axe
		visuals = barazanthual
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 118.1.1
			recipient = character:lineofdurin90 #Dáin
		}
		modifier = barazanthual_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = barazanthual # Currently unused variable, can uncomment once used
		# set_variable = dwarven # Currently unused variable, can uncomment once used
		set_variable = relic
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_orcrist_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = orcrist_name
		description = orcrist_description
		type = sword
		visuals = orcrist
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 118.1.1
			recipient = character:linefinwe21 #Turgon
		}
		modifier = orcrist_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = orcrist
		set_variable = elven
		set_variable = relic
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

## Mordor & Nazgûl ##

create_artifact_skull_earnur_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = skull_earnur_name
		description = skull_earnur_description
		creator = character:nazgul1 #Witch-King
		type = pedestal
		visuals = skull_earnur
		template = skull_earnur_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 5861.1.1
			recipient = character:lineofanarion51 #Earnur
			location = province:226 #Minas Morgul
		}
		modifier = skull_earnur_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_earnur
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_sauron_defying_thunder_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name =  sauron_defying_thunder_name
		description = sauron_defying_thunder_description
		type = wall_big
		visuals = sauron_defying_thunder
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6974.1.1
			recipient = character:lineofsauron #Sauron
			location = province:620 #Barad-Dûr
		}
		modifier = sauron_defying_thunder_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sauron_defying_thunder
		save_scope_as = epic
	}
}

create_artifact_vasa_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = vasa_name
		description = vasa_description
		type = mace
		visuals = vasa
		wealth = scope:wealth
		quality = scope:quality
		template = vasa_template
		history = {
			type = created
			date = 6974.1.1
			recipient = character:lineofsauron #Sauron
			location = province:620 #Barad-Dur
		}
		modifier = vasa_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = vasa
		save_scope_as = epic
	}
}

create_artifact_morgul_blade_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = morgul_blade_name
		description = morgul_blade_description
		type = dagger
		visuals = morgul_blade
		wealth = scope:wealth
		quality = scope:quality
		template = morgul_blade_template
		history = {
			type = created
			date = 6083.1.1
			recipient = character:nazgul1 #Witch-King
			location = province:226 #Minas Morgul
		}
		modifier = morgul_blade_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = morgul_blade
		save_scope_as = epic
	}
}

create_artifact_helm_witchking_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = helm_witchking_name
		description = helm_witchking_description
		type = helmet
		visuals = helm_witchking
		wealth = scope:wealth
		quality = scope:quality
		template = helm_witchking_template
		history = {
			type = created
			date = 6083.1.1
			recipient = character:nazgul1 #Witch-King
			location = province:226 #Minas Morgul
		}
		modifier = helm_witchking_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = helm_witchking
		save_scope_as = epic
	}
}

create_artifact_helm_khamul_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = helm_khamul_name
		description = helm_khamul_description
		type = helmet
		visuals = helm_khamul
		wealth = scope:wealth
		quality = scope:quality
		template = helm_khamul_template
		history = {
			type = created
			date = 2951.1.1
			recipient = character:nazgul2 #Khamul
			location = province:3338 #Dol Guldur
		}
		modifier = helm_khamul_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = helm_khamul
		save_scope_as = epic
	}
}

create_artifact_scythe_of_khamul_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = scythe_of_khamul_name
		description = scythe_of_khamul_description
		type = regalia
		visuals = scythe_of_khamul
		wealth = scope:wealth
		quality = scope:quality
		template = scythe_of_khamul_template
		modifier = scythe_of_khamul_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = scythe_of_khamul
		save_scope_as = epic
	}
}

create_artifact_mask_goldenking_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = mask_goldenking_name
		description = mask_goldenking_description
		type = helmet
		visuals = mask_goldenking
		wealth = scope:wealth
		quality = scope:quality
		template = mask_goldenking_template
		history = {
			type = created
			date = 2590.1.1
			recipient = character:goldenking1 #Golden King
			location = province:2250 #Abrakhân
		}
		modifier = mask_goldenking_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mask_goldenking
		save_scope_as = epic
	}
}

create_artifact_hame_of_the_vampire_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = hame_of_the_vampire_name
		description = hame_of_the_vampire_description
		type = helmet
		visuals = hame_of_the_vampire
		wealth = scope:wealth
		quality = scope:quality
		template = hame_of_the_vampire_template
		history = {
			type = created
#			date = 459.1.1 # Vampires at Tol-in-Gaurhoth! This hame is visually a giant bat skin.
			date = 7005.11.26
			recipient = character:lineofdale63 # Valdis
			location = province:3621 # Orlmond
		}
		modifier = hame_of_the_vampire_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = hame_of_the_vampire
		save_scope_as = epic
	}
}

create_artifact_palantir_minasithil_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = palantir_minasithil_name
		description = palantir_minasithil_description
		creator = character:linefinwe2 #Fëanor
		type = pedestal
		visuals = palantir
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1.1.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #Tirion
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_minasithil
		set_variable = palantir
		save_scope_as = epic
	}
}


## Mountain Orc ##

create_artifact_ulukai_effect = {
    # Get the character the artifact is being made for.
    $OWNER$ = { save_scope_as = owner }
    # Not really used, but if we don't set the scopes we get errors in the feature selection
    set_artifact_rarity_illustrious = yes

    # Create the artifact
    create_artifact = {
        name = ulukai_name
        description = ulukai_description
        type = pedestal
        visuals = ulukai
        wealth = scope:wealth
        quality = scope:quality
		template = ulukai_template
        history = {
            type = created
            date = 510.1.1
            recipient = character:lineofazog6 #Gorgol, Lord of Gundabad
            location = province:3210 #Gundabad
        }
        modifier = ulukai_modifier
        save_scope_as = newly_created_artifact
        decaying = no
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = ulukai
		set_variable = relic
        save_scope_as = epic
    }
}


## Gondor ##

create_artifact_anduril_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = anduril_name
		description = anduril_description
		creator = character:linefinwe27 #Elrond
		type = sword
		visuals = anduril
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 7032.1.1
			recipient = character:lineisildur42 #Aragorn
			location = province:199 #Minas Tirith
		}
		modifier = anduril_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = anduril
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_crown_of_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = crown_of_gondor_name
		description = crown_of_gondor_description
		type = helmet
		visuals = crown_of_gondor
		wealth = scope:wealth
		quality = scope:quality
		template = crown_of_gondor_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 5200.1.1
			recipient = character:lineofanarion21 # Atanatar II Alcarin
			location = province:202 #Osgiliath
		}
		modifier = crown_of_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = artifact_succession_title
			value = title:e_gondor
		}
		set_variable = crown_of_gondor
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_throne_of_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = throne_of_gondor_name
		description = throne_of_gondor_description
		type = throne_special
		visuals = throne_of_gondor
		wealth = scope:wealth
		quality = scope:quality
		template = throne_of_gondor_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3912.1.1
			recipient = character:lineofanarion1 # Anarion
			location = province:202 #Osgiliath
		}
		modifier = throne_of_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_of_gondor
		set_variable = {
			name = artifact_succession_title
			value = title:e_gondor
		}
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_black_chair_stewards_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = black_chair_stewards_name
		description = black_chair_stewards_description
		type = throne_special
		visuals = black_chair_stewards
		wealth = scope:wealth
		quality = scope:quality
		template = black_chair_stewards_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 6052.1.1
			recipient = character:linesteward4 #Mardil Voronwë
			location = province:199 #Minas Tirith
		}
		modifier = black_chair_stewards_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_chair_stewards
		set_variable = {
			name = artifact_succession_title
			value = title:e_gondor_steward
		}
		save_scope_as = epic
	}
}

create_artifact_black_chair_replica_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = black_chair_stewards_name
		description = black_chair_replica_description
		type = throne_special
		visuals = black_chair_replica
		wealth = scope:wealth
		quality = scope:quality
		template = black_chair_stewards_template # Template is where you set restrictions on usability!
		modifier = black_chair_stewards_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_chair_replica
		set_variable = {
			name = artifact_succession_title
			value = title:k_gondor_steward
		}
		save_scope_as = epic
	}
}

create_artifact_steward_rod_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = stewards_rod
		description = stewards_rod_description
		type = regalia
		visuals = stewards_rod
		wealth = scope:wealth
		quality = scope:quality
		template = steward_rod_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 6052.1.1
			recipient = character:linesteward4 #Mardil Voronwë
			location = province:199 #Minas Tirith
		}
		modifier = steward_rod_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = artifact_succession_title
			value = title:e_gondor_steward
		}
		set_variable = stewards_rod
		save_scope_as = epic
	}
}

create_artifact_mithrellas_talisman_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  mithrellas_talisman_name
		description = mithrellas_talisman_description
		type = necklace
		visuals = mithrellas_talisman
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6100.1.1
			recipient = character:dolamroth2 #Imrazôr
			location = province:315 #Dol Amroth
		}
		modifier = mithrellas_talisman_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mithrellas_talisman
		save_scope_as = epic
	}
}

create_artifact_lindalf_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = lindalf_name
		description = lindalf_description
		type = spear
		visuals = lindalf
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6110.1.1
			recipient = character:dolamroth3 # Galador
			location = province:315 #Dol Amroth
		}
		modifier = lindalf_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = lindalf
		save_scope_as = epic
	}
}

create_artifact_laegrist_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = laegrist_name
		description = laegrist_description
		type = sword
		visuals = laegrist
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6107.1.1
			recipient = character:dolamroth5
			location = province:315 #Dol Amroth
		}
		modifier = laegrist_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = laegrist
		save_scope_as = epic
	}
}

create_artifact_horn_gondor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = horn_gondor_name
		description = horn_gondor_description
		type = miscellaneous
		template = horn_gondor_template
		visuals = horn_gondor
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6000.1.1
			recipient = character:linesteward3 # Vorondil the Hunter
			location = province:202 # Osgiliath
		}
		modifier = horn_gondor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = horn_gondor
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_ring_barahir_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ring_barahir_name
		description = ring_barahir_description
		type = miscellaneous
		template = ring_barahir_template
		visuals = ring_barahir
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1.1.1
			recipient = character:linefinwe6 # Finarfin
			location = province:3900 # Tirion
		}
		modifier = ring_barahir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_barahir
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_palantir_minasanor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = palantir_minasanor_name
		description = palantir_minasanor_description
		creator = character:linefinwe2 #Fëanor
		type = pedestal
		visuals = palantir
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1.1.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #Tirion
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_minasanor
		set_variable = palantir
		save_scope_as = epic
	}
}


## Rohan & Dunland ##

create_artifact_herugrim_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = herugrim_name
		description = herugrim_description
		type = sword
		visuals = herugrim
		template = rohan_royal_weapon_artifact
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6792.1.1
			recipient = character:6000010 #Fréaláf
			location = province:1 #Edoras
		}
		modifier = herugrim_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = herugrim
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_guthwine_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = guthwine_name
		description = guthwine_description
		type = sword
		visuals = guthwine
		template = rohan_royal_weapon_artifact
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6600.1.1
			recipient = character:eofor #Prince Eofor
			location = province:1 #Edoras
		}
		modifier = guthwine_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = guthwine
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_tapestry_ride_eorl_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  tapestry_ride_eorl_name
		description = tapestry_ride_eorl_description
		type = wall_big
		visuals = tapestry_ride_eorl
		wealth = scope:wealth
		quality = scope:quality
		template = tapestry_ride_eorl_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3580.1.1
			recipient = character:6000001 #Brego
			location = province:1 #Edoras
		}
		modifier = tapestry_ride_eorl_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = tapestry_ride_eorl
		save_scope_as = epic
	}
}

create_artifact_horn_mark_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = horn_mark_name
		description = horn_mark_description
		type = miscellaneous
		visuals = horn_mark
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6033.11.11
			recipient = character:linefram6 # Fram the Dragonslayer
			location = province:3171 # Framsburg
		}
		modifier = horn_mark_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = horn_mark
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_wulf_fang_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = wulf_fang_name
		description = wulf_fang_description
		type = sword
		visuals = wulf_fang
		template = wulf_fang_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6792.1.17
			recipient = character:lineoffreca3 #King Wulf
			location = province:1 #Edoras
		}
		modifier = wulf_fang_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = wulf_fang
		save_scope_as = epic
	}
}


## Bellakar ##

create_artifact_branch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  branch_name
		description = branch_description
		type = pedestal
		visuals = branch
		wealth = scope:wealth
		quality = scope:quality
		template = branch_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 3913.1.1
			recipient = character:lineofisilithor1 #Isilithôr
			location = province:1644 #Korlea
		}
		modifier = branch_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = branch
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_niluzagar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = niluzagar_name
		description = niluzagar_description
		type = sword
		visuals = niluzagar
		template = niluzagar_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 3592.1.1
			recipient = character:lineoftumakveh0 #Zagarthôr
			location = province:1791 #Nilulonde
		}
		modifier = niluzagar_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = niluzagar
		save_scope_as = epic
	}
}

create_artifact_book_baitha_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name =  book_baitha_name
		description = book_baitha_description
		type = book
		visuals = book
		wealth = scope:wealth
		quality = scope:quality
		template = book_baitha_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 4960.1.1
			recipient = character:lineofthonuzir1 #Thonuzir of Hazaj Tollin
			location = province:1542 #Hazaj Tollin
		}
		modifier = book_baitha_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = book_baitha
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_ring_macilion_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = ring_macilion_name
		description = ring_macilion_description
		type = miscellaneous
		visuals = ring
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6999.1.1
			recipient = character:lineofelendil #Elendil
			location = province:4708 #Annuminas
		}
		modifier = ring_macilion_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = ring_macilion
		save_scope_as = epic
	}
}


## Near Harad, Umbar & Dune Sea ##

create_artifact_throne_of_castaher_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = throne_of_castaher_name
		description = throne_of_castaher_description
		type = throne_special
		visuals = throne
		wealth = scope:wealth
		quality = scope:quality
		template = throne_of_castaher_template # Template is where you set restrictions on usability!
		history = {
			type = created
			date = 5481.1.1
			recipient = character:lineofcastamir2 # Castaher
			location = province:819 #Umbar
		}
		modifier = throne_of_castaher_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_of_castaher
		set_variable = {
			name = artifact_succession_title
			value = title:k_umbar
		}
		save_scope_as = epic
	}
}

create_artifact_spear_sealord_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = spear_sealord_name
		description = spear_sealord_description
		type = spear
		visuals = spear_sealord
		wealth = scope:wealth
		quality = scope:quality
		template = spear_sealord_template # Template is where you set restrictions on usability!
		# history = {
			# type = created
			# date = 5481.1.1
			# recipient = character:lineofcastamir2 # Castaher
			# location = province:819 #Umbar
		# }
		modifier = spear_sealord_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = spear_sealord
		save_scope_as = epic
	}
}

create_artifact_serpent_headdress_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = serpent_headdress_name
		description = serpent_headdress_description
		type = helmet
		visuals = serpent_headdress
		wealth = scope:wealth
		quality = scope:quality
		template = serpent_headdress_template
		history = {
			type = created
			date = 6990.1.1
			recipient = character:lineofafalku15 #Sûladan
			location = province:880 #Amrûn
		}
		modifier = serpent_headdress_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = serpent_headdress
		save_scope_as = epic
	}
}

create_artifact_scorpion_sting_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = scorpion_sting_name
		description = scorpion_sting_description
		type = spear
		visuals = scorpion_sting
		#template = scorpion_sting_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6990.1.1
			recipient = character:lineofezarkia18 #Ruadômirh
			location = province:2881 #Mazharath
		}
		modifier = scorpion_sting_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = scorpion_sting
		save_scope_as = epic
	}
}

create_artifact_naluzor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = naluzor_name
		description = naluzor_description
		type = regalia
		visuals = naluzor
		#template = naluzor_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 7000.1.1
			recipient = character:syarrhul1 #Black Vizier
			location = province:2250 #Abrakhân
		}
		modifier = naluzor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = naluzor
		save_scope_as = epic
	}
}


## Tedjin ##

create_artifact_bones_batou_joche_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = bones_batou_joche_name
		description = bones_batou_joche_description
		type = pedestal
		visuals = bones_batou_joche
		template = bones_batou_joche_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4930.1.1
			recipient = character:lineofjoamtuv1 #Joam-Tuv
			location = province:1578 #Joam 
		}
		modifier = bones_batou_joche_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = bones_batou_joche
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_shield_malador_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = shield_malador_name
		description = shield_malador_description
		type = wall_small
		visuals = shield_malador
		#template = shield_malador_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6788.1.1
			recipient = character:lineofthezij31 #Malador
			location = province:1502 #Kaneja
		}
		modifier = shield_malador_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = shield_malador
		set_variable = relic
		save_scope_as = epic
	}
}


## Bozisha & Storm Host ##

create_artifact_storms_wrath_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = storms_wrath_name
		description = storms_wrath_description
		type = sword
		visuals = storms_wrath
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4600.1.1
			recipient = character:lineofdulgu44 #Arnakhor
			location = province:1977 #Khorsaj
		}
		modifier = storms_wrath_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = storms_wrath
		save_scope_as = epic
	}
}

create_artifact_cloak_ancient_ones_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = cloak_ancient_ones_name
		description = cloak_ancient_ones_description
		type = regalia
		visuals = cloak_ancient_ones
		template = cloak_ancient_ones_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 7026.6.22
			recipient = character:onikanna #Ôn-Ikanna
			location = province:2142 #Prêd
		}
		modifier = cloak_ancient_ones_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = cloak_ancient_ones
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_silver_sword_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = silver_sword_name
		description = silver_sword_description
		type = pedestal
		visuals = silver_sword
		wealth = scope:wealth
		quality = scope:quality
		template = silver_sword_template
		modifier = silver_sword_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = silver_sword
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_heart_vatra_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = heart_vatra_name
		description = heart_vatra_description
		type = pedestal
		visuals = diamond
		wealth = scope:wealth
		quality = scope:quality
		template = heart_vatra_template
		history = {
			type = created
			date = 6900.1.1
			recipient = character:solardynasty19 #Vâtra Acolu
			location = province:2093 #Bôzisha-Dâr
		}
		modifier = heart_vatra_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = heart_vatra
		set_variable = relic
		save_scope_as = epic
	}
}


## Rhovanion Artifacts ##

create_artifact_skull_bolg_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = skull_bolg_name
		description = skull_bolg_description
		creator = character:lineofbeorn1 #Beorn
		type = pedestal
		visuals = skull_bolg
		#template = skull_bolg_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6974.1.1
			recipient = character:lineofbeorn1 #Beorn
			location = province:3158 #Beornsele
		}
		modifier = skull_bolg_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_bolg
		save_scope_as = epic
	}
}

create_artifact_telperion_chalice_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = telperion_chalice_name
		description = telperion_chalice_description
		type = pedestal
		visuals = telperion_chalice
		template = twin_chalice_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:linefinwe41 #Gil-Galad
			#location = province: #Mithlond
		}
		modifier = twin_chalice_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = telperion_chalice
		set_variable = {
			name = artifact_succession_title
			value = title:k_dorwinion
		}
		set_variable = relic
		save_scope_as = epic
	
	}
}	

create_artifact_bard_bow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = bard_bow_name
		description = bard_bow_description
		template = bard_bow_template
		type = bow
		visuals = bard_bow
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:lineofdale46 #Bard
			location = province:3395 #Esgaroth
			
		}
		modifier = bard_bow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = bard_bow
		set_variable = {
			name = artifact_succession_title
			value = title:k_dale
		}
		set_variable = relic
		save_scope_as = epic
	
	}
}


## Rhûn and Khand ##

create_artifact_throne_ovatha_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = throne_ovatha_name
		description = throne_ovatha_description
		type = throne_special
		visuals = throne
		template = throne_ovatha_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6950.1.1
			recipient = character:lineofkeiseimu2 #Ôvatha IX
			location = province:2446 #Starlustsa Khand
			
		}
		modifier = throne_ovatha_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = throne_ovatha
		set_variable = {
			name = artifact_succession_title
			value = title:e_khand
		}
		set_variable = relic
		save_scope_as = epic
	
	}
}

create_artifact_crown_bountig_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = crown_bountig_name
		description = crown_bountig_description
		type = helmet
		visuals = crown_bountig
		template = crown_bountig_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6799.8.29
			recipient = character:bountigmedlokan #Bountig
			location = province:3635 #Mistrand
			
		}
		modifier = crown_bountig_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crown_bountig
		set_variable = {
			name = artifact_succession_title
			value = title:e_golden_realm_rhun
		}
		set_variable = relic
		save_scope_as = epic
	
	}
}
	

### ADVENTURE ARTIFACTS ###


## Adventure Common ##

# Numenorean common #

create_artifact_numenorean_figurine_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = numenorean_figurine_name
		description = numenorean_figurine_description
		type = pedestal
		visuals = numenorean_figurine
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = numenorean_figurine_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = numenorean_figurine
		save_scope_as = epic
	}
}

create_artifact_numenorean_helm_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = numenorean_helm_name
		description = numenorean_helm_description
		type = pedestal
		visuals = numenorean_helm
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = numenorean_helm_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = numenorean_helm
		save_scope_as = epic
	}
}

create_artifact_numenorean_shield_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = numenorean_shield_name
		description = numenorean_shield_description
		type = wall_small
		visuals = numenorean_shield
		visuals_source = title:e_numenor
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = numenorean_shield_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = numenorean_shield
		save_scope_as = epic
	}
}

create_artifact_numenorean_steelbow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = numenorean_steelbow_name
		description = numenorean_steelbow_description
		type = pedestal
		visuals = numenorean_steelbow
		wealth = scope:wealth
		quality = scope:quality
		modifier = numenorean_steelbow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = numenorean_steelbow
		save_scope_as = epic
	}
}

create_artifact_white_tree_branch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = white_tree_branch_name
		description = white_tree_branch_description
		type = pedestal
		visuals = white_tree_branch
		template = gondor_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = white_tree_branch_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = white_tree_branch
		set_variable = relic
		save_scope_as = epic
	}
}

# Northron common #

create_artifact_northron_horn_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = northron_horn_name
		description = northron_horn_description
		type = pedestal
		visuals = northron_horn
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = northron_horn_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = northron_horn
		save_scope_as = epic
	}
}

create_artifact_northron_fibula_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = northron_fibula_name
		description = northron_fibula_description
		type = miscellaneous
		visuals = northron_fibula
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = northron_fibula_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = northron_fibula
		save_scope_as = epic
	}
}

create_artifact_mundburgian_shield_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = mundburgian_shield_name
		description = mundburgian_shield_description
		type = miscellaneous
		visuals = mundburgian_shield
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = mundburgian_shield_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mundburgian_shield
		save_scope_as = epic
	}
}

# Elven common #

create_artifact_elven_rope_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = elven_rope_name
		description = elven_rope_description
		type = miscellaneous
		visuals = elven_rope
		template = elven_relic_misc_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = elven_rope_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = elven_rope
		set_variable = elven
		save_scope_as = epic
	}
}

create_artifact_elven_brooch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = elven_brooch_name
		description = elven_brooch_description
		type = miscellaneous
		visuals = elven_brooch
		template = elven_relic_misc_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = elven_brooch_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = elven_brooch
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_lembas_bread_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = lembas_bread_name
		description = lembas_bread_description
		type = pedestal
		visuals = lembas_bread
		template = elven_relic_pedestal_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = lembas_bread_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = lembas_bread
		save_scope_as = epic
	}
}

create_artifact_elven_cape_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = elven_cape_name
		description = elven_cape_description
		type = miscellaneous
		visuals = elven_cape
		template = elven_relic_misc_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = elven_cape_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = elven_cape
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_miruvor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = miruvor_name
		description = miruvor_description
		type = pedestal
		visuals = miruvor
		template = elven_relic_pedestal_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = miruvor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = miruvor
		set_variable = elven
		save_scope_as = epic
	}
}

# Haradrim common #

create_artifact_mumak_rider_insignia_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = mumak_rider_insignia_name
		description = mumak_rider_insignia_description
		type = miscellaneous
		visuals = mumak_rider_insignia
		template = haradrim_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = mumak_rider_insignia_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mumak_rider_insignia
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_emblem_of_ladnoca_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = emblem_of_ladnoca_name
		description = emblem_of_ladnoca_description
		type = pedestal
		visuals = emblem_of_ladnoca
		template = haradrim_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = emblem_of_ladnoca_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = emblem_of_ladnoca
		set_variable = relic
		save_scope_as = epic
	}
}

# Orcish common #

create_artifact_flask_of_grog_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = flask_of_grog_name
		description = flask_of_grog_description
		type = pedestal
		visuals = flask_of_grog
		template = orc_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = flask_of_grog_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = flask_of_grog
		save_scope_as = epic
	}
}

create_artifact_orc_whip_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = orc_whip_name
		description = orc_whip_description
		type = pedestal
		visuals = orc_whip
		template = orc_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = orc_whip_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = orc_whip
		save_scope_as = epic
	}
}

# Dunlending common #

create_artifact_dunlending_torc_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dunlending_torc_name
		description = dunlending_torc_description
		type = pedestal
		visuals = dunlending_torc
		#template = dunlending_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = dunlending_torc_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dunlending_torc
		set_variable = relic
		save_scope_as = epic
	}
}

# Dorwinrim common #

create_artifact_dorwinrim_chalice_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dorwinrim_chalice_name
		description = dorwinrim_chalice_description
		type = pedestal
		visuals = dorwinrim_chalice
		template = dorwinrim_relic_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = dorwinrim_chalice_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dorwinrim_chalice
		set_variable = relic
		save_scope_as = epic
	}
}

# Rhûnic common #

create_artifact_rhunic_saddle_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = rhunic_saddle_name
		description = rhunic_saddle_description
		type = miscellaneous
		visuals = rhunic_saddle
		wealth = scope:wealth
		quality = scope:quality
		modifier = rhunic_saddle_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = rhunic_saddle
		save_scope_as = epic
	}
}

create_artifact_kine_drinking_horn_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = kine_drinking_horn_name
		description = kine_drinking_horn_description
		type = pedestal
		visuals = kine_drinking_horn
		wealth = scope:wealth
		quality = scope:quality
		modifier = kine_drinking_horn_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = kine_drinking_horn
		set_variable = relic
		save_scope_as = epic
	}
}


## Adventure Uniques ##

create_artifact_dragon_helm_of_dor_lomin_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dragon_helm_of_dor_lomin_name
		description = dragon_helm_of_dor_lomin_description
		type = helmet
		visuals = dragon_helm_of_dor_lomin
		template = dragon_helm_of_dor_lomin_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 262.1.1
			recipient = character:linefinwe10 #Maedhros
		}
		modifier = dragon_helm_of_dor_lomin_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dragon_helm_of_dor_lomin
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_dramborleg_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dramborleg_name
		description = dramborleg_description
		type = axe
		visuals = dramborleg
		template = dramborleg_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 500.1.1
			recipient = character:lineofhador10 #Tuor
		}
		modifier = dramborleg_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dramborleg
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_anguirel_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = anguirel_name
		description = anguirel_description
		type = sword
		visuals = anguirel
		template = anguirel_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 400.1.1
			recipient = character:linefinwe31 #Eöl
		}
		modifier = anguirel_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = anguirel
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_anarion_helm_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = anarion_helm_name
		description = anarion_helm_description
		type = pedestal
		visuals = anarion_helm
		template = anarion_helm_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 3830.1.1
			recipient = character:lineofanarion1 #Anarion
			location = province:199 #Minas Tirith
		}
		modifier = anarion_helm_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = anarion_helm
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_black_arrow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = black_arrow_name
		description = black_arrow_description
		type = pedestal
		visuals = black_arrow
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6785.1.1
			recipient = character:lineofdale36 #Girion
			location = province:3390 #Dale
			
		}
		modifier = black_arrow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_arrow
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_smaug_scale_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = smaug_scale_name
		description = smaug_scale_description
		type = pedestal
		visuals = smaug_scale
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = smaug_scale_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = smaug_scale
		save_scope_as = epic
	}
}

create_artifact_smaug_skull_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = smaug_skull_name
		description = smaug_skull_description
		type = chest
		visuals = smaug_skull
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = smaug_skull_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = smaug_skull
		save_scope_as = epic
	}
}

create_artifact_amroths_belt_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = amroths_belt_name
		description = amroths_belt_description
		type = pedestal
		visuals = amroths_belt
		template = amroths_belt_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:lineofamdir2 #Amdir
			location = province:3108 #Caras Galadhon
		}
		modifier = amroths_belt_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = amroths_belt
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_nimrodel_gem_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = nimrodel_gem_name
		description = nimrodel_gem_description
		type = pedestal
		visuals = nimrodel_gem
		template = nimrodel_gem_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:lineofamdir2 #Amdir
			location = province:3108 #Caras Galadhon
		}
		modifier = nimrodel_gem_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = nimrodel_gem
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_laurelin_chalice_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = laurelin_chalice_name
		description = laurelin_chalice_description
		type = pedestal
		visuals = laurelin_chalice
		template = twin_chalice_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4026.1.1
			recipient = character:linefinwe41 #Gil-Galad
			#location = province:c_mithlond #Mithlond	
		}
		modifier = twin_chalice_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = laurelin_chalice
		set_variable = elven
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_sword_joam_tuv_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = sword_joam_tuv_name
		description = sword_joam_tuv_description
		type = pedestal
		visuals = sword_joam_tuv
		template = sword_joam_tuv_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4900.1.1
			recipient = character:lineofjoamtuv1 #Joam-Tuv
			location = province:1578 #Joam 
		}
		modifier = sword_joam_tuv_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sword_joam_tuv
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_forestel_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = forestel_name
		description = forestel_description
		type = axe
		visuals = forestel
		template = forestel_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 5330.1.1
			recipient = character:lineofanarion27 #Eldacar
			location = province:202 #Osgiliath
		}
		modifier = forestel_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = forestel
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_scroll_of_isildur_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = scroll_of_isildur_name
		description = scroll_of_isildur_description
		type = pedestal
		visuals = scroll_of_isildur
		template = scroll_of_isildur_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4034.1.1
			recipient = character:lineisildur0 #Isildur
			location = province:199 #Minas Tirith
		}
		modifier = scroll_of_isildur_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = scroll_of_isildur
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_statue_of_elros_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = statue_of_elros_name
		description = statue_of_elros_description
		type = sculpture
		visuals = statue_of_elros
		#template = statue_of_elros_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 4133.1.1
			recipient = character:lineofanarion5 #Meneldil
			location = province:199 #Minas Tirith
		}
		modifier = statue_of_elros_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = statue_of_elros
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_aldarion_erendis_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = aldarion_erendis_name
		description = aldarion_erendis_description
		type = book
		visuals = aldarion_erendis
		template = aldarion_erendis_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 3892.1.1
			recipient = character:lineofelendil #Elendil
			location = province:202 #Osgiliath
		}
		modifier = aldarion_erendis_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = aldarion_erendis
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_giant_bear_pelt_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = giant_bear_pelt_name
		description = giant_bear_pelt_description
		type = wall_big
		visuals = giant_bear_pelt
		wealth = scope:wealth
		quality = scope:quality
		modifier = giant_bear_pelt_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = giant_bear_pelt
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_fram_spear_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = fram_spear_name
		description = fram_spear_description
		type = spear
		visuals = fram_spear
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6033.11.11
			recipient = character:linefram6 # Fram the Dragonslayer
			location = province:3171 # Framsburg
		}
		modifier = fram_spear_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = fram_spear
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_axe_faderda_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = axe_faderda_name
		description = axe_faderda_description
		type = axe
		visuals = axe_faderda
		wealth = scope:wealth
		quality = scope:quality
		modifier = axe_faderda_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = axe_faderda
		set_variable = relic
		save_scope_as = epic
	}
}

create_artifact_crown_ovatha_great_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = crown_ovatha_great_name
		description = crown_ovatha_great_description
		type = pedestal
		visuals = crown_ovatha_great
		template = crown_ovatha_great_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6000.1.1
			recipient = character:lineofskakali1 #Ôvatha VI
			location = province:2446 #Starlustsa Khand
			
		}
		modifier = crown_ovatha_great_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = crown_ovatha_great
		set_variable = {
			name = artifact_succession_title
			value = title:e_khand
		}
		set_variable = relic
		save_scope_as = epic
	}
}

create_narmacil_standard_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = narmacil_standard_name
		description = narmacil_standard_description
		type = wall_big
		visuals = tapestry
		visuals_source = title:e_gondor
		template = narmacil_standard_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 5883.1.1
			recipient = character:lineofanarion39 #Narmacil II
			location = province:199 #Minas Tirith
			
		}
		modifier = narmacil_standard_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = narmacil_standard
		set_variable = relic
		save_scope_as = epic
	}
}

create_ondoher_campaign_bed_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = ondoher_campaign_bed_name
		description = ondoher_campaign_bed_description
		type = cabinet
		visuals = diwan
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 5969.1.1
			recipient = character:lineofanarion41 #Narmacil II
			location = province:199 #Minas Tirith
			
		}
		modifier = ondoher_campaign_bed_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ondoher_campaign_bed
		save_scope_as = epic
	}
}

create_conquerors_war_chest_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = conquerors_war_chest_name
		description = conquerors_war_chest_description
		type = chest
		visuals = chest
		template = conquerors_war_chest_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6431.12.22
			recipient = character:lineofpultai1 #Narmacil II
			location = province:3635 #Mistrand
			
		}
		modifier = conquerors_war_chest_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = conquerors_war_chest
		set_variable = relic
		save_scope_as = epic
	}
}

### Nelornieth chain artifacts ###

create_lasgalendrim_spear_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	$CREATOR$ = { save_scope_as = creator }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = lasgalendrim_spear_name
		description = lasgalendrim_spear_description
		type = spear
		visuals = lasgalendrim_spear
		wealth = scope:wealth
		quality = scope:quality
		modifier = lasgalendrim_spear_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
}

create_galadhrim_bow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	$CREATOR$ = { save_scope_as = creator }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = galadhrim_bow_name
		description = galadhrim_bow_description
		type = bow
		visuals = galadhrim_bow
		wealth = scope:wealth
		quality = scope:quality
		modifier = galadhrim_bow_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
}

# Gondorian common #

create_artifact_guard_citadel_helm_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = guard_citadel_helm_name
		description = guard_citadel_helm_description
		type = pedestal
		visuals = guard_citadel_helm
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		modifier = guard_citadel_helm_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = guard_citadel_helm
		set_variable = relic
		save_scope_as = epic
	}
}

# Hobbitses #

create_artifact_sting_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = sting_name
		description = sting_description
		type = dagger
		visuals = sting
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 118.1.1
			recipient = character:linefinwe21 #Turgon
		}
		modifier = sting_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = sting # Currently unused variable, can uncomment once used
		set_variable = elven
		set_variable = relic
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_red_book_of_westmarch_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = red_book_of_westmarch_name
		description = red_book_of_westmarch_description
		type = book
		visuals = red_book_of_westmarch
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 6975.1.1
			recipient = character:lineofbaggins12 #Bilbo
		}
		modifier = red_book_of_westmarch_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = red_book_of_westmarch # Currently unused variable, can uncomment once used
		equip_artifact_to_owner = yes
		save_scope_as = epic
	}
}

create_artifact_palantir_orthanc_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = palantir_orthanc_name
		description = palantir_orthanc_description
		type = pedestal
		visuals = palantir
		creator = character:linefinwe2 #Fëanor
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #Tirion
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = palantir_orthanc
		set_variable = palantir
		save_scope_as = epic
		add_artifact_history = {
			type = inherited
			date = 6792.8.30
			recipient = character:lineofsaruman
		}
	}
}

### Lindon artifacts ###

create_artifact_palantir_elostirion_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = palantir_elostirion_name
		description = palantir_elostirion_description
		creator = character:linefinwe2 #Fëanor
		type = pedestal
		visuals = palantir
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 2.2.1
			recipient = character:linefinwe2 #Fëanor
			location = province:3900 #Tirion
		}
		modifier = palantir_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = palantir_elostirion
		set_variable = palantir
		save_scope_as = epic
		add_artifact_history = { # Elendil, Landed in ME with faithful
			type = inherited
			date = 3912.1.1
			recipient = character:lineofelendil
		}
		add_artifact_history = { # Isildur, First High King of Arnor
			type = inherited
			date = 4033.7.12
			recipient = character:lineisildur0
		}
		add_artifact_history = { # Valandil
			type = inherited
			date = 4035.10.5
			recipient = character:lineisildur4
		}
		add_artifact_history = { # Eldacar
			type = inherited
			date = 4282.9.29 
			recipient = character:lineisildur5
		}
		add_artifact_history = { # Arantar
			type = inherited
			date = 4372.1.19 
			recipient = character:lineisildur6
		}
		add_artifact_history = { # Tarcil
			type = inherited
			date = 4468.5.12 
			recipient = character:lineisildur7
		}
		add_artifact_history = { # Tarondor
			type = inherited
			date = 4548.12.9
			recipient = character:lineisildur8
		}
		add_artifact_history = { # Valandur
			type = inherited
			date = 4635.2.27
			recipient = character:lineisildur9
		}
		add_artifact_history = { # Elendur
			type = inherited
			date = 4685.4.24
			recipient = character:lineisildur10
		}
		add_artifact_history = { # Earendur, Last High King of Arnor
			type = inherited
			date = 4810.11.8 
			recipient = character:lineisildur11
		}
		add_artifact_history = { # Amlaith, First King of Arthedain
			type = inherited
			date = 4894.7.12
			recipient = character:lineisildur12
		}
		add_artifact_history = { # Beleg
			type = inherited
			date = 4979.3.5
			recipient = character:lineisildur13
		}
		add_artifact_history = { # Mallor
			type = inherited
			date = 5062.12.20
			recipient = character:lineisildur14
		}
		add_artifact_history = { # Celepharn
			type = inherited
			date = 5143.12.5
			recipient = character:lineisildur15
		}
		add_artifact_history = { # Celebrindor
			type = inherited
			date = 5224.8.29
			recipient = character:lineisildur16
		}
		add_artifact_history = { # Malvegil
			type = inherited
			date = 5305.2.19
			recipient = character:lineisildur17
		}
		add_artifact_history = { # Argeleb I
			type = inherited
			date = 5382.4.4
			recipient = character:lineisildur18
		}
		add_artifact_history = { #  Arveleg I
			type = inherited
			date = 5389.7.8
			recipient = character:lineisildur19
		}
		add_artifact_history = { # Araphor
			type = inherited
			date = 5442.5.22
			recipient = character:lineisildur20
		}
		add_artifact_history = { # Argeleb II
			type = inherited
			date = 5622.9.29
			recipient = character:lineisildur21
		}
		add_artifact_history = { # Arvegil
			type = inherited
			date = 5703.4.17
			recipient = character:lineisildur22
		}
		add_artifact_history = { # Arveleg II
			type = inherited
			date = 5776.8.21
			recipient = character:lineisildur23
		}
		add_artifact_history = { #  Araval
			type = inherited
			date = 5846.6.30
			recipient = character:lineisildur24
		}
		add_artifact_history = { # Araphant 
			type = inherited
			date = 5924.11.20
			recipient = character:lineisildur25
		}
		add_artifact_history = { # Arvedui, Last King of Arthedain
			type = inherited
			date = 5997.7.2
			recipient = character:lineisildur26
		}
		add_artifact_history = { # Cirdan the Shipwright
			type = inherited
			date = 6008.12.24
			recipient = character:lineofcirdan
		}
	}
}