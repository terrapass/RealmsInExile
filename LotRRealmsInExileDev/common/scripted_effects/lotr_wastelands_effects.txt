####################
# Wastelands: effects 
####################

# Returns colony to a Wilderness / Wastelands
make_settlement_county_wilderness = {
	$COUNTY$ = {
		hidden_effect = {
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = change
			}
			change_title_holder = {
				holder = character:k_wastelands_holder
				change = scope:change
				take_baronies = yes
			}
			resolve_title_and_vassal_change = scope:change
			set_county_faith = faith:faith_wastelands_pagan
			set_county_culture = culture:wastelands
			generate_coa = yes

		}
		every_county_province = {
			limit = {
				has_holding = yes
				has_holding_type = settlement_holding		
			}
			set_holding_type = wastelands_holding
		}
	}
}

# Removes traits from wastelands
# Makes wasteland rulers almost immortal
# Makes sure it's an adult, since non-adult always have clothes by default that can't be hidden
remove_traits_wastelands_effect = {
	every_living_character = {
		limit = {
			has_culture = culture:wastelands
		}
        clear_traits = yes
        add_trait = wastelands
	}			
	every_living_character = {
		limit = {
			has_culture = culture:wastelands
			age < 25
		}        
		change_age = 25
	}	
}

# Destroy "Wilderness" characters that are created
# They can't be sent to anywhere else, since they don't have portrait
empty_wastelands_inhabitants_effect = {
	every_living_character = {
		limit = {
			is_independent_ruler = no
			has_culture = culture:wastelands
		}
		death = {
			death_reason = death_vanished
		}
		every_traveling_family_member = {
			limit = {
				is_alive = yes
			}
			death = {
				death_reason = death_vanished
			}
		}
	}		
}

# Sends visitors somewhere else (a neighbouring capital county)
empty_foreign_visitors_to_wastelands_effect = {
	if = {
		limit = {
			exists = scope:host
			scope:host = { has_culture = culture:wastelands }
		}
		random_neighboring_and_across_water_top_liege_realm_owner = { #Select realm
			limit = {
				exists = capital_province
				capital_province = { local_pool_is_full_trigger = no }
				NOT = {
					has_culture = culture:wastelands
				}
			}
			capital_province = { save_scope_as = destination }
		}
		every_traveling_family_member = {
			if = {
				limit = {
					exists = scope:destination
					NOT = { is_in_pool_at = scope:destination }
				}
				move_to_pool_at = scope:destination			
			}
			else = {				
				fallback_move_to_pool_effect = yes					
			}
		}
	}	
}

# Colonise a wastelands county
ai_colonisation_effect = {
	$WASTELANDS$ = { save_scope_as = wastelands }
	debug_log = "lotr_wastelands_effects: -- COLONISATION STARTED!"
		
	scope:wastelands.county = {
		save_scope_as = wastelands_holder_title
	}
	scope:wastelands_holder_title.holder = {
		save_scope_as = wastelands_holder
	}

	# if = {
	# 	limit = {
	# 		scope:wastelands_holder = { has_character_modifier = easy_arnor_settle }
	# 	}
	# 	scope:wastelands_holder_title = {
	# 		add_county_modifier = { modifier = arnor_settler_influx }
	# 	}
	# }
	
	remove_short_term_gold = colonise_cost_val
	
	create_title_and_vassal_change = {
  		type = granted
  		save_scope_as = change
	}
 	
	scope:wastelands_holder_title = {
	  	change_title_holder = {
			holder = root
			change = scope:change
			take_baronies = yes
		}
		set_county_faith = root.faith
		if = { # If nazgul settles
			limit = {
				root = { is_nazgul = yes }
			}
			set_county_culture = culture:ungurhai
		}
		else_if = { # If Good Saruman settles
			limit = {
				root = { is_good_istari = yes }
			}
			set_county_culture = culture:isengard_dunlending
		}
		else_if = { # If evil Saruman settles
			limit = {				
				root = { is_evil_istari = yes }
			}
			set_county_culture = culture:isengard_urukhai
		}
		else_if = { # If Sauron settles
			limit = {				
				root = { is_maiar_fallen = yes }
			}
			set_county_culture = culture:morlughai
		}
		else = { # Otherwise set to root culture
			set_county_culture = root.culture
		}
 	}
	
	resolve_title_and_vassal_change = scope:change
	
	scope:wastelands_holder_title = {
		generate_coa = yes
		#set_color_from_title = scope:wastelands_holder_title.de_jure_liege
		scope:wastelands_holder_title = { # Swap holding type to settlement holding as soon as county is colonised
			every_county_province = {
				limit = {
					has_holding = yes
					has_holding_type = wastelands_holding			
				}
				set_holding_type = settlement_holding
			}
			every_county_province = {
				barony = { generate_coa = yes }
			}
		}
	}	
	debug_log = "lotr_wastelands_effects: -- COLONISATION FINISHED!"
}

halve_development = {
	change_development_level = {
		subtract = county.development_level
		divide = 2
	}
}

