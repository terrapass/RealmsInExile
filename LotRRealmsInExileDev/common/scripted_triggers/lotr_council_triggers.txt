dorwinion_opposite_faction_trigger = {
	trigger_if = {
		limit = { dynasty = { has_dynasty_modifier = winelords } }
		$PERSON$.dynasty = { has_dynasty_modifier = master_merchants }
	}
	trigger_else_if = {
		limit = { dynasty = { has_dynasty_modifier = master_merchants } }
		$PERSON$.dynasty = { has_dynasty_modifier = winelords }
	}
	trigger_else = { always = no }
}

# Works with the assumption that a list is stored on a character
positive_vote_has_opposite_faction_members = {
	$LIST_HOLDER$ = {
		trigger_if = {
			limit = {
				root.dyansty = { has_dynasty_modifier = winelords }
				any_in_list = {
					variable = positive_vote
					dynasty = { has_dynasty_modifier = master_merchants }
				}
			}
			always = yes
		}
		trigger_else_if = {
			limit = { 
				root.dyansty = { has_dynasty_modifier = master_merchants }
				any_in_list = {
					variable = positive_vote
					dynasty = { has_dynasty_modifier = winelords }
				}
			}
			always = yes
		}
		trigger_else = {
			always = no
		}
	}
}

# Works with the assumption that a list is stored on a character
negative_vote_has_opposite_faction_members = {
	$LIST_HOLDER$ = {
		trigger_if = {
			limit = {
				root.dyansty = { has_dynasty_modifier = winelords }
				any_in_list = {
					variable = negative_vote
					dynasty = { has_dynasty_modifier = master_merchants }
				}
			}
			always = yes
		}
		trigger_else_if = {
			limit = { 
				root.dyansty = { has_dynasty_modifier = master_merchants }
				any_in_list = {
					variable = negative_vote
					dynasty = { has_dynasty_modifier = winelords }
				}
			}
			always = yes
		}
		trigger_else = {
			always = no
		}
	}
}

# Person who proposed vote, are they of same or opposite faction
proposee_in_opposite_faction = {
	dorwinion_opposite_faction_trigger = { PERSON = $PROPOSEE$ }
}

# Person in war is my friend/rival
targeted_title_ruler_is_friend = {
	$WAR$.casus_belli = {
		trigger_if = {
			limit = { primary_defender = $ACTOR$ }
			primary_attacker = { has_relation_friend = root }
		}
		trigger_else = { always = no }
	}
}

# Person in war is my best friend/lover/nemesis
targeted_title_ruler_is_best_friend_or_lover = {
	$WAR$.casus_belli = {
		trigger_if = {
			limit = { primary_defender = $ACTOR$ }
			primary_attacker = {
				OR = {
					has_relation_lover = root
					has_relation_best_friend = root
				}
			}
		}
		trigger_else = { always = no }
	}
}

# Person in war is my best friend/lover/nemesis
targeted_title_ruler_is_rival = {
	$WAR$.casus_belli = {
		trigger_if = {
			limit = { primary_attacker = $ACTOR$ }
			primary_defender = { has_relation_rival = root }
		}
		trigger_else = { always = no }
	}
}

# Person in war is my best friend/lover/nemesis
targeted_title_ruler_is_nemesis = {
	$WAR$.casus_belli = {
		trigger_if = {
			limit = { primary_attacker = $ACTOR$ }
			primary_defender = { has_relation_nemesis = root }
		}
		trigger_else = { always = no }
	}
}

character_is_on_a_council = {
	OR = {
		this = global_var:dorinion_council_member_1
		this = global_var:dorinion_council_member_2
		this = global_var:dorinion_council_member_3
		this = global_var:dorinion_council_member_4
		this = global_var:dorinion_council_member_5
		this = global_var:dorinion_council_member_6
		this = global_var:dorinion_council_member_7
	}
}