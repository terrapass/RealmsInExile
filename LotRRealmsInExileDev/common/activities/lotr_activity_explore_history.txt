# Exploring Histories activity

activity_explore_history = {

	# is_shown = {
		# is_landed = yes
		# highest_held_title_tier > tier_barony
		# is_in_valinor = no
		# OR = {
			# AND = {
				# religion = { is_in_family = rf_eruhini }
				# OR = {
					# lotr_has_numenorean_culture_trigger = yes
					# is_eldar = yes
				# }
			# }
			# faith = {
				# has_doctrine = tenet_adunaic_birthright
			# }
		# }
	# }
	
	# can_start_showing_failures_only = {
		# is_available_adult = yes
	# }
	
	# is_valid = {
		# scope:host = {
			# is_alive = yes
			# is_capable_adult = yes
			# is_imprisoned = no
			# is_landed = yes
			# NOT = { is_incapable = yes }
		# }
		##Converting mid-exploratiion is a big no-no.
		# scope:activity = {
			# OR = {
				# NOT = { has_variable = starting_faith }
				# scope:host.faith = var:starting_faith
			# }
		# }
	# }
	
	# on_host_death = {
		# every_attending_character = {
			# limit = { is_alive = yes }
			# trigger_event = {
				id = feast.5003
				# id = explore_history.0063
				# days = 1 # So you don't get spammed
			# }
		# }
		##Code sends your entourage home on invalidated
		# scope:activity.var:host_var = {
			##Saving the title for loc
			# primary_title = { save_scope_as = host_title }
			##Inform your heir if you have one
			# player_heir ?= {
				# trigger_event = {
					##id = feast.0800
					# id = explore_history.0070
					# days = 1
				# }
			# }
		# }
	# }
	
	# on_invalidated = {
		# if = {
			# limit = {
				# scope:host = { is_imprisoned = yes }
			# }
			##Host has been imprisoned
			# every_attending_character = {
				# limit = {
					# NOT = { this  = scope:host }
				# }
				##trigger_event = feast.5005
				# trigger_event = explore_history.0065
			# }
			# scope:host = { 
				##trigger_event = feast.5004 
				# trigger_event = explore_history.0064
			# }
		# }
		# if = {
			# limit = {
				# scope:host = { is_incapable = yes }
			# }
			# scope:activity = {
				# activity_type = { save_scope_as = activity_type }
			# }
			# scope:host = {
				# trigger_event = activity_system.0330
			# }
			# every_attending_character = {
				# limit = { NOT = { this = scope:host } }
				# trigger_event = activity_system.0331
			# }
		# }
		##Host becomes unlanded
		# if = {
			# limit = {
				# scope:host = { is_landed = no }
			# }
			# scope:activity = {
				# activity_type = { save_scope_as = activity_type }
			# }
			# every_attending_character = {
				# trigger_event = activity_system.0320
			# }
		# }
	# }
	
	# is_location_valid = {
		# has_holding = yes
	
		##You only get to visit any particular archive once every 5 years
		# custom_tooltip = { 
			# text = activity_explore_history.is_location_valid.recently_visited
			# NOT = {
				# scope:host = {
					# any_memory = {
						# has_variable = history_destination
						# var:explore_history_destination = root #root is the province we're checking
						# NOT = { scope:host.capital_province = root }
						# memory_age_years < 5
					# }
				# }
			# }
		# }
		
		##You cannot consult the archives of a hostile faith ruler
		# custom_tooltip = { 
			# text = activity_explore_history.is_location_valid.wrong_holder_faith
			# trigger_if = {
				# limit = { scope:host.religion = { is_in_family = rf_eruhini } }
				# var:explore_history_destination.holder = { faith_is_good = yes }
			# }
			# trigger_else = {
				# var:explore_history_destination.holder = { faith_is_good = no }
			# }
		# }

		##If you are supposed to be the realm's reserve ruler, then you can't take a foreign trip.
		# trigger_if = {
			# limit = {
				# scope:host = { bannable_serving_diarch_trigger = yes }
				# NOT = { scope:host.capital_province = root }
			# }
			# custom_tooltip = {
				# text = activity_explore_history.serving_diarch
				# county.holder = {
					# any_liege_or_above = { this = scope:host.liege }
				# }
			# }
		# }
	# }
	
	
	##Defining appropriate locations
	# every_in_list = {
		# list = realm
		# add_to_list = archives
	# }
	
	# if = {
		# limit = { scope:host = { is_human = yes } }
		# province:199 = { add_to_list = archives } #Minas Tirith
		# province:315 = { add_to_list = archives } #Dol Amroth
		# province:264 = { add_to_list = archives } #Pelargir
		# province:20 = { add_to_list = archives } #Isengard
		# if = {
			# limit = {
				# province:202 = { has_building = wonder_osgiliath_05 }
				# province:203 = { has_building = wonder_osgiliath_05 }
			# }
			# province:202 = { add_to_list = archives } #Osgiliath
		# }
		# if = {
			# limit = {
				# title:c_minas_ithil = {
					# NOR = { 
						# has_county_modifier = morgul_corruption_modifier
						# has_county_modifier = fading_morgul_corruption_modifier
					# }
				# }
			# }
			# province:226 = { add_to_list = archives } #Minas Ithil
		# }
		##Annuminas
		##Fornost
		# province:2493 = { add_to_list = archives } #Zadan an-Adûn
		# province:2513 = { add_to_list = archives } #Kadar an-Kharadûn
		# province:819 = { add_to_list = archives } #Umbar
		# province:1791 = { add_to_list = archives } #Nilulonde
		# province:1644 = { add_to_list = archives } #Korlea
		# province:1542 = { add_to_list = archives } #Hazaj Tollin
		# province:1731 = { add_to_list = archives } #Urezayan
	# }
	# else_if = {
		# limit = { scope:host = { is_elf = yes } }
		# province:3108 = { add_to_list = archives } #Caras Galadhon
		# province:3216 = { add_to_list = archives } #Aradhrynd
		# province:3338 = { add_to_list = archives } #Amon Lanc
		# province:420 = { add_to_list = archives } #Edhellond
		##Imladris
		##Mithlond
		##Ost-in-Edhil
	# }
	
	
	
	###################
	# PARAMETERS
	###################

	# is_grand_activity = no
	# is_single_location = yes

	# province_filter = archives
	# ai_province_filter = capital

	# max_route_deviation_mult = 2.0

	# is_location_valid = {
		# has_holding = yes
	# }

	solo = yes
	color = { 0.253906 0.867188 0.105469 1 }
	on_spawn = {
		invite_character_to_activity = activity_owner
		accept_invitation_for_character = activity_owner

	}
	on_activate = {
		activity_owner = {
			trigger_event = {
				on_action = explore_history_setup # On-action starting the history exploration events
			}
		}
	}
}