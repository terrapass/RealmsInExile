depose_dictator_war = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = none
	allowed_for_character = {
		exists = scope:attacker.house.var:titular_republic
		exists = scope:defender.house.var:titular_republic

		scope:attacker.house.var:titular_republic = { has_variable = forced_dictatorship NOT = { has_variable = limited_dictatorship } }
	}

	allowed_against_character = {
		scope:attacker.liege = scope:defender
		scope:attacker.house.var:titular_republic = scope:defender.house.var:titular_republic
	}

	cost = {
		prestige = 500
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
		always = yes
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_victory_desc_defender
			}
			desc = depose_dictator_war_victory_desc
		}
		
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
			}
		}

		scope:defender = {
			# If we win the rebellion, our liege loses any legal right to imprison us/banish us/revoke our titles.
			consume_all_criminal_reasons_effect = {
				LIEGE = scope:defender
				CRIMINAL = scope:attacker
			}
			# Remove offending HumSac modifiers.
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
			# Then our liege is deposed (but the imprisonment loss remains true for their heir).
			if = {
				limit = { exists = house.var:titular_republic }
				house.var:titular_republic = {
					custom_description = {
						text = effect_trigger_election_cycle
						republic_succession = yes
					}
					custom_description = {
						text = effect_end_dictatorship
						remove_variable = current_dictatorship
						remove_variable = forced_dictatorship
					}
				}
			}
		}


	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_white_peace_desc_defender
			}
			desc = depose_dictator_war_white_peace_desc
		}
		
	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
			if = {
				limit = { exists = house.var:titular_republic }
				house.var:titular_republic = {
					custom_description = {
						text = effect_limit_dictatorship
						set_variable = limited_dictatorship
					}
				}
			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = depose_dictator_war_defeat_desc_defender
			}
			desc = depose_dictator_war_defeat_desc
		}
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
		}
		scope:attacker = {
			if = {
				limit = {
					is_imprisoned = no
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:defender
				}
				scope:defender = {
					add_opinion = {
						target = prev
						modifier = vassal_lost_faction_revolt_war
					}
				}
			}
		}
	}
	
	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DEPOSE_DICTATOR_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
}

republican_faction_war = {
	group = civil_war
	ai_only_against_liege = yes
	allowed_for_character = {
		scope:attacker = {
			is_leading_faction_type = republican_faction
		}
	}

	allowed_against_character = {
		scope:attacker = {
			liege = scope:defender
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
	}

	on_declaration = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = republican_war_victory_defender_desc
			}
			desc = republican_war_victory_desc
		}
		desc = republican_war_victory_end_desc
		
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			every_vassal = {
				save_scope_as = person
				scope:defender = {
					add_to_variable_list = {
						name = to_send_over
						target = scope:person
					}
				}
			}
			capital_county = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
			if = {
				limit = { scope:defender = { highest_held_title_tier = tier_empire } }
				set_variable = {
					name = top_tier
					value = 5
				}
			}
			if = {
				limit = { scope:defender = { highest_held_title_tier = tier_kingdom } }
				set_variable = {
					name = top_tier
					value = 4
				}
			}
			if = {
				limit = { scope:defender = { highest_held_title_tier = tier_duchy } }
				set_variable = {
					name = top_tier
					value = 3
				}
			}
			primary_title = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
			every_held_title = {
				limit = { tier = scope:defender.var:top_tier }
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			every_in_list = {
				variable = to_send_over
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			clear_variable_list = to_send_over
		}
		if = {
			limit = { scope:defender = { is_landed = yes } }
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		scope:attacker = {
			change_government = republic_government
			set_up_elected_ruler_republic = yes
			add_family_to_republic_families = yes
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
				joined_faction = {
					save_scope_as = saved_faction
					add_faction_discontent = -200
					every_faction_member = {
						if = {
							limit = {
								exists = scope:attacker.joined_faction # Can get destroyed as we loop through
							}
							if = { limit = { is_house_head = yes } add_family_to_republic_families = yes }
							leave_faction_with_cooldown_effect = {
								FACTION = scope:attacker.joined_faction
								YEARS = liberty_war_victory_cooldown
							}
						}
						else = {
							add_faction_cooldown_effect = { YEARS = liberty_war_victory_cooldown }
						}
					}
				}
				# The faction should have already been destroyed due to all members leaving above, but in case it hasn't, destroy it now. 
				if = {
					limit = { exists = scope:saved_faction }
					scope:saved_faction = {
						destroy_faction = yes
					}
				}
			}
		}	
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = republican_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = republican_war_white_peace_attacker_desc
			}
			desc = republican_war_white_peace_desc
		}
		desc = republican_war_white_peace_end_desc
		
	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
				joined_faction = {
					add_faction_discontent = -200
				}
			}
		}
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
			add_character_flag = {
				flag = recent_republican_faction_war
				years = faction_war_white_peace_cooldown
			}
		}
		on_white_peace_faction_revolt_war = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = liberty_war_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = republican_war_defeat_attacker_desc
			}
			desc = republican_war_defeat_desc
		}
		desc = republican_war_defeat_end_desc
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_character_flag = {
				flag = recent_republican_faction_war
				years = faction_war_defeat_cooldown
			}
			add_dread = medium_dread_gain
			add_achievement_flag_effect = { FLAG = achievement_know_your_place_flag }
		}
		on_lost_faction_revolt_war = yes
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit_faction
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = no
	defender_allies_inherit = yes

	war_name = "REPUBLICAN_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}

peasant_rp_war = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = claim
	allowed_for_character =	{
		scope:attacker = {
			is_leading_faction_type = peasant_republican_faction
		}
	}

	allowed_against_character = {
		any_in_list = {
			list = target_titles
			OR = {
				NOT = { exists = holder }
				holder = scope:defender
			}
		}
	}

	target_de_jure_regions_above = yes
	target_top_liege_if_outside_realm = no

	valid_to_start = {
	}

	should_invalidate = {
		NOT = {
			scope:attacker = {
				has_variable = rebel_leader_peasants
				exists = joined_faction
				joined_faction = var:rebel_leader_peasants
			}
		}
	}

	on_declaration = {
		#on_declared_war = yes

		scope:defender = {
			add_opinion = {
				modifier = peasant_revolt_opinion
				target = scope:attacker
			}
		}
	}

	on_victory_desc = {
		desc = peasant_rp_war_victory_desc
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		scope:defender = {
			every_vassal = {
				save_scope_as = person
				scope:defender = {
					add_to_variable_list = {
						name = to_send_over
						target = scope:person
					}
				}
			}
			capital_county = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
			if = {
				limit = { scope:defender = { highest_held_title_tier = tier_empire } }
				set_variable = {
					name = top_tier
					value = 5
				}
			}
			primary_title = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
			every_held_title = {
				change_title_holder = {
					holder = scope:attacker
					change = scope:title_change
				}
			}
		}
		resolve_title_and_vassal_change = scope:title_change
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		scope:defender = {
			every_in_list = {
				variable = to_send_over
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			clear_variable_list = to_send_over
		}
		if = {
			limit = { scope:defender = { is_landed = yes } }
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		scope:attacker = {
			change_government = republic_government
			set_up_bicameral_republic = yes
			add_realm_law = city_succession_law
			add_family_to_republic_families = yes
			effect_create_personal_army = yes
			imprison = { target = scope:defender }
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
			}
		}
	}

	on_white_peace_desc = {
		desc = peasant_rp_war_white_peace_desc
	}

	on_white_peace = {
		scope:attacker = { 
			show_pow_release_message_effect = yes
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}
		scope:attacker = {
			joined_faction = {
				destroy_faction = yes
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
	}

	on_defeat_desc = {
		desc = peasant_rp_war_defeat_desc
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_character_flag = peasant_revolt_do_not_kill
			remove_variable = rebel_leader_peasants
		}
		scope:attacker = {
			joined_faction = {
				every_faction_county_member = {
					custom = peasant_faction_every_county
					add_county_modifier = {
						modifier = county_increased_opinion_modifier
						years = 25
					}
				}
				destroy_faction = yes
			}
		}
		scope:defender = {
			if = {
				limit = {
					NOT = { #In case defender has changed
						has_opinion_modifier = {
							modifier = peasant_revolt_opinion
							target = scope:attacker
						}
					}
				}
				add_opinion = {
					modifier = peasant_revolt_opinion
					target = scope:attacker
				}
			}
			if = {
				limit = {
					scope:attacker = { is_imprisoned = no }
				}
				imprison = {
					target = scope:attacker
					type = dungeon
				}
			}
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = no
	defender_allies_inherit = yes

	war_name = "PEASANT_RP_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}